{
	"id": "35e67d4c3a4f958322a83a9005e3a734",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"TOKEN SWAP/Test.sol": {
				"content": "\r\n// SPDX-License-Identifier: MIT\r\n\r\n// File: @uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\r\n\r\n\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Callback for IUniswapV3PoolActions#swap\r\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\r\ninterface IUniswapV3SwapCallback {\r\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\r\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\r\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\r\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\r\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\r\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\r\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\r\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\r\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\r\n    function uniswapV3SwapCallback(\r\n        int256 amount0Delta,\r\n        int256 amount1Delta,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n\r\n// File: @uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\r\n\r\n\r\npragma solidity >=0.7.5;\r\npragma abicoder v2;\r\n\r\n\r\n/// @title Router token swapping functionality\r\n/// @notice Functions for swapping tokens via Uniswap V3\r\ninterface ISwapRouter is IUniswapV3SwapCallback {\r\n    struct ExactInputSingleParams {\r\n        address tokenIn;\r\n        address tokenOut;\r\n        uint24 fee;\r\n        address recipient;\r\n        uint256 deadline;\r\n        uint256 amountIn;\r\n        uint256 amountOutMinimum;\r\n        uint160 sqrtPriceLimitX96;\r\n    }\r\n\r\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\r\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\r\n    /// @return amountOut The amount of the received token\r\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\r\n\r\n    struct ExactInputParams {\r\n        bytes path;\r\n        address recipient;\r\n        uint256 deadline;\r\n        uint256 amountIn;\r\n        uint256 amountOutMinimum;\r\n    }\r\n\r\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\r\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\r\n    /// @return amountOut The amount of the received token\r\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\r\n\r\n    struct ExactOutputSingleParams {\r\n        address tokenIn;\r\n        address tokenOut;\r\n        uint24 fee;\r\n        address recipient;\r\n        uint256 deadline;\r\n        uint256 amountOut;\r\n        uint256 amountInMaximum;\r\n        uint160 sqrtPriceLimitX96;\r\n    }\r\n\r\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\r\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\r\n    /// @return amountIn The amount of the input token\r\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\r\n\r\n    struct ExactOutputParams {\r\n        bytes path;\r\n        address recipient;\r\n        uint256 deadline;\r\n        uint256 amountOut;\r\n        uint256 amountInMaximum;\r\n    }\r\n\r\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\r\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\r\n    /// @return amountIn The amount of the input token\r\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n\r\n// File: Scroll Sepolia/TokenSwap.sol\r\n\r\n\r\npragma solidity ^0.8.24;\r\n \r\n// Importing the necessary interfaces and libraries\r\n\r\n\r\n \r\ncontract SimpleTokenSwap {\r\n    ISwapRouter public swapRouter;\r\n    address public WETH;\r\n \r\n    // Setting the Uniswap Router address and WETH address in the constructor\r\n    constructor(address _swapRouter, address _WETH) {\r\n        swapRouter = ISwapRouter(_swapRouter);\r\n        WETH = _WETH;\r\n    }\r\n \r\n    // Create a swap function that takes input and output token addresses,\r\n    // the input amount, the minimum output amount, and the recipient's address\r\n    function swap(\r\n        address tokenIn,\r\n        address tokenOut,\r\n        uint256 amountIn,\r\n        uint256 amountOutMinimum,\r\n        address recipient\r\n    ) external {\r\n        // Transfer the input tokens from the sender to the contract\r\n        require(IERC20(tokenIn).transferFrom(msg.sender, address(this), amountIn), \"Transfer failed\");\r\n \r\n        // Approve the Uniswap router to spend the input tokens\r\n        require(IERC20(tokenIn).approve(address(swapRouter), amountIn), \"Approval failed\");\r\n \r\n        // Create the swap parameters\r\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\r\n            tokenIn: tokenIn,\r\n            tokenOut: tokenOut,\r\n            fee: 3000, // Using a 0.3% fee tier\r\n            recipient: recipient,\r\n            deadline: block.timestamp,\r\n            amountIn: amountIn,\r\n            amountOutMinimum: amountOutMinimum,\r\n            sqrtPriceLimitX96: 0\r\n        });\r\n \r\n        // Call the Uniswap router's exactInputSingle function to execute the swap\r\n        uint256 amountOut = swapRouter.exactInputSingle(params);\r\n \r\n        require(amountOut >= amountOutMinimum, \"Insufficient output amount\");\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"TOKEN SWAP/Test.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOKEN SWAP/Test.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOKEN SWAP/Test.sol\":{\"keccak256\":\"0x29a49e2a5e680dcf5d2e790acaf919315a890985eabef404f509a9412c4a3272\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f2a7eeb299a9ef534c144c8f6edc4cfbb4eb81d96b2abf7667127585e0be88\",\"dweb:/ipfs/QmNswAyponvrfEPtNQ8Eg1SyrwibnBWFAU28cQgGeFUtNg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOKEN SWAP/Test.sol\":\"ISwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOKEN SWAP/Test.sol\":{\"keccak256\":\"0x29a49e2a5e680dcf5d2e790acaf919315a890985eabef404f509a9412c4a3272\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f2a7eeb299a9ef534c144c8f6edc4cfbb4eb81d96b2abf7667127585e0be88\",\"dweb:/ipfs/QmNswAyponvrfEPtNQ8Eg1SyrwibnBWFAU28cQgGeFUtNg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				},
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOKEN SWAP/Test.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOKEN SWAP/Test.sol\":{\"keccak256\":\"0x29a49e2a5e680dcf5d2e790acaf919315a890985eabef404f509a9412c4a3272\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f2a7eeb299a9ef534c144c8f6edc4cfbb4eb81d96b2abf7667127585e0be88\",\"dweb:/ipfs/QmNswAyponvrfEPtNQ8Eg1SyrwibnBWFAU28cQgGeFUtNg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				},
				"SimpleTokenSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_swapRouter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_WETH",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TOKEN SWAP/Test.sol\":7146:8825  contract SimpleTokenSwap {... */\n  mstore(0x40, 0x80)\n    /* \"TOKEN SWAP/Test.sol\":7322:7449  constructor(address _swapRouter, address _WETH) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"TOKEN SWAP/Test.sol\":7406:7417  _swapRouter */\n  dup2\n    /* \"TOKEN SWAP/Test.sol\":7381:7391  swapRouter */\n  0x00\n  dup1\n    /* \"TOKEN SWAP/Test.sol\":7381:7418  swapRouter = ISwapRouter(_swapRouter) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"TOKEN SWAP/Test.sol\":7436:7441  _WETH */\n  dup1\n    /* \"TOKEN SWAP/Test.sol\":7429:7433  WETH */\n  0x01\n  0x00\n    /* \"TOKEN SWAP/Test.sol\":7429:7441  WETH = _WETH */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"TOKEN SWAP/Test.sol\":7322:7449  constructor(address _swapRouter, address _WETH) {... */\n  pop\n  pop\n    /* \"TOKEN SWAP/Test.sol\":7146:8825  contract SimpleTokenSwap {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"TOKEN SWAP/Test.sol\":7146:8825  contract SimpleTokenSwap {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TOKEN SWAP/Test.sol\":7146:8825  contract SimpleTokenSwap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xad5c4648\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd5bcb9b5\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TOKEN SWAP/Test.sol\":7214:7233  address public WETH */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TOKEN SWAP/Test.sol\":7178:7207  ISwapRouter public swapRouter */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TOKEN SWAP/Test.sol\":7615:8822  function swap(... */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"TOKEN SWAP/Test.sol\":7214:7233  address public WETH */\n    tag_7:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"TOKEN SWAP/Test.sol\":7178:7207  ISwapRouter public swapRouter */\n    tag_11:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"TOKEN SWAP/Test.sol\":7615:8822  function swap(... */\n    tag_17:\n        /* \"TOKEN SWAP/Test.sol\":7884:7891  tokenIn */\n      dup5\n        /* \"TOKEN SWAP/Test.sol\":7877:7905  IERC20(tokenIn).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"TOKEN SWAP/Test.sol\":7906:7916  msg.sender */\n      caller\n        /* \"TOKEN SWAP/Test.sol\":7926:7930  this */\n      address\n        /* \"TOKEN SWAP/Test.sol\":7933:7941  amountIn */\n      dup7\n        /* \"TOKEN SWAP/Test.sol\":7877:7942  IERC20(tokenIn).transferFrom(msg.sender, address(this), amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"TOKEN SWAP/Test.sol\":7869:7962  require(IERC20(tokenIn).transferFrom(msg.sender, address(this), amountIn), \"Transfer failed\") */\n      tag_25\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_26\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"TOKEN SWAP/Test.sol\":8056:8063  tokenIn */\n      dup5\n        /* \"TOKEN SWAP/Test.sol\":8049:8072  IERC20(tokenIn).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"TOKEN SWAP/Test.sol\":8081:8091  swapRouter */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TOKEN SWAP/Test.sol\":8094:8102  amountIn */\n      dup6\n        /* \"TOKEN SWAP/Test.sol\":8049:8103  IERC20(tokenIn).approve(address(swapRouter), amountIn) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_28\n      swap3\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_31:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_32:\n        /* \"TOKEN SWAP/Test.sol\":8041:8123  require(IERC20(tokenIn).approve(address(swapRouter), amountIn), \"Approval failed\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"TOKEN SWAP/Test.sol\":8176:8224  ISwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"TOKEN SWAP/Test.sol\":8227:8579  ISwapRouter.ExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"TOKEN SWAP/Test.sol\":8286:8293  tokenIn */\n      dup8\n        /* \"TOKEN SWAP/Test.sol\":8227:8579  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TOKEN SWAP/Test.sol\":8318:8326  tokenOut */\n      dup7\n        /* \"TOKEN SWAP/Test.sol\":8227:8579  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TOKEN SWAP/Test.sol\":8346:8350  3000 */\n      0x0bb8\n        /* \"TOKEN SWAP/Test.sol\":8227:8579  ISwapRouter.ExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TOKEN SWAP/Test.sol\":8401:8410  recipient */\n      dup4\n        /* \"TOKEN SWAP/Test.sol\":8227:8579  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TOKEN SWAP/Test.sol\":8435:8450  block.timestamp */\n      timestamp\n        /* \"TOKEN SWAP/Test.sol\":8227:8579  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TOKEN SWAP/Test.sol\":8475:8483  amountIn */\n      dup6\n        /* \"TOKEN SWAP/Test.sol\":8227:8579  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TOKEN SWAP/Test.sol\":8516:8532  amountOutMinimum */\n      dup5\n        /* \"TOKEN SWAP/Test.sol\":8227:8579  ISwapRouter.ExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TOKEN SWAP/Test.sol\":8566:8567  0 */\n      0x00\n        /* \"TOKEN SWAP/Test.sol\":8227:8579  ISwapRouter.ExactInputSingleParams({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"TOKEN SWAP/Test.sol\":8176:8579  ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({... */\n      swap1\n      pop\n        /* \"TOKEN SWAP/Test.sol\":8677:8694  uint256 amountOut */\n      0x00\n        /* \"TOKEN SWAP/Test.sol\":8697:8707  swapRouter */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TOKEN SWAP/Test.sol\":8697:8724  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x414bf389\n        /* \"TOKEN SWAP/Test.sol\":8725:8731  params */\n      dup4\n        /* \"TOKEN SWAP/Test.sol\":8697:8732  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"TOKEN SWAP/Test.sol\":8677:8732  uint256 amountOut = swapRouter.exactInputSingle(params) */\n      swap1\n      pop\n        /* \"TOKEN SWAP/Test.sol\":8767:8783  amountOutMinimum */\n      dup4\n        /* \"TOKEN SWAP/Test.sol\":8754:8763  amountOut */\n      dup2\n        /* \"TOKEN SWAP/Test.sol\":8754:8783  amountOut >= amountOutMinimum */\n      lt\n      iszero\n        /* \"TOKEN SWAP/Test.sol\":8746:8814  require(amountOut >= amountOutMinimum, \"Insufficient output amount\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"TOKEN SWAP/Test.sol\":7788:8822  {... */\n      pop\n      pop\n        /* \"TOKEN SWAP/Test.sol\":7615:8822  function swap(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_45:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_46:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_82\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_45\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_47:\n        /* \"#utility.yul\":328:352   */\n      tag_84\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_46\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_9:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_86\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_47\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:653   */\n    tag_48:\n        /* \"#utility.yul\":621:624   */\n      0x00\n        /* \"#utility.yul\":642:647   */\n      dup2\n        /* \"#utility.yul\":635:647   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":659:801   */\n    tag_49:\n        /* \"#utility.yul\":709:718   */\n      0x00\n        /* \"#utility.yul\":742:795   */\n      tag_89\n        /* \"#utility.yul\":760:794   */\n      tag_90\n        /* \"#utility.yul\":769:793   */\n      tag_91\n        /* \"#utility.yul\":787:792   */\n      dup5\n        /* \"#utility.yul\":769:793   */\n      tag_45\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":760:794   */\n      tag_48\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":742:795   */\n      tag_45\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":729:795   */\n      swap1\n      pop\n        /* \"#utility.yul\":659:801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":807:933   */\n    tag_50:\n        /* \"#utility.yul\":857:866   */\n      0x00\n        /* \"#utility.yul\":890:927   */\n      tag_93\n        /* \"#utility.yul\":921:926   */\n      dup3\n        /* \"#utility.yul\":890:927   */\n      tag_49\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":877:927   */\n      swap1\n      pop\n        /* \"#utility.yul\":807:933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":939:1084   */\n    tag_51:\n        /* \"#utility.yul\":1008:1017   */\n      0x00\n        /* \"#utility.yul\":1041:1078   */\n      tag_95\n        /* \"#utility.yul\":1072:1077   */\n      dup3\n        /* \"#utility.yul\":1041:1078   */\n      tag_50\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1028:1078   */\n      swap1\n      pop\n        /* \"#utility.yul\":939:1084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1090:1259   */\n    tag_52:\n        /* \"#utility.yul\":1196:1252   */\n      tag_97\n        /* \"#utility.yul\":1246:1251   */\n      dup2\n        /* \"#utility.yul\":1196:1252   */\n      tag_51\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1191:1194   */\n      dup3\n        /* \"#utility.yul\":1184:1253   */\n      mstore\n        /* \"#utility.yul\":1090:1259   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1265:1525   */\n    tag_13:\n        /* \"#utility.yul\":1377:1381   */\n      0x00\n        /* \"#utility.yul\":1415:1417   */\n      0x20\n        /* \"#utility.yul\":1404:1413   */\n      dup3\n        /* \"#utility.yul\":1400:1418   */\n      add\n        /* \"#utility.yul\":1392:1418   */\n      swap1\n      pop\n        /* \"#utility.yul\":1428:1518   */\n      tag_99\n        /* \"#utility.yul\":1515:1516   */\n      0x00\n        /* \"#utility.yul\":1504:1513   */\n      dup4\n        /* \"#utility.yul\":1500:1517   */\n      add\n        /* \"#utility.yul\":1491:1497   */\n      dup5\n        /* \"#utility.yul\":1428:1518   */\n      tag_52\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1265:1525   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1612:1729   */\n    tag_54:\n        /* \"#utility.yul\":1721:1722   */\n      0x00\n        /* \"#utility.yul\":1718:1719   */\n      dup1\n        /* \"#utility.yul\":1711:1723   */\n      revert\n        /* \"#utility.yul\":1858:1980   */\n    tag_56:\n        /* \"#utility.yul\":1931:1955   */\n      tag_104\n        /* \"#utility.yul\":1949:1954   */\n      dup2\n        /* \"#utility.yul\":1931:1955   */\n      tag_46\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1924:1929   */\n      dup2\n        /* \"#utility.yul\":1921:1956   */\n      eq\n        /* \"#utility.yul\":1911:1974   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":1970:1971   */\n      0x00\n        /* \"#utility.yul\":1967:1968   */\n      dup1\n        /* \"#utility.yul\":1960:1972   */\n      revert\n        /* \"#utility.yul\":1911:1974   */\n    tag_105:\n        /* \"#utility.yul\":1858:1980   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1986:2125   */\n    tag_57:\n        /* \"#utility.yul\":2032:2037   */\n      0x00\n        /* \"#utility.yul\":2070:2076   */\n      dup2\n        /* \"#utility.yul\":2057:2077   */\n      calldataload\n        /* \"#utility.yul\":2048:2077   */\n      swap1\n      pop\n        /* \"#utility.yul\":2086:2119   */\n      tag_107\n        /* \"#utility.yul\":2113:2118   */\n      dup2\n        /* \"#utility.yul\":2086:2119   */\n      tag_56\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1986:2125   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2131:2208   */\n    tag_58:\n        /* \"#utility.yul\":2168:2175   */\n      0x00\n        /* \"#utility.yul\":2197:2202   */\n      dup2\n        /* \"#utility.yul\":2186:2202   */\n      swap1\n      pop\n        /* \"#utility.yul\":2131:2208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2214:2336   */\n    tag_59:\n        /* \"#utility.yul\":2287:2311   */\n      tag_110\n        /* \"#utility.yul\":2305:2310   */\n      dup2\n        /* \"#utility.yul\":2287:2311   */\n      tag_58\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2280:2285   */\n      dup2\n        /* \"#utility.yul\":2277:2312   */\n      eq\n        /* \"#utility.yul\":2267:2330   */\n      tag_111\n      jumpi\n        /* \"#utility.yul\":2326:2327   */\n      0x00\n        /* \"#utility.yul\":2323:2324   */\n      dup1\n        /* \"#utility.yul\":2316:2328   */\n      revert\n        /* \"#utility.yul\":2267:2330   */\n    tag_111:\n        /* \"#utility.yul\":2214:2336   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2342:2481   */\n    tag_60:\n        /* \"#utility.yul\":2388:2393   */\n      0x00\n        /* \"#utility.yul\":2426:2432   */\n      dup2\n        /* \"#utility.yul\":2413:2433   */\n      calldataload\n        /* \"#utility.yul\":2404:2433   */\n      swap1\n      pop\n        /* \"#utility.yul\":2442:2475   */\n      tag_113\n        /* \"#utility.yul\":2469:2474   */\n      dup2\n        /* \"#utility.yul\":2442:2475   */\n      tag_59\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2342:2481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2487:3398   */\n    tag_16:\n        /* \"#utility.yul\":2582:2588   */\n      0x00\n        /* \"#utility.yul\":2590:2596   */\n      dup1\n        /* \"#utility.yul\":2598:2604   */\n      0x00\n        /* \"#utility.yul\":2606:2612   */\n      dup1\n        /* \"#utility.yul\":2614:2620   */\n      0x00\n        /* \"#utility.yul\":2663:2666   */\n      0xa0\n        /* \"#utility.yul\":2651:2660   */\n      dup7\n        /* \"#utility.yul\":2642:2649   */\n      dup9\n        /* \"#utility.yul\":2638:2661   */\n      sub\n        /* \"#utility.yul\":2634:2667   */\n      slt\n        /* \"#utility.yul\":2631:2751   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_116\n      tag_54\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2631:2751   */\n    tag_115:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_117\n        /* \"#utility.yul\":2860:2867   */\n      dup9\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup10\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_57\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2805:2868   */\n      swap6\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_118\n        /* \"#utility.yul\":2988:2995   */\n      dup9\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup10\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_57\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2933:2996   */\n      swap5\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":3045:3047   */\n      0x40\n        /* \"#utility.yul\":3071:3124   */\n      tag_119\n        /* \"#utility.yul\":3116:3123   */\n      dup9\n        /* \"#utility.yul\":3107:3113   */\n      dup3\n        /* \"#utility.yul\":3096:3105   */\n      dup10\n        /* \"#utility.yul\":3092:3114   */\n      add\n        /* \"#utility.yul\":3071:3124   */\n      tag_60\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3061:3124   */\n      swap4\n      pop\n        /* \"#utility.yul\":3016:3134   */\n      pop\n        /* \"#utility.yul\":3173:3175   */\n      0x60\n        /* \"#utility.yul\":3199:3252   */\n      tag_120\n        /* \"#utility.yul\":3244:3251   */\n      dup9\n        /* \"#utility.yul\":3235:3241   */\n      dup3\n        /* \"#utility.yul\":3224:3233   */\n      dup10\n        /* \"#utility.yul\":3220:3242   */\n      add\n        /* \"#utility.yul\":3199:3252   */\n      tag_60\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3189:3252   */\n      swap3\n      pop\n        /* \"#utility.yul\":3144:3262   */\n      pop\n        /* \"#utility.yul\":3301:3304   */\n      0x80\n        /* \"#utility.yul\":3328:3381   */\n      tag_121\n        /* \"#utility.yul\":3373:3380   */\n      dup9\n        /* \"#utility.yul\":3364:3370   */\n      dup3\n        /* \"#utility.yul\":3353:3362   */\n      dup10\n        /* \"#utility.yul\":3349:3371   */\n      add\n        /* \"#utility.yul\":3328:3381   */\n      tag_57\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":3318:3381   */\n      swap2\n      pop\n        /* \"#utility.yul\":3272:3391   */\n      pop\n        /* \"#utility.yul\":2487:3398   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3404:3522   */\n    tag_61:\n        /* \"#utility.yul\":3491:3515   */\n      tag_123\n        /* \"#utility.yul\":3509:3514   */\n      dup2\n        /* \"#utility.yul\":3491:3515   */\n      tag_58\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3486:3489   */\n      dup3\n        /* \"#utility.yul\":3479:3516   */\n      mstore\n        /* \"#utility.yul\":3404:3522   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3528:3970   */\n    tag_20:\n        /* \"#utility.yul\":3677:3681   */\n      0x00\n        /* \"#utility.yul\":3715:3717   */\n      0x60\n        /* \"#utility.yul\":3704:3713   */\n      dup3\n        /* \"#utility.yul\":3700:3718   */\n      add\n        /* \"#utility.yul\":3692:3718   */\n      swap1\n      pop\n        /* \"#utility.yul\":3728:3799   */\n      tag_125\n        /* \"#utility.yul\":3796:3797   */\n      0x00\n        /* \"#utility.yul\":3785:3794   */\n      dup4\n        /* \"#utility.yul\":3781:3798   */\n      add\n        /* \"#utility.yul\":3772:3778   */\n      dup7\n        /* \"#utility.yul\":3728:3799   */\n      tag_47\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3809:3881   */\n      tag_126\n        /* \"#utility.yul\":3877:3879   */\n      0x20\n        /* \"#utility.yul\":3866:3875   */\n      dup4\n        /* \"#utility.yul\":3862:3880   */\n      add\n        /* \"#utility.yul\":3853:3859   */\n      dup6\n        /* \"#utility.yul\":3809:3881   */\n      tag_47\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3891:3963   */\n      tag_127\n        /* \"#utility.yul\":3959:3961   */\n      0x40\n        /* \"#utility.yul\":3948:3957   */\n      dup4\n        /* \"#utility.yul\":3944:3962   */\n      add\n        /* \"#utility.yul\":3935:3941   */\n      dup5\n        /* \"#utility.yul\":3891:3963   */\n      tag_61\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3528:3970   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3976:4066   */\n    tag_62:\n        /* \"#utility.yul\":4010:4017   */\n      0x00\n        /* \"#utility.yul\":4053:4058   */\n      dup2\n        /* \"#utility.yul\":4046:4059   */\n      iszero\n        /* \"#utility.yul\":4039:4060   */\n      iszero\n        /* \"#utility.yul\":4028:4060   */\n      swap1\n      pop\n        /* \"#utility.yul\":3976:4066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4072:4188   */\n    tag_63:\n        /* \"#utility.yul\":4142:4163   */\n      tag_130\n        /* \"#utility.yul\":4157:4162   */\n      dup2\n        /* \"#utility.yul\":4142:4163   */\n      tag_62\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4135:4140   */\n      dup2\n        /* \"#utility.yul\":4132:4164   */\n      eq\n        /* \"#utility.yul\":4122:4182   */\n      tag_131\n      jumpi\n        /* \"#utility.yul\":4178:4179   */\n      0x00\n        /* \"#utility.yul\":4175:4176   */\n      dup1\n        /* \"#utility.yul\":4168:4180   */\n      revert\n        /* \"#utility.yul\":4122:4182   */\n    tag_131:\n        /* \"#utility.yul\":4072:4188   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4194:4331   */\n    tag_64:\n        /* \"#utility.yul\":4248:4253   */\n      0x00\n        /* \"#utility.yul\":4279:4285   */\n      dup2\n        /* \"#utility.yul\":4273:4286   */\n      mload\n        /* \"#utility.yul\":4264:4286   */\n      swap1\n      pop\n        /* \"#utility.yul\":4295:4325   */\n      tag_133\n        /* \"#utility.yul\":4319:4324   */\n      dup2\n        /* \"#utility.yul\":4295:4325   */\n      tag_63\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":4194:4331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4337:4682   */\n    tag_24:\n        /* \"#utility.yul\":4404:4410   */\n      0x00\n        /* \"#utility.yul\":4453:4455   */\n      0x20\n        /* \"#utility.yul\":4441:4450   */\n      dup3\n        /* \"#utility.yul\":4432:4439   */\n      dup5\n        /* \"#utility.yul\":4428:4451   */\n      sub\n        /* \"#utility.yul\":4424:4456   */\n      slt\n        /* \"#utility.yul\":4421:4540   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":4459:4538   */\n      tag_136\n      tag_54\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4421:4540   */\n    tag_135:\n        /* \"#utility.yul\":4579:4580   */\n      0x00\n        /* \"#utility.yul\":4604:4665   */\n      tag_137\n        /* \"#utility.yul\":4657:4664   */\n      dup5\n        /* \"#utility.yul\":4648:4654   */\n      dup3\n        /* \"#utility.yul\":4637:4646   */\n      dup6\n        /* \"#utility.yul\":4633:4655   */\n      add\n        /* \"#utility.yul\":4604:4665   */\n      tag_64\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4594:4665   */\n      swap2\n      pop\n        /* \"#utility.yul\":4550:4675   */\n      pop\n        /* \"#utility.yul\":4337:4682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4688:4857   */\n    tag_65:\n        /* \"#utility.yul\":4772:4783   */\n      0x00\n        /* \"#utility.yul\":4806:4812   */\n      dup3\n        /* \"#utility.yul\":4801:4804   */\n      dup3\n        /* \"#utility.yul\":4794:4813   */\n      mstore\n        /* \"#utility.yul\":4846:4850   */\n      0x20\n        /* \"#utility.yul\":4841:4844   */\n      dup3\n        /* \"#utility.yul\":4837:4851   */\n      add\n        /* \"#utility.yul\":4822:4851   */\n      swap1\n      pop\n        /* \"#utility.yul\":4688:4857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4863:5028   */\n    tag_66:\n        /* \"#utility.yul\":5003:5020   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":4999:5000   */\n      0x00\n        /* \"#utility.yul\":4991:4997   */\n      dup3\n        /* \"#utility.yul\":4987:5001   */\n      add\n        /* \"#utility.yul\":4980:5021   */\n      mstore\n        /* \"#utility.yul\":4863:5028   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5034:5400   */\n    tag_67:\n        /* \"#utility.yul\":5176:5179   */\n      0x00\n        /* \"#utility.yul\":5197:5264   */\n      tag_141\n        /* \"#utility.yul\":5261:5263   */\n      0x0f\n        /* \"#utility.yul\":5256:5259   */\n      dup4\n        /* \"#utility.yul\":5197:5264   */\n      tag_65\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":5190:5264   */\n      swap2\n      pop\n        /* \"#utility.yul\":5273:5366   */\n      tag_142\n        /* \"#utility.yul\":5362:5365   */\n      dup3\n        /* \"#utility.yul\":5273:5366   */\n      tag_66\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":5391:5393   */\n      0x20\n        /* \"#utility.yul\":5386:5389   */\n      dup3\n        /* \"#utility.yul\":5382:5394   */\n      add\n        /* \"#utility.yul\":5375:5394   */\n      swap1\n      pop\n        /* \"#utility.yul\":5034:5400   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5406:5825   */\n    tag_27:\n        /* \"#utility.yul\":5572:5576   */\n      0x00\n        /* \"#utility.yul\":5610:5612   */\n      0x20\n        /* \"#utility.yul\":5599:5608   */\n      dup3\n        /* \"#utility.yul\":5595:5613   */\n      add\n        /* \"#utility.yul\":5587:5613   */\n      swap1\n      pop\n        /* \"#utility.yul\":5659:5668   */\n      dup2\n        /* \"#utility.yul\":5653:5657   */\n      dup2\n        /* \"#utility.yul\":5649:5669   */\n      sub\n        /* \"#utility.yul\":5645:5646   */\n      0x00\n        /* \"#utility.yul\":5634:5643   */\n      dup4\n        /* \"#utility.yul\":5630:5647   */\n      add\n        /* \"#utility.yul\":5623:5670   */\n      mstore\n        /* \"#utility.yul\":5687:5818   */\n      tag_144\n        /* \"#utility.yul\":5813:5817   */\n      dup2\n        /* \"#utility.yul\":5687:5818   */\n      tag_67\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":5679:5818   */\n      swap1\n      pop\n        /* \"#utility.yul\":5406:5825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5831:6163   */\n    tag_29:\n        /* \"#utility.yul\":5952:5956   */\n      0x00\n        /* \"#utility.yul\":5990:5992   */\n      0x40\n        /* \"#utility.yul\":5979:5988   */\n      dup3\n        /* \"#utility.yul\":5975:5993   */\n      add\n        /* \"#utility.yul\":5967:5993   */\n      swap1\n      pop\n        /* \"#utility.yul\":6003:6074   */\n      tag_146\n        /* \"#utility.yul\":6071:6072   */\n      0x00\n        /* \"#utility.yul\":6060:6069   */\n      dup4\n        /* \"#utility.yul\":6056:6073   */\n      add\n        /* \"#utility.yul\":6047:6053   */\n      dup6\n        /* \"#utility.yul\":6003:6074   */\n      tag_47\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":6084:6156   */\n      tag_147\n        /* \"#utility.yul\":6152:6154   */\n      0x20\n        /* \"#utility.yul\":6141:6150   */\n      dup4\n        /* \"#utility.yul\":6137:6155   */\n      add\n        /* \"#utility.yul\":6128:6134   */\n      dup5\n        /* \"#utility.yul\":6084:6156   */\n      tag_61\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":5831:6163   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6169:6334   */\n    tag_68:\n        /* \"#utility.yul\":6309:6326   */\n      0x417070726f76616c206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":6305:6306   */\n      0x00\n        /* \"#utility.yul\":6297:6303   */\n      dup3\n        /* \"#utility.yul\":6293:6307   */\n      add\n        /* \"#utility.yul\":6286:6327   */\n      mstore\n        /* \"#utility.yul\":6169:6334   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6340:6706   */\n    tag_69:\n        /* \"#utility.yul\":6482:6485   */\n      0x00\n        /* \"#utility.yul\":6503:6570   */\n      tag_150\n        /* \"#utility.yul\":6567:6569   */\n      0x0f\n        /* \"#utility.yul\":6562:6565   */\n      dup4\n        /* \"#utility.yul\":6503:6570   */\n      tag_65\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":6496:6570   */\n      swap2\n      pop\n        /* \"#utility.yul\":6579:6672   */\n      tag_151\n        /* \"#utility.yul\":6668:6671   */\n      dup3\n        /* \"#utility.yul\":6579:6672   */\n      tag_68\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":6697:6699   */\n      0x20\n        /* \"#utility.yul\":6692:6695   */\n      dup3\n        /* \"#utility.yul\":6688:6700   */\n      add\n        /* \"#utility.yul\":6681:6700   */\n      swap1\n      pop\n        /* \"#utility.yul\":6340:6706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6712:7131   */\n    tag_35:\n        /* \"#utility.yul\":6878:6882   */\n      0x00\n        /* \"#utility.yul\":6916:6918   */\n      0x20\n        /* \"#utility.yul\":6905:6914   */\n      dup3\n        /* \"#utility.yul\":6901:6919   */\n      add\n        /* \"#utility.yul\":6893:6919   */\n      swap1\n      pop\n        /* \"#utility.yul\":6965:6974   */\n      dup2\n        /* \"#utility.yul\":6959:6963   */\n      dup2\n        /* \"#utility.yul\":6955:6975   */\n      sub\n        /* \"#utility.yul\":6951:6952   */\n      0x00\n        /* \"#utility.yul\":6940:6949   */\n      dup4\n        /* \"#utility.yul\":6936:6953   */\n      add\n        /* \"#utility.yul\":6929:6976   */\n      mstore\n        /* \"#utility.yul\":6993:7124   */\n      tag_153\n        /* \"#utility.yul\":7119:7123   */\n      dup2\n        /* \"#utility.yul\":6993:7124   */\n      tag_69\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":6985:7124   */\n      swap1\n      pop\n        /* \"#utility.yul\":6712:7131   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7137:7245   */\n    tag_70:\n        /* \"#utility.yul\":7214:7238   */\n      tag_155\n        /* \"#utility.yul\":7232:7237   */\n      dup2\n        /* \"#utility.yul\":7214:7238   */\n      tag_46\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":7209:7212   */\n      dup3\n        /* \"#utility.yul\":7202:7239   */\n      mstore\n        /* \"#utility.yul\":7137:7245   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7251:7342   */\n    tag_71:\n        /* \"#utility.yul\":7287:7294   */\n      0x00\n        /* \"#utility.yul\":7327:7335   */\n      0xffffff\n        /* \"#utility.yul\":7320:7325   */\n      dup3\n        /* \"#utility.yul\":7316:7336   */\n      and\n        /* \"#utility.yul\":7305:7336   */\n      swap1\n      pop\n        /* \"#utility.yul\":7251:7342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7348:7453   */\n    tag_72:\n        /* \"#utility.yul\":7423:7446   */\n      tag_158\n        /* \"#utility.yul\":7440:7445   */\n      dup2\n        /* \"#utility.yul\":7423:7446   */\n      tag_71\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":7418:7421   */\n      dup3\n        /* \"#utility.yul\":7411:7447   */\n      mstore\n        /* \"#utility.yul\":7348:7453   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7459:7567   */\n    tag_73:\n        /* \"#utility.yul\":7536:7560   */\n      tag_160\n        /* \"#utility.yul\":7554:7559   */\n      dup2\n        /* \"#utility.yul\":7536:7560   */\n      tag_58\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":7531:7534   */\n      dup3\n        /* \"#utility.yul\":7524:7561   */\n      mstore\n        /* \"#utility.yul\":7459:7567   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7573:7681   */\n    tag_74:\n        /* \"#utility.yul\":7650:7674   */\n      tag_162\n        /* \"#utility.yul\":7668:7673   */\n      dup2\n        /* \"#utility.yul\":7650:7674   */\n      tag_45\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":7645:7648   */\n      dup3\n        /* \"#utility.yul\":7638:7675   */\n      mstore\n        /* \"#utility.yul\":7573:7681   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7781:9402   */\n    tag_75:\n        /* \"#utility.yul\":7954:7960   */\n      0x0100\n        /* \"#utility.yul\":7949:7952   */\n      dup3\n        /* \"#utility.yul\":7945:7961   */\n      add\n        /* \"#utility.yul\":8046:8050   */\n      0x00\n        /* \"#utility.yul\":8039:8044   */\n      dup3\n        /* \"#utility.yul\":8035:8051   */\n      add\n        /* \"#utility.yul\":8029:8052   */\n      mload\n        /* \"#utility.yul\":8065:8128   */\n      tag_164\n        /* \"#utility.yul\":8122:8126   */\n      0x00\n        /* \"#utility.yul\":8117:8120   */\n      dup6\n        /* \"#utility.yul\":8113:8127   */\n      add\n        /* \"#utility.yul\":8099:8111   */\n      dup3\n        /* \"#utility.yul\":8065:8128   */\n      tag_70\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":7971:8138   */\n      pop\n        /* \"#utility.yul\":8224:8228   */\n      0x20\n        /* \"#utility.yul\":8217:8222   */\n      dup3\n        /* \"#utility.yul\":8213:8229   */\n      add\n        /* \"#utility.yul\":8207:8230   */\n      mload\n        /* \"#utility.yul\":8243:8306   */\n      tag_165\n        /* \"#utility.yul\":8300:8304   */\n      0x20\n        /* \"#utility.yul\":8295:8298   */\n      dup6\n        /* \"#utility.yul\":8291:8305   */\n      add\n        /* \"#utility.yul\":8277:8289   */\n      dup3\n        /* \"#utility.yul\":8243:8306   */\n      tag_70\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":8148:8316   */\n      pop\n        /* \"#utility.yul\":8397:8401   */\n      0x40\n        /* \"#utility.yul\":8390:8395   */\n      dup3\n        /* \"#utility.yul\":8386:8402   */\n      add\n        /* \"#utility.yul\":8380:8403   */\n      mload\n        /* \"#utility.yul\":8416:8477   */\n      tag_166\n        /* \"#utility.yul\":8471:8475   */\n      0x40\n        /* \"#utility.yul\":8466:8469   */\n      dup6\n        /* \"#utility.yul\":8462:8476   */\n      add\n        /* \"#utility.yul\":8448:8460   */\n      dup3\n        /* \"#utility.yul\":8416:8477   */\n      tag_72\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":8326:8487   */\n      pop\n        /* \"#utility.yul\":8574:8578   */\n      0x60\n        /* \"#utility.yul\":8567:8572   */\n      dup3\n        /* \"#utility.yul\":8563:8579   */\n      add\n        /* \"#utility.yul\":8557:8580   */\n      mload\n        /* \"#utility.yul\":8593:8656   */\n      tag_167\n        /* \"#utility.yul\":8650:8654   */\n      0x60\n        /* \"#utility.yul\":8645:8648   */\n      dup6\n        /* \"#utility.yul\":8641:8655   */\n      add\n        /* \"#utility.yul\":8627:8639   */\n      dup3\n        /* \"#utility.yul\":8593:8656   */\n      tag_70\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":8497:8666   */\n      pop\n        /* \"#utility.yul\":8752:8756   */\n      0x80\n        /* \"#utility.yul\":8745:8750   */\n      dup3\n        /* \"#utility.yul\":8741:8757   */\n      add\n        /* \"#utility.yul\":8735:8758   */\n      mload\n        /* \"#utility.yul\":8771:8834   */\n      tag_168\n        /* \"#utility.yul\":8828:8832   */\n      0x80\n        /* \"#utility.yul\":8823:8826   */\n      dup6\n        /* \"#utility.yul\":8819:8833   */\n      add\n        /* \"#utility.yul\":8805:8817   */\n      dup3\n        /* \"#utility.yul\":8771:8834   */\n      tag_73\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":8676:8844   */\n      pop\n        /* \"#utility.yul\":8930:8934   */\n      0xa0\n        /* \"#utility.yul\":8923:8928   */\n      dup3\n        /* \"#utility.yul\":8919:8935   */\n      add\n        /* \"#utility.yul\":8913:8936   */\n      mload\n        /* \"#utility.yul\":8949:9012   */\n      tag_169\n        /* \"#utility.yul\":9006:9010   */\n      0xa0\n        /* \"#utility.yul\":9001:9004   */\n      dup6\n        /* \"#utility.yul\":8997:9011   */\n      add\n        /* \"#utility.yul\":8983:8995   */\n      dup3\n        /* \"#utility.yul\":8949:9012   */\n      tag_73\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":8854:9022   */\n      pop\n        /* \"#utility.yul\":9116:9120   */\n      0xc0\n        /* \"#utility.yul\":9109:9114   */\n      dup3\n        /* \"#utility.yul\":9105:9121   */\n      add\n        /* \"#utility.yul\":9099:9122   */\n      mload\n        /* \"#utility.yul\":9135:9198   */\n      tag_170\n        /* \"#utility.yul\":9192:9196   */\n      0xc0\n        /* \"#utility.yul\":9187:9190   */\n      dup6\n        /* \"#utility.yul\":9183:9197   */\n      add\n        /* \"#utility.yul\":9169:9181   */\n      dup3\n        /* \"#utility.yul\":9135:9198   */\n      tag_73\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":9032:9208   */\n      pop\n        /* \"#utility.yul\":9303:9307   */\n      0xe0\n        /* \"#utility.yul\":9296:9301   */\n      dup3\n        /* \"#utility.yul\":9292:9308   */\n      add\n        /* \"#utility.yul\":9286:9309   */\n      mload\n        /* \"#utility.yul\":9322:9385   */\n      tag_171\n        /* \"#utility.yul\":9379:9383   */\n      0xe0\n        /* \"#utility.yul\":9374:9377   */\n      dup6\n        /* \"#utility.yul\":9370:9384   */\n      add\n        /* \"#utility.yul\":9356:9368   */\n      dup3\n        /* \"#utility.yul\":9322:9385   */\n      tag_74\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":9218:9395   */\n      pop\n        /* \"#utility.yul\":7923:9402   */\n      pop\n        /* \"#utility.yul\":7781:9402   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9408:9783   */\n    tag_37:\n        /* \"#utility.yul\":9577:9581   */\n      0x00\n        /* \"#utility.yul\":9615:9618   */\n      0x0100\n        /* \"#utility.yul\":9604:9613   */\n      dup3\n        /* \"#utility.yul\":9600:9619   */\n      add\n        /* \"#utility.yul\":9592:9619   */\n      swap1\n      pop\n        /* \"#utility.yul\":9629:9776   */\n      tag_173\n        /* \"#utility.yul\":9773:9774   */\n      0x00\n        /* \"#utility.yul\":9762:9771   */\n      dup4\n        /* \"#utility.yul\":9758:9775   */\n      add\n        /* \"#utility.yul\":9749:9755   */\n      dup5\n        /* \"#utility.yul\":9629:9776   */\n      tag_75\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":9408:9783   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9789:9932   */\n    tag_76:\n        /* \"#utility.yul\":9846:9851   */\n      0x00\n        /* \"#utility.yul\":9877:9883   */\n      dup2\n        /* \"#utility.yul\":9871:9884   */\n      mload\n        /* \"#utility.yul\":9862:9884   */\n      swap1\n      pop\n        /* \"#utility.yul\":9893:9926   */\n      tag_175\n        /* \"#utility.yul\":9920:9925   */\n      dup2\n        /* \"#utility.yul\":9893:9926   */\n      tag_59\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":9789:9932   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9938:10289   */\n    tag_41:\n        /* \"#utility.yul\":10008:10014   */\n      0x00\n        /* \"#utility.yul\":10057:10059   */\n      0x20\n        /* \"#utility.yul\":10045:10054   */\n      dup3\n        /* \"#utility.yul\":10036:10043   */\n      dup5\n        /* \"#utility.yul\":10032:10055   */\n      sub\n        /* \"#utility.yul\":10028:10060   */\n      slt\n        /* \"#utility.yul\":10025:10144   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":10063:10142   */\n      tag_178\n      tag_54\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":10025:10144   */\n    tag_177:\n        /* \"#utility.yul\":10183:10184   */\n      0x00\n        /* \"#utility.yul\":10208:10272   */\n      tag_179\n        /* \"#utility.yul\":10264:10271   */\n      dup5\n        /* \"#utility.yul\":10255:10261   */\n      dup3\n        /* \"#utility.yul\":10244:10253   */\n      dup6\n        /* \"#utility.yul\":10240:10262   */\n      add\n        /* \"#utility.yul\":10208:10272   */\n      tag_76\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":10198:10272   */\n      swap2\n      pop\n        /* \"#utility.yul\":10154:10282   */\n      pop\n        /* \"#utility.yul\":9938:10289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10295:10471   */\n    tag_77:\n        /* \"#utility.yul\":10435:10463   */\n      0x496e73756666696369656e74206f757470757420616d6f756e74000000000000\n        /* \"#utility.yul\":10431:10432   */\n      0x00\n        /* \"#utility.yul\":10423:10429   */\n      dup3\n        /* \"#utility.yul\":10419:10433   */\n      add\n        /* \"#utility.yul\":10412:10464   */\n      mstore\n        /* \"#utility.yul\":10295:10471   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10477:10843   */\n    tag_78:\n        /* \"#utility.yul\":10619:10622   */\n      0x00\n        /* \"#utility.yul\":10640:10707   */\n      tag_182\n        /* \"#utility.yul\":10704:10706   */\n      0x1a\n        /* \"#utility.yul\":10699:10702   */\n      dup4\n        /* \"#utility.yul\":10640:10707   */\n      tag_65\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":10633:10707   */\n      swap2\n      pop\n        /* \"#utility.yul\":10716:10809   */\n      tag_183\n        /* \"#utility.yul\":10805:10808   */\n      dup3\n        /* \"#utility.yul\":10716:10809   */\n      tag_77\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":10834:10836   */\n      0x20\n        /* \"#utility.yul\":10829:10832   */\n      dup3\n        /* \"#utility.yul\":10825:10837   */\n      add\n        /* \"#utility.yul\":10818:10837   */\n      swap1\n      pop\n        /* \"#utility.yul\":10477:10843   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10849:11268   */\n    tag_44:\n        /* \"#utility.yul\":11015:11019   */\n      0x00\n        /* \"#utility.yul\":11053:11055   */\n      0x20\n        /* \"#utility.yul\":11042:11051   */\n      dup3\n        /* \"#utility.yul\":11038:11056   */\n      add\n        /* \"#utility.yul\":11030:11056   */\n      swap1\n      pop\n        /* \"#utility.yul\":11102:11111   */\n      dup2\n        /* \"#utility.yul\":11096:11100   */\n      dup2\n        /* \"#utility.yul\":11092:11112   */\n      sub\n        /* \"#utility.yul\":11088:11089   */\n      0x00\n        /* \"#utility.yul\":11077:11086   */\n      dup4\n        /* \"#utility.yul\":11073:11090   */\n      add\n        /* \"#utility.yul\":11066:11113   */\n      mstore\n        /* \"#utility.yul\":11130:11261   */\n      tag_185\n        /* \"#utility.yul\":11256:11260   */\n      dup2\n        /* \"#utility.yul\":11130:11261   */\n      tag_78\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":11122:11261   */\n      swap1\n      pop\n        /* \"#utility.yul\":10849:11268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204e160841c94019cf4687df97f698f75355a4f64a5657bb80dfd271fe01353d5164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_212": {
									"entryPoint": null,
									"id": 212,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1355:1",
										"nodeType": "YulBlock",
										"src": "0:1355:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "939:413:1",
													"nodeType": "YulBlock",
													"src": "939:413:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:1",
																"nodeType": "YulBlock",
																"src": "985:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:1"
																			},
																			"nativeSrc": "987:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:1"
																		},
																		"nativeSrc": "987:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:1"
																		},
																		"nativeSrc": "956:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:1",
																		"nodeType": "YulLiteral",
																		"src": "981:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:1"
																},
																"nativeSrc": "952:32:1",
																"nodeType": "YulFunctionCall",
																"src": "952:32:1"
															},
															"nativeSrc": "949:119:1",
															"nodeType": "YulIf",
															"src": "949:119:1"
														},
														{
															"nativeSrc": "1078:128:1",
															"nodeType": "YulBlock",
															"src": "1078:128:1",
															"statements": [
																{
																	"nativeSrc": "1093:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:1"
																				},
																				"nativeSrc": "1164:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:1"
																		},
																		"nativeSrc": "1132:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:1",
															"nodeType": "YulBlock",
															"src": "1216:129:1",
															"statements": [
																{
																	"nativeSrc": "1231:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:1"
																				},
																				"nativeSrc": "1303:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:1"
																		},
																		"nativeSrc": "1271:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:1",
														"nodeType": "YulTypedName",
														"src": "901:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:1",
														"nodeType": "YulTypedName",
														"src": "912:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:1",
														"nodeType": "YulTypedName",
														"src": "924:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:1",
														"nodeType": "YulTypedName",
														"src": "932:6:1",
														"type": ""
													}
												],
												"src": "845:507:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610a8c380380610a8c83398181016040528101906100319190610115565b815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610153565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100e4826100bb565b9050919050565b6100f4816100da565b81146100fe575f80fd5b50565b5f8151905061010f816100eb565b92915050565b5f806040838503121561012b5761012a6100b7565b5b5f61013885828601610101565b925050602061014985828601610101565b9150509250929050565b61092c806101605f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063ad5c464814610043578063c31c9c0714610061578063d5bcb9b51461007f575b5f80fd5b61004b61009b565b604051610058919061043b565b60405180910390f35b6100696100c0565b60405161007691906104af565b60405180910390f35b61009960048036038101906100949190610529565b6100e3565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610120939291906105af565b6020604051808303815f875af115801561013c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101609190610619565b61019f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101969061069e565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff1663095ea7b35f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b81526004016101f99291906106bc565b6020604051808303815f875af1158015610215573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102399190610619565b610278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026f9061072d565b60405180910390fd5b5f6040518061010001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018581526020018481526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663414bf389836040518263ffffffff1660e01b815260040161036e9190610835565b6020604051808303815f875af115801561038a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103ae9190610863565b9050838110156103f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ea906108d8565b60405180910390fd5b50505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610425826103fc565b9050919050565b6104358161041b565b82525050565b5f60208201905061044e5f83018461042c565b92915050565b5f819050919050565b5f61047761047261046d846103fc565b610454565b6103fc565b9050919050565b5f6104888261045d565b9050919050565b5f6104998261047e565b9050919050565b6104a98161048f565b82525050565b5f6020820190506104c25f8301846104a0565b92915050565b5f80fd5b6104d58161041b565b81146104df575f80fd5b50565b5f813590506104f0816104cc565b92915050565b5f819050919050565b610508816104f6565b8114610512575f80fd5b50565b5f81359050610523816104ff565b92915050565b5f805f805f60a08688031215610542576105416104c8565b5b5f61054f888289016104e2565b9550506020610560888289016104e2565b945050604061057188828901610515565b935050606061058288828901610515565b9250506080610593888289016104e2565b9150509295509295909350565b6105a9816104f6565b82525050565b5f6060820190506105c25f83018661042c565b6105cf602083018561042c565b6105dc60408301846105a0565b949350505050565b5f8115159050919050565b6105f8816105e4565b8114610602575f80fd5b50565b5f81519050610613816105ef565b92915050565b5f6020828403121561062e5761062d6104c8565b5b5f61063b84828501610605565b91505092915050565b5f82825260208201905092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f610688600f83610644565b915061069382610654565b602082019050919050565b5f6020820190508181035f8301526106b58161067c565b9050919050565b5f6040820190506106cf5f83018561042c565b6106dc60208301846105a0565b9392505050565b7f417070726f76616c206661696c656400000000000000000000000000000000005f82015250565b5f610717600f83610644565b9150610722826106e3565b602082019050919050565b5f6020820190508181035f8301526107448161070b565b9050919050565b6107548161041b565b82525050565b5f62ffffff82169050919050565b6107718161075a565b82525050565b610780816104f6565b82525050565b61078f816103fc565b82525050565b61010082015f8201516107aa5f85018261074b565b5060208201516107bd602085018261074b565b5060408201516107d06040850182610768565b5060608201516107e3606085018261074b565b5060808201516107f66080850182610777565b5060a082015161080960a0850182610777565b5060c082015161081c60c0850182610777565b5060e082015161082f60e0850182610786565b50505050565b5f610100820190506108495f830184610795565b92915050565b5f8151905061085d816104ff565b92915050565b5f60208284031215610878576108776104c8565b5b5f6108858482850161084f565b91505092915050565b7f496e73756666696369656e74206f757470757420616d6f756e740000000000005f82015250565b5f6108c2601a83610644565b91506108cd8261088e565b602082019050919050565b5f6020820190508181035f8301526108ef816108b6565b905091905056fea26469706673582212204e160841c94019cf4687df97f698f75355a4f64a5657bb80dfd271fe01353d5164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA8C CODESIZE SUB DUP1 PUSH2 0xA8C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x115 JUMP JUMPDEST DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x153 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE4 DUP3 PUSH2 0xBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4 DUP2 PUSH2 0xDA JUMP JUMPDEST DUP2 EQ PUSH2 0xFE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x10F DUP2 PUSH2 0xEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B JUMPI PUSH2 0x12A PUSH2 0xB7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x138 DUP6 DUP3 DUP7 ADD PUSH2 0x101 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x149 DUP6 DUP3 DUP7 ADD PUSH2 0x101 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x92C DUP1 PUSH2 0x160 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xD5BCB9B5 EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x529 JUMP JUMPDEST PUSH2 0xE3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x19F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196 SWAP1 PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F9 SWAP3 SWAP2 SWAP1 PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x215 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x278 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26F SWAP1 PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x835 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x863 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EA SWAP1 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x425 DUP3 PUSH2 0x3FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x435 DUP2 PUSH2 0x41B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x44E PUSH0 DUP4 ADD DUP5 PUSH2 0x42C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x477 PUSH2 0x472 PUSH2 0x46D DUP5 PUSH2 0x3FC JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x488 DUP3 PUSH2 0x45D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x499 DUP3 PUSH2 0x47E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A9 DUP2 PUSH2 0x48F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C2 PUSH0 DUP4 ADD DUP5 PUSH2 0x4A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4D5 DUP2 PUSH2 0x41B JUMP JUMPDEST DUP2 EQ PUSH2 0x4DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4F0 DUP2 PUSH2 0x4CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x508 DUP2 PUSH2 0x4F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x512 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x523 DUP2 PUSH2 0x4FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x542 JUMPI PUSH2 0x541 PUSH2 0x4C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x54F DUP9 DUP3 DUP10 ADD PUSH2 0x4E2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x560 DUP9 DUP3 DUP10 ADD PUSH2 0x4E2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x571 DUP9 DUP3 DUP10 ADD PUSH2 0x515 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x582 DUP9 DUP3 DUP10 ADD PUSH2 0x515 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x593 DUP9 DUP3 DUP10 ADD PUSH2 0x4E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x5A9 DUP2 PUSH2 0x4F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5C2 PUSH0 DUP4 ADD DUP7 PUSH2 0x42C JUMP JUMPDEST PUSH2 0x5CF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x42C JUMP JUMPDEST PUSH2 0x5DC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x5A0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F8 DUP2 PUSH2 0x5E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x602 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x613 DUP2 PUSH2 0x5EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62E JUMPI PUSH2 0x62D PUSH2 0x4C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x63B DUP5 DUP3 DUP6 ADD PUSH2 0x605 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x688 PUSH1 0xF DUP4 PUSH2 0x644 JUMP JUMPDEST SWAP2 POP PUSH2 0x693 DUP3 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6B5 DUP2 PUSH2 0x67C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6CF PUSH0 DUP4 ADD DUP6 PUSH2 0x42C JUMP JUMPDEST PUSH2 0x6DC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x417070726F76616C206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x717 PUSH1 0xF DUP4 PUSH2 0x644 JUMP JUMPDEST SWAP2 POP PUSH2 0x722 DUP3 PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x744 DUP2 PUSH2 0x70B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x754 DUP2 PUSH2 0x41B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x771 DUP2 PUSH2 0x75A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x780 DUP2 PUSH2 0x4F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x78F DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x7AA PUSH0 DUP6 ADD DUP3 PUSH2 0x74B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x7BD PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x74B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x7D0 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x768 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x7E3 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x74B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x7F6 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x777 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x809 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x777 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x81C PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x777 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x82F PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x786 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x849 PUSH0 DUP4 ADD DUP5 PUSH2 0x795 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x85D DUP2 PUSH2 0x4FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x878 JUMPI PUSH2 0x877 PUSH2 0x4C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x885 DUP5 DUP3 DUP6 ADD PUSH2 0x84F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8C2 PUSH1 0x1A DUP4 PUSH2 0x644 JUMP JUMPDEST SWAP2 POP PUSH2 0x8CD DUP3 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8EF DUP2 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E AND ADDMOD COINBASE 0xC9 BLOCKHASH NOT 0xCF CHAINID DUP8 0xDF SWAP8 0xF6 SWAP9 0xF7 MSTORE8 SSTORE LOG4 0xF6 BLOBBASEFEE JUMP JUMPI 0xBB DUP1 0xDF 0xD2 PUSH18 0xFE01353D5164736F6C634300081A00330000 ",
							"sourceMap": "7146:1679:0:-:0;;;7322:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7406:11;7381:10;;:37;;;;;;;;;;;;;;;;;;7436:5;7429:4;;:12;;;;;;;;;;;;;;;;;;7322:127;;7146:1679;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;7146:1679:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@WETH_194": {
									"entryPoint": 155,
									"id": 194,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapRouter_192": {
									"entryPoint": 192,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swap_288": {
									"entryPoint": 227,
									"id": 288,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_address": {
									"entryPoint": 1321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ISwapRouter_$111_to_t_address_fromStack": {
									"entryPoint": 1184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$35_memory_ptr_to_t_struct$_ExactInputSingleParams_$35_memory_ptr_fromStack": {
									"entryPoint": 1941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 1926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 1896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$111__to_t_address__fromStack_reversed": {
									"entryPoint": 1199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$35_memory_ptr__to_t_struct$_ExactInputSingleParams_$35_memory_ptr__fromStack_reversed": {
									"entryPoint": 2101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 1882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ISwapRouter_$111_to_t_address": {
									"entryPoint": 1167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1224,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90": {
									"entryPoint": 2190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07": {
									"entryPoint": 1763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11271:1",
										"nodeType": "YulBlock",
										"src": "0:11271:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:1",
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nativeSrc": "62:65:1",
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:1",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nativeSrc": "73:54:1",
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nativeSrc": "184:51:1",
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nativeSrc": "194:35:1",
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nativeSrc": "205:24:1",
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:1",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:1",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nativeSrc": "306:53:1",
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nativeSrc": "328:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nativeSrc": "316:37:1",
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nativeSrc": "316:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:1",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:1",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nativeSrc": "463:124:1",
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nativeSrc": "473:26:1",
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:1",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nativeSrc": "481:18:1",
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:1",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nativeSrc": "562:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nativeSrc": "509:71:1",
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nativeSrc": "509:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:1",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:1",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:1",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nativeSrc": "625:28:1",
													"nodeType": "YulBlock",
													"src": "625:28:1",
													"statements": [
														{
															"nativeSrc": "635:12:1",
															"nodeType": "YulAssignment",
															"src": "635:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "642:5:1",
																"nodeType": "YulIdentifier",
																"src": "642:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "635:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "593:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:1",
														"nodeType": "YulTypedName",
														"src": "611:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "621:3:1",
														"nodeType": "YulTypedName",
														"src": "621:3:1",
														"type": ""
													}
												],
												"src": "593:60:1"
											},
											{
												"body": {
													"nativeSrc": "719:82:1",
													"nodeType": "YulBlock",
													"src": "719:82:1",
													"statements": [
														{
															"nativeSrc": "729:66:1",
															"nodeType": "YulAssignment",
															"src": "729:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "787:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "787:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "769:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "769:17:1"
																				},
																				"nativeSrc": "769:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "769:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "760:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "760:8:1"
																		},
																		"nativeSrc": "760:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "760:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "742:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "742:17:1"
																},
																"nativeSrc": "742:53:1",
																"nodeType": "YulFunctionCall",
																"src": "742:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "729:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "729:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "659:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "699:5:1",
														"nodeType": "YulTypedName",
														"src": "699:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "709:9:1",
														"nodeType": "YulTypedName",
														"src": "709:9:1",
														"type": ""
													}
												],
												"src": "659:142:1"
											},
											{
												"body": {
													"nativeSrc": "867:66:1",
													"nodeType": "YulBlock",
													"src": "867:66:1",
													"statements": [
														{
															"nativeSrc": "877:50:1",
															"nodeType": "YulAssignment",
															"src": "877:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "921:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "921:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "890:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "890:30:1"
																},
																"nativeSrc": "890:37:1",
																"nodeType": "YulFunctionCall",
																"src": "890:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "877:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "877:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "807:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "847:5:1",
														"nodeType": "YulTypedName",
														"src": "847:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "857:9:1",
														"nodeType": "YulTypedName",
														"src": "857:9:1",
														"type": ""
													}
												],
												"src": "807:126:1"
											},
											{
												"body": {
													"nativeSrc": "1018:66:1",
													"nodeType": "YulBlock",
													"src": "1018:66:1",
													"statements": [
														{
															"nativeSrc": "1028:50:1",
															"nodeType": "YulAssignment",
															"src": "1028:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1072:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1072:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1041:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "1041:30:1"
																},
																"nativeSrc": "1041:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1041:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1028:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1028:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISwapRouter_$111_to_t_address",
												"nativeSrc": "939:145:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "998:5:1",
														"nodeType": "YulTypedName",
														"src": "998:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1008:9:1",
														"nodeType": "YulTypedName",
														"src": "1008:9:1",
														"type": ""
													}
												],
												"src": "939:145:1"
											},
											{
												"body": {
													"nativeSrc": "1174:85:1",
													"nodeType": "YulBlock",
													"src": "1174:85:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1191:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1191:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1246:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1246:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISwapRouter_$111_to_t_address",
																			"nativeSrc": "1196:49:1",
																			"nodeType": "YulIdentifier",
																			"src": "1196:49:1"
																		},
																		"nativeSrc": "1196:56:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1196:56:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1184:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1184:6:1"
																},
																"nativeSrc": "1184:69:1",
																"nodeType": "YulFunctionCall",
																"src": "1184:69:1"
															},
															"nativeSrc": "1184:69:1",
															"nodeType": "YulExpressionStatement",
															"src": "1184:69:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISwapRouter_$111_to_t_address_fromStack",
												"nativeSrc": "1090:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1162:5:1",
														"nodeType": "YulTypedName",
														"src": "1162:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1169:3:1",
														"nodeType": "YulTypedName",
														"src": "1169:3:1",
														"type": ""
													}
												],
												"src": "1090:169:1"
											},
											{
												"body": {
													"nativeSrc": "1382:143:1",
													"nodeType": "YulBlock",
													"src": "1382:143:1",
													"statements": [
														{
															"nativeSrc": "1392:26:1",
															"nodeType": "YulAssignment",
															"src": "1392:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1404:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1404:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:1"
																},
																"nativeSrc": "1400:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1400:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1392:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1392:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1491:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1491:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1504:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1504:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1515:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1515:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1500:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1500:3:1"
																		},
																		"nativeSrc": "1500:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1500:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISwapRouter_$111_to_t_address_fromStack",
																	"nativeSrc": "1428:62:1",
																	"nodeType": "YulIdentifier",
																	"src": "1428:62:1"
																},
																"nativeSrc": "1428:90:1",
																"nodeType": "YulFunctionCall",
																"src": "1428:90:1"
															},
															"nativeSrc": "1428:90:1",
															"nodeType": "YulExpressionStatement",
															"src": "1428:90:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$111__to_t_address__fromStack_reversed",
												"nativeSrc": "1265:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1354:9:1",
														"nodeType": "YulTypedName",
														"src": "1354:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1366:6:1",
														"nodeType": "YulTypedName",
														"src": "1366:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1377:4:1",
														"nodeType": "YulTypedName",
														"src": "1377:4:1",
														"type": ""
													}
												],
												"src": "1265:260:1"
											},
											{
												"body": {
													"nativeSrc": "1571:35:1",
													"nodeType": "YulBlock",
													"src": "1571:35:1",
													"statements": [
														{
															"nativeSrc": "1581:19:1",
															"nodeType": "YulAssignment",
															"src": "1581:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1597:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1597:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1591:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1591:5:1"
																},
																"nativeSrc": "1591:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1591:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1581:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1581:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1531:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1564:6:1",
														"nodeType": "YulTypedName",
														"src": "1564:6:1",
														"type": ""
													}
												],
												"src": "1531:75:1"
											},
											{
												"body": {
													"nativeSrc": "1701:28:1",
													"nodeType": "YulBlock",
													"src": "1701:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1718:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1718:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1721:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1721:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1711:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1711:6:1"
																},
																"nativeSrc": "1711:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1711:12:1"
															},
															"nativeSrc": "1711:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1711:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1612:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1612:117:1"
											},
											{
												"body": {
													"nativeSrc": "1824:28:1",
													"nodeType": "YulBlock",
													"src": "1824:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1841:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1841:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1844:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1844:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1834:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1834:6:1"
																},
																"nativeSrc": "1834:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1834:12:1"
															},
															"nativeSrc": "1834:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1834:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1735:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1735:117:1"
											},
											{
												"body": {
													"nativeSrc": "1901:79:1",
													"nodeType": "YulBlock",
													"src": "1901:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1958:16:1",
																"nodeType": "YulBlock",
																"src": "1958:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1967:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1967:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1970:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1970:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1960:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1960:6:1"
																			},
																			"nativeSrc": "1960:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1960:12:1"
																		},
																		"nativeSrc": "1960:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1960:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1924:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1924:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1949:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1949:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1931:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1931:17:1"
																				},
																				"nativeSrc": "1931:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1931:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1921:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1921:2:1"
																		},
																		"nativeSrc": "1921:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1921:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1914:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1914:6:1"
																},
																"nativeSrc": "1914:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1914:43:1"
															},
															"nativeSrc": "1911:63:1",
															"nodeType": "YulIf",
															"src": "1911:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1858:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1894:5:1",
														"nodeType": "YulTypedName",
														"src": "1894:5:1",
														"type": ""
													}
												],
												"src": "1858:122:1"
											},
											{
												"body": {
													"nativeSrc": "2038:87:1",
													"nodeType": "YulBlock",
													"src": "2038:87:1",
													"statements": [
														{
															"nativeSrc": "2048:29:1",
															"nodeType": "YulAssignment",
															"src": "2048:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2070:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2070:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2057:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2057:12:1"
																},
																"nativeSrc": "2057:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2057:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2048:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2048:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2113:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2113:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2086:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2086:26:1"
																},
																"nativeSrc": "2086:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2086:33:1"
															},
															"nativeSrc": "2086:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2086:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1986:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2016:6:1",
														"nodeType": "YulTypedName",
														"src": "2016:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2024:3:1",
														"nodeType": "YulTypedName",
														"src": "2024:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2032:5:1",
														"nodeType": "YulTypedName",
														"src": "2032:5:1",
														"type": ""
													}
												],
												"src": "1986:139:1"
											},
											{
												"body": {
													"nativeSrc": "2176:32:1",
													"nodeType": "YulBlock",
													"src": "2176:32:1",
													"statements": [
														{
															"nativeSrc": "2186:16:1",
															"nodeType": "YulAssignment",
															"src": "2186:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2197:5:1",
																"nodeType": "YulIdentifier",
																"src": "2197:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2186:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2186:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2131:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2158:5:1",
														"nodeType": "YulTypedName",
														"src": "2158:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2168:7:1",
														"nodeType": "YulTypedName",
														"src": "2168:7:1",
														"type": ""
													}
												],
												"src": "2131:77:1"
											},
											{
												"body": {
													"nativeSrc": "2257:79:1",
													"nodeType": "YulBlock",
													"src": "2257:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2314:16:1",
																"nodeType": "YulBlock",
																"src": "2314:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2323:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2323:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2326:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2326:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2316:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2316:6:1"
																			},
																			"nativeSrc": "2316:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2316:12:1"
																		},
																		"nativeSrc": "2316:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2316:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2280:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2280:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2305:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2305:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2287:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2287:17:1"
																				},
																				"nativeSrc": "2287:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2287:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2277:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2277:2:1"
																		},
																		"nativeSrc": "2277:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2277:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2270:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2270:6:1"
																},
																"nativeSrc": "2270:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2270:43:1"
															},
															"nativeSrc": "2267:63:1",
															"nodeType": "YulIf",
															"src": "2267:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2214:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2250:5:1",
														"nodeType": "YulTypedName",
														"src": "2250:5:1",
														"type": ""
													}
												],
												"src": "2214:122:1"
											},
											{
												"body": {
													"nativeSrc": "2394:87:1",
													"nodeType": "YulBlock",
													"src": "2394:87:1",
													"statements": [
														{
															"nativeSrc": "2404:29:1",
															"nodeType": "YulAssignment",
															"src": "2404:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2426:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2426:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2413:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2413:12:1"
																},
																"nativeSrc": "2413:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2413:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2404:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2404:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2469:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2469:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2442:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2442:26:1"
																},
																"nativeSrc": "2442:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2442:33:1"
															},
															"nativeSrc": "2442:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2442:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2342:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2372:6:1",
														"nodeType": "YulTypedName",
														"src": "2372:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2380:3:1",
														"nodeType": "YulTypedName",
														"src": "2380:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2388:5:1",
														"nodeType": "YulTypedName",
														"src": "2388:5:1",
														"type": ""
													}
												],
												"src": "2342:139:1"
											},
											{
												"body": {
													"nativeSrc": "2621:777:1",
													"nodeType": "YulBlock",
													"src": "2621:777:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:1",
																"nodeType": "YulBlock",
																"src": "2668:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:1"
																			},
																			"nativeSrc": "2670:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:1"
																		},
																		"nativeSrc": "2670:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2642:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2642:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2651:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2651:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2638:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2638:3:1"
																		},
																		"nativeSrc": "2638:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2638:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2663:3:1",
																		"nodeType": "YulLiteral",
																		"src": "2663:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2634:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2634:3:1"
																},
																"nativeSrc": "2634:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2634:33:1"
															},
															"nativeSrc": "2631:120:1",
															"nodeType": "YulIf",
															"src": "2631:120:1"
														},
														{
															"nativeSrc": "2761:117:1",
															"nodeType": "YulBlock",
															"src": "2761:117:1",
															"statements": [
																{
																	"nativeSrc": "2776:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:1"
																				},
																				"nativeSrc": "2836:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:1"
																		},
																		"nativeSrc": "2815:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:1",
															"nodeType": "YulBlock",
															"src": "2888:118:1",
															"statements": [
																{
																	"nativeSrc": "2903:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:1"
																				},
																				"nativeSrc": "2964:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2943:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:1"
																		},
																		"nativeSrc": "2943:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3016:118:1",
															"nodeType": "YulBlock",
															"src": "3016:118:1",
															"statements": [
																{
																	"nativeSrc": "3031:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3031:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3045:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3045:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3035:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3035:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3061:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3061:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3096:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3096:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3107:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3107:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3092:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3092:3:1"
																				},
																				"nativeSrc": "3092:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3092:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3116:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3116:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3071:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3071:20:1"
																		},
																		"nativeSrc": "3071:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3071:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3061:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3061:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3144:118:1",
															"nodeType": "YulBlock",
															"src": "3144:118:1",
															"statements": [
																{
																	"nativeSrc": "3159:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3159:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3173:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3173:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3163:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3163:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3189:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3189:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3224:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3224:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3235:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3235:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3220:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3220:3:1"
																				},
																				"nativeSrc": "3220:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3220:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3244:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3244:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3199:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3199:20:1"
																		},
																		"nativeSrc": "3199:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3199:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3189:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3189:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3272:119:1",
															"nodeType": "YulBlock",
															"src": "3272:119:1",
															"statements": [
																{
																	"nativeSrc": "3287:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3287:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3301:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3301:3:1",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3291:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3291:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3318:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3318:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3353:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3353:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3364:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3364:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3349:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3349:3:1"
																				},
																				"nativeSrc": "3349:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3349:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3373:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3373:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3328:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3328:20:1"
																		},
																		"nativeSrc": "3328:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3328:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "3318:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3318:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_address",
												"nativeSrc": "2487:911:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2559:9:1",
														"nodeType": "YulTypedName",
														"src": "2559:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2570:7:1",
														"nodeType": "YulTypedName",
														"src": "2570:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2582:6:1",
														"nodeType": "YulTypedName",
														"src": "2582:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2590:6:1",
														"nodeType": "YulTypedName",
														"src": "2590:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2598:6:1",
														"nodeType": "YulTypedName",
														"src": "2598:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2606:6:1",
														"nodeType": "YulTypedName",
														"src": "2606:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2614:6:1",
														"nodeType": "YulTypedName",
														"src": "2614:6:1",
														"type": ""
													}
												],
												"src": "2487:911:1"
											},
											{
												"body": {
													"nativeSrc": "3469:53:1",
													"nodeType": "YulBlock",
													"src": "3469:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3486:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3486:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3509:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3509:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3491:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3491:17:1"
																		},
																		"nativeSrc": "3491:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3491:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3479:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3479:6:1"
																},
																"nativeSrc": "3479:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3479:37:1"
															},
															"nativeSrc": "3479:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3479:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3404:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3457:5:1",
														"nodeType": "YulTypedName",
														"src": "3457:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3464:3:1",
														"nodeType": "YulTypedName",
														"src": "3464:3:1",
														"type": ""
													}
												],
												"src": "3404:118:1"
											},
											{
												"body": {
													"nativeSrc": "3682:288:1",
													"nodeType": "YulBlock",
													"src": "3682:288:1",
													"statements": [
														{
															"nativeSrc": "3692:26:1",
															"nodeType": "YulAssignment",
															"src": "3692:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3704:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3704:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3715:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3715:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3700:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3700:3:1"
																},
																"nativeSrc": "3700:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3700:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3692:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3692:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3772:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3772:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3785:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3785:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3796:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3796:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3781:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3781:3:1"
																		},
																		"nativeSrc": "3781:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3781:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3728:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3728:43:1"
																},
																"nativeSrc": "3728:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3728:71:1"
															},
															"nativeSrc": "3728:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3728:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3853:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3853:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3866:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3866:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3877:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3877:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3862:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3862:3:1"
																		},
																		"nativeSrc": "3862:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3862:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3809:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3809:43:1"
																},
																"nativeSrc": "3809:72:1",
																"nodeType": "YulFunctionCall",
																"src": "3809:72:1"
															},
															"nativeSrc": "3809:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "3809:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3935:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3935:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3948:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3948:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3959:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3959:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3944:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3944:3:1"
																		},
																		"nativeSrc": "3944:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3944:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3891:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3891:43:1"
																},
																"nativeSrc": "3891:72:1",
																"nodeType": "YulFunctionCall",
																"src": "3891:72:1"
															},
															"nativeSrc": "3891:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "3891:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3528:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3638:9:1",
														"nodeType": "YulTypedName",
														"src": "3638:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3650:6:1",
														"nodeType": "YulTypedName",
														"src": "3650:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3658:6:1",
														"nodeType": "YulTypedName",
														"src": "3658:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3666:6:1",
														"nodeType": "YulTypedName",
														"src": "3666:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3677:4:1",
														"nodeType": "YulTypedName",
														"src": "3677:4:1",
														"type": ""
													}
												],
												"src": "3528:442:1"
											},
											{
												"body": {
													"nativeSrc": "4018:48:1",
													"nodeType": "YulBlock",
													"src": "4018:48:1",
													"statements": [
														{
															"nativeSrc": "4028:32:1",
															"nodeType": "YulAssignment",
															"src": "4028:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4053:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4053:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4046:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4046:6:1"
																		},
																		"nativeSrc": "4046:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4046:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4039:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4039:6:1"
																},
																"nativeSrc": "4039:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4039:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4028:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4028:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3976:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4000:5:1",
														"nodeType": "YulTypedName",
														"src": "4000:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4010:7:1",
														"nodeType": "YulTypedName",
														"src": "4010:7:1",
														"type": ""
													}
												],
												"src": "3976:90:1"
											},
											{
												"body": {
													"nativeSrc": "4112:76:1",
													"nodeType": "YulBlock",
													"src": "4112:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4166:16:1",
																"nodeType": "YulBlock",
																"src": "4166:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4175:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4175:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4178:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4178:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4168:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4168:6:1"
																			},
																			"nativeSrc": "4168:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4168:12:1"
																		},
																		"nativeSrc": "4168:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4168:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4135:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4135:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4157:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4157:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4142:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "4142:14:1"
																				},
																				"nativeSrc": "4142:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4142:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4132:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4132:2:1"
																		},
																		"nativeSrc": "4132:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4132:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4125:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4125:6:1"
																},
																"nativeSrc": "4125:40:1",
																"nodeType": "YulFunctionCall",
																"src": "4125:40:1"
															},
															"nativeSrc": "4122:60:1",
															"nodeType": "YulIf",
															"src": "4122:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4072:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4105:5:1",
														"nodeType": "YulTypedName",
														"src": "4105:5:1",
														"type": ""
													}
												],
												"src": "4072:116:1"
											},
											{
												"body": {
													"nativeSrc": "4254:77:1",
													"nodeType": "YulBlock",
													"src": "4254:77:1",
													"statements": [
														{
															"nativeSrc": "4264:22:1",
															"nodeType": "YulAssignment",
															"src": "4264:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4279:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4279:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4273:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4273:5:1"
																},
																"nativeSrc": "4273:13:1",
																"nodeType": "YulFunctionCall",
																"src": "4273:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4264:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4264:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4319:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4319:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4295:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "4295:23:1"
																},
																"nativeSrc": "4295:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4295:30:1"
															},
															"nativeSrc": "4295:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4295:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "4194:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4232:6:1",
														"nodeType": "YulTypedName",
														"src": "4232:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4240:3:1",
														"nodeType": "YulTypedName",
														"src": "4240:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4248:5:1",
														"nodeType": "YulTypedName",
														"src": "4248:5:1",
														"type": ""
													}
												],
												"src": "4194:137:1"
											},
											{
												"body": {
													"nativeSrc": "4411:271:1",
													"nodeType": "YulBlock",
													"src": "4411:271:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4457:83:1",
																"nodeType": "YulBlock",
																"src": "4457:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4459:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4459:77:1"
																			},
																			"nativeSrc": "4459:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4459:79:1"
																		},
																		"nativeSrc": "4459:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4459:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4432:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4432:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4441:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4441:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4428:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4428:3:1"
																		},
																		"nativeSrc": "4428:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4428:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4453:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4453:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4424:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4424:3:1"
																},
																"nativeSrc": "4424:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4424:32:1"
															},
															"nativeSrc": "4421:119:1",
															"nodeType": "YulIf",
															"src": "4421:119:1"
														},
														{
															"nativeSrc": "4550:125:1",
															"nodeType": "YulBlock",
															"src": "4550:125:1",
															"statements": [
																{
																	"nativeSrc": "4565:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4565:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4579:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4579:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4569:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4569:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4594:71:1",
																	"nodeType": "YulAssignment",
																	"src": "4594:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4637:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4637:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4648:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4648:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4633:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4633:3:1"
																				},
																				"nativeSrc": "4633:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4633:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4657:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4657:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "4604:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "4604:28:1"
																		},
																		"nativeSrc": "4604:61:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4604:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4594:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4594:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4337:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4381:9:1",
														"nodeType": "YulTypedName",
														"src": "4381:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4392:7:1",
														"nodeType": "YulTypedName",
														"src": "4392:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4404:6:1",
														"nodeType": "YulTypedName",
														"src": "4404:6:1",
														"type": ""
													}
												],
												"src": "4337:345:1"
											},
											{
												"body": {
													"nativeSrc": "4784:73:1",
													"nodeType": "YulBlock",
													"src": "4784:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4801:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4801:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4806:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4806:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4794:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4794:6:1"
																},
																"nativeSrc": "4794:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4794:19:1"
															},
															"nativeSrc": "4794:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "4794:19:1"
														},
														{
															"nativeSrc": "4822:29:1",
															"nodeType": "YulAssignment",
															"src": "4822:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4841:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4841:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4846:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4846:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4837:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4837:3:1"
																},
																"nativeSrc": "4837:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4837:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4822:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "4822:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4688:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4756:3:1",
														"nodeType": "YulTypedName",
														"src": "4756:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4761:6:1",
														"nodeType": "YulTypedName",
														"src": "4761:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4772:11:1",
														"nodeType": "YulTypedName",
														"src": "4772:11:1",
														"type": ""
													}
												],
												"src": "4688:169:1"
											},
											{
												"body": {
													"nativeSrc": "4969:59:1",
													"nodeType": "YulBlock",
													"src": "4969:59:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4991:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4991:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4999:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4999:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4987:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4987:3:1"
																		},
																		"nativeSrc": "4987:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4987:14:1"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "5003:17:1",
																		"nodeType": "YulLiteral",
																		"src": "5003:17:1",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4980:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4980:6:1"
																},
																"nativeSrc": "4980:41:1",
																"nodeType": "YulFunctionCall",
																"src": "4980:41:1"
															},
															"nativeSrc": "4980:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "4980:41:1"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "4863:165:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4961:6:1",
														"nodeType": "YulTypedName",
														"src": "4961:6:1",
														"type": ""
													}
												],
												"src": "4863:165:1"
											},
											{
												"body": {
													"nativeSrc": "5180:220:1",
													"nodeType": "YulBlock",
													"src": "5180:220:1",
													"statements": [
														{
															"nativeSrc": "5190:74:1",
															"nodeType": "YulAssignment",
															"src": "5190:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5256:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5256:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5261:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5261:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5197:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "5197:58:1"
																},
																"nativeSrc": "5197:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5197:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5190:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5190:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5362:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5362:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "5273:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "5273:88:1"
																},
																"nativeSrc": "5273:93:1",
																"nodeType": "YulFunctionCall",
																"src": "5273:93:1"
															},
															"nativeSrc": "5273:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "5273:93:1"
														},
														{
															"nativeSrc": "5375:19:1",
															"nodeType": "YulAssignment",
															"src": "5375:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5386:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5386:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5391:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5391:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5382:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5382:3:1"
																},
																"nativeSrc": "5382:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5382:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5375:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5375:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5034:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5168:3:1",
														"nodeType": "YulTypedName",
														"src": "5168:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5176:3:1",
														"nodeType": "YulTypedName",
														"src": "5176:3:1",
														"type": ""
													}
												],
												"src": "5034:366:1"
											},
											{
												"body": {
													"nativeSrc": "5577:248:1",
													"nodeType": "YulBlock",
													"src": "5577:248:1",
													"statements": [
														{
															"nativeSrc": "5587:26:1",
															"nodeType": "YulAssignment",
															"src": "5587:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5599:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5599:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5610:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5610:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5595:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5595:3:1"
																},
																"nativeSrc": "5595:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5595:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5587:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5587:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5634:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5634:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5645:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5645:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5630:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5630:3:1"
																		},
																		"nativeSrc": "5630:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5630:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5653:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5653:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5659:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5659:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5649:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5649:3:1"
																		},
																		"nativeSrc": "5649:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5649:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5623:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5623:6:1"
																},
																"nativeSrc": "5623:47:1",
																"nodeType": "YulFunctionCall",
																"src": "5623:47:1"
															},
															"nativeSrc": "5623:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "5623:47:1"
														},
														{
															"nativeSrc": "5679:139:1",
															"nodeType": "YulAssignment",
															"src": "5679:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5813:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5813:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5687:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "5687:124:1"
																},
																"nativeSrc": "5687:131:1",
																"nodeType": "YulFunctionCall",
																"src": "5687:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5679:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5679:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5406:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5557:9:1",
														"nodeType": "YulTypedName",
														"src": "5557:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5572:4:1",
														"nodeType": "YulTypedName",
														"src": "5572:4:1",
														"type": ""
													}
												],
												"src": "5406:419:1"
											},
											{
												"body": {
													"nativeSrc": "5957:206:1",
													"nodeType": "YulBlock",
													"src": "5957:206:1",
													"statements": [
														{
															"nativeSrc": "5967:26:1",
															"nodeType": "YulAssignment",
															"src": "5967:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5979:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5979:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5990:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5990:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5975:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5975:3:1"
																},
																"nativeSrc": "5975:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5975:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5967:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5967:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6047:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6047:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6060:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6060:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6071:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6071:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6056:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6056:3:1"
																		},
																		"nativeSrc": "6056:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6056:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6003:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6003:43:1"
																},
																"nativeSrc": "6003:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6003:71:1"
															},
															"nativeSrc": "6003:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6003:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6128:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6128:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6141:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6141:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6152:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6152:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6137:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6137:3:1"
																		},
																		"nativeSrc": "6137:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6137:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6084:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6084:43:1"
																},
																"nativeSrc": "6084:72:1",
																"nodeType": "YulFunctionCall",
																"src": "6084:72:1"
															},
															"nativeSrc": "6084:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "6084:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5831:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5921:9:1",
														"nodeType": "YulTypedName",
														"src": "5921:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5933:6:1",
														"nodeType": "YulTypedName",
														"src": "5933:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5941:6:1",
														"nodeType": "YulTypedName",
														"src": "5941:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5952:4:1",
														"nodeType": "YulTypedName",
														"src": "5952:4:1",
														"type": ""
													}
												],
												"src": "5831:332:1"
											},
											{
												"body": {
													"nativeSrc": "6275:59:1",
													"nodeType": "YulBlock",
													"src": "6275:59:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6297:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6297:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6305:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6305:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6293:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6293:3:1"
																		},
																		"nativeSrc": "6293:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6293:14:1"
																	},
																	{
																		"hexValue": "417070726f76616c206661696c6564",
																		"kind": "string",
																		"nativeSrc": "6309:17:1",
																		"nodeType": "YulLiteral",
																		"src": "6309:17:1",
																		"type": "",
																		"value": "Approval failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:1"
																},
																"nativeSrc": "6286:41:1",
																"nodeType": "YulFunctionCall",
																"src": "6286:41:1"
															},
															"nativeSrc": "6286:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "6286:41:1"
														}
													]
												},
												"name": "store_literal_in_memory_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07",
												"nativeSrc": "6169:165:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6267:6:1",
														"nodeType": "YulTypedName",
														"src": "6267:6:1",
														"type": ""
													}
												],
												"src": "6169:165:1"
											},
											{
												"body": {
													"nativeSrc": "6486:220:1",
													"nodeType": "YulBlock",
													"src": "6486:220:1",
													"statements": [
														{
															"nativeSrc": "6496:74:1",
															"nodeType": "YulAssignment",
															"src": "6496:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6562:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6562:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6567:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6567:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6503:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "6503:58:1"
																},
																"nativeSrc": "6503:67:1",
																"nodeType": "YulFunctionCall",
																"src": "6503:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6496:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6496:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6668:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6668:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07",
																	"nativeSrc": "6579:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "6579:88:1"
																},
																"nativeSrc": "6579:93:1",
																"nodeType": "YulFunctionCall",
																"src": "6579:93:1"
															},
															"nativeSrc": "6579:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "6579:93:1"
														},
														{
															"nativeSrc": "6681:19:1",
															"nodeType": "YulAssignment",
															"src": "6681:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6692:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6692:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6697:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6697:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6688:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6688:3:1"
																},
																"nativeSrc": "6688:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6688:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6681:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6681:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6340:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6474:3:1",
														"nodeType": "YulTypedName",
														"src": "6474:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6482:3:1",
														"nodeType": "YulTypedName",
														"src": "6482:3:1",
														"type": ""
													}
												],
												"src": "6340:366:1"
											},
											{
												"body": {
													"nativeSrc": "6883:248:1",
													"nodeType": "YulBlock",
													"src": "6883:248:1",
													"statements": [
														{
															"nativeSrc": "6893:26:1",
															"nodeType": "YulAssignment",
															"src": "6893:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6905:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6905:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6916:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6916:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6901:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6901:3:1"
																},
																"nativeSrc": "6901:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6901:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6893:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6893:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6940:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6940:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6951:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6951:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6936:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6936:3:1"
																		},
																		"nativeSrc": "6936:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6936:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6959:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6959:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6965:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6965:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6955:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6955:3:1"
																		},
																		"nativeSrc": "6955:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6955:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6929:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6929:6:1"
																},
																"nativeSrc": "6929:47:1",
																"nodeType": "YulFunctionCall",
																"src": "6929:47:1"
															},
															"nativeSrc": "6929:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "6929:47:1"
														},
														{
															"nativeSrc": "6985:139:1",
															"nodeType": "YulAssignment",
															"src": "6985:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7119:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7119:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6993:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "6993:124:1"
																},
																"nativeSrc": "6993:131:1",
																"nodeType": "YulFunctionCall",
																"src": "6993:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6985:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6985:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6712:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6863:9:1",
														"nodeType": "YulTypedName",
														"src": "6863:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6878:4:1",
														"nodeType": "YulTypedName",
														"src": "6878:4:1",
														"type": ""
													}
												],
												"src": "6712:419:1"
											},
											{
												"body": {
													"nativeSrc": "7192:53:1",
													"nodeType": "YulBlock",
													"src": "7192:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7209:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7209:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7232:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7232:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7214:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "7214:17:1"
																		},
																		"nativeSrc": "7214:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7214:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7202:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7202:6:1"
																},
																"nativeSrc": "7202:37:1",
																"nodeType": "YulFunctionCall",
																"src": "7202:37:1"
															},
															"nativeSrc": "7202:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "7202:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "7137:108:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7180:5:1",
														"nodeType": "YulTypedName",
														"src": "7180:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7187:3:1",
														"nodeType": "YulTypedName",
														"src": "7187:3:1",
														"type": ""
													}
												],
												"src": "7137:108:1"
											},
											{
												"body": {
													"nativeSrc": "7295:47:1",
													"nodeType": "YulBlock",
													"src": "7295:47:1",
													"statements": [
														{
															"nativeSrc": "7305:31:1",
															"nodeType": "YulAssignment",
															"src": "7305:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7320:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7320:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7327:8:1",
																		"nodeType": "YulLiteral",
																		"src": "7327:8:1",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7316:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7316:3:1"
																},
																"nativeSrc": "7316:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7316:20:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7305:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "7305:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "7251:91:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7277:5:1",
														"nodeType": "YulTypedName",
														"src": "7277:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7287:7:1",
														"nodeType": "YulTypedName",
														"src": "7287:7:1",
														"type": ""
													}
												],
												"src": "7251:91:1"
											},
											{
												"body": {
													"nativeSrc": "7401:52:1",
													"nodeType": "YulBlock",
													"src": "7401:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7418:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7418:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7440:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7440:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "7423:16:1",
																			"nodeType": "YulIdentifier",
																			"src": "7423:16:1"
																		},
																		"nativeSrc": "7423:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7423:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7411:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7411:6:1"
																},
																"nativeSrc": "7411:36:1",
																"nodeType": "YulFunctionCall",
																"src": "7411:36:1"
															},
															"nativeSrc": "7411:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "7411:36:1"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "7348:105:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7389:5:1",
														"nodeType": "YulTypedName",
														"src": "7389:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7396:3:1",
														"nodeType": "YulTypedName",
														"src": "7396:3:1",
														"type": ""
													}
												],
												"src": "7348:105:1"
											},
											{
												"body": {
													"nativeSrc": "7514:53:1",
													"nodeType": "YulBlock",
													"src": "7514:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7531:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7531:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7554:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7554:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7536:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "7536:17:1"
																		},
																		"nativeSrc": "7536:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7536:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7524:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7524:6:1"
																},
																"nativeSrc": "7524:37:1",
																"nodeType": "YulFunctionCall",
																"src": "7524:37:1"
															},
															"nativeSrc": "7524:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "7524:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "7459:108:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7502:5:1",
														"nodeType": "YulTypedName",
														"src": "7502:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7509:3:1",
														"nodeType": "YulTypedName",
														"src": "7509:3:1",
														"type": ""
													}
												],
												"src": "7459:108:1"
											},
											{
												"body": {
													"nativeSrc": "7628:53:1",
													"nodeType": "YulBlock",
													"src": "7628:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7645:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7645:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7668:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7668:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "7650:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "7650:17:1"
																		},
																		"nativeSrc": "7650:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7650:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7638:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7638:6:1"
																},
																"nativeSrc": "7638:37:1",
																"nodeType": "YulFunctionCall",
																"src": "7638:37:1"
															},
															"nativeSrc": "7638:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "7638:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "7573:108:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7616:5:1",
														"nodeType": "YulTypedName",
														"src": "7616:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7623:3:1",
														"nodeType": "YulTypedName",
														"src": "7623:3:1",
														"type": ""
													}
												],
												"src": "7573:108:1"
											},
											{
												"body": {
													"nativeSrc": "7923:1479:1",
													"nodeType": "YulBlock",
													"src": "7923:1479:1",
													"statements": [
														{
															"nativeSrc": "7933:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7933:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7949:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7949:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7954:6:1",
																		"nodeType": "YulLiteral",
																		"src": "7954:6:1",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7945:3:1"
																},
																"nativeSrc": "7945:16:1",
																"nodeType": "YulFunctionCall",
																"src": "7945:16:1"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "7937:4:1",
																	"nodeType": "YulTypedName",
																	"src": "7937:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7971:167:1",
															"nodeType": "YulBlock",
															"src": "7971:167:1",
															"statements": [
																{
																	"nativeSrc": "8009:43:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8009:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8039:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8039:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8046:4:1",
																						"nodeType": "YulLiteral",
																						"src": "8046:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8035:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8035:3:1"
																				},
																				"nativeSrc": "8035:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8035:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8029:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "8029:5:1"
																		},
																		"nativeSrc": "8029:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8029:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8013:12:1",
																			"nodeType": "YulTypedName",
																			"src": "8013:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8099:12:1",
																				"nodeType": "YulIdentifier",
																				"src": "8099:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8117:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8117:3:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8122:4:1",
																						"nodeType": "YulLiteral",
																						"src": "8122:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8113:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8113:3:1"
																				},
																				"nativeSrc": "8113:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8113:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "8065:33:1",
																			"nodeType": "YulIdentifier",
																			"src": "8065:33:1"
																		},
																		"nativeSrc": "8065:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8065:63:1"
																	},
																	"nativeSrc": "8065:63:1",
																	"nodeType": "YulExpressionStatement",
																	"src": "8065:63:1"
																}
															]
														},
														{
															"nativeSrc": "8148:168:1",
															"nodeType": "YulBlock",
															"src": "8148:168:1",
															"statements": [
																{
																	"nativeSrc": "8187:43:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8187:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8217:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8217:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8224:4:1",
																						"nodeType": "YulLiteral",
																						"src": "8224:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8213:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8213:3:1"
																				},
																				"nativeSrc": "8213:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8213:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8207:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "8207:5:1"
																		},
																		"nativeSrc": "8207:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8207:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8191:12:1",
																			"nodeType": "YulTypedName",
																			"src": "8191:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8277:12:1",
																				"nodeType": "YulIdentifier",
																				"src": "8277:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8295:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8295:3:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8300:4:1",
																						"nodeType": "YulLiteral",
																						"src": "8300:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8291:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8291:3:1"
																				},
																				"nativeSrc": "8291:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8291:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "8243:33:1",
																			"nodeType": "YulIdentifier",
																			"src": "8243:33:1"
																		},
																		"nativeSrc": "8243:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8243:63:1"
																	},
																	"nativeSrc": "8243:63:1",
																	"nodeType": "YulExpressionStatement",
																	"src": "8243:63:1"
																}
															]
														},
														{
															"nativeSrc": "8326:161:1",
															"nodeType": "YulBlock",
															"src": "8326:161:1",
															"statements": [
																{
																	"nativeSrc": "8360:43:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8360:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8390:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8390:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8397:4:1",
																						"nodeType": "YulLiteral",
																						"src": "8397:4:1",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8386:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8386:3:1"
																				},
																				"nativeSrc": "8386:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8386:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8380:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "8380:5:1"
																		},
																		"nativeSrc": "8380:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8380:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8364:12:1",
																			"nodeType": "YulTypedName",
																			"src": "8364:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8448:12:1",
																				"nodeType": "YulIdentifier",
																				"src": "8448:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8466:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8466:3:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8471:4:1",
																						"nodeType": "YulLiteral",
																						"src": "8471:4:1",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8462:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8462:3:1"
																				},
																				"nativeSrc": "8462:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8462:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "8416:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "8416:31:1"
																		},
																		"nativeSrc": "8416:61:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8416:61:1"
																	},
																	"nativeSrc": "8416:61:1",
																	"nodeType": "YulExpressionStatement",
																	"src": "8416:61:1"
																}
															]
														},
														{
															"nativeSrc": "8497:169:1",
															"nodeType": "YulBlock",
															"src": "8497:169:1",
															"statements": [
																{
																	"nativeSrc": "8537:43:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8537:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8567:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8567:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8574:4:1",
																						"nodeType": "YulLiteral",
																						"src": "8574:4:1",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8563:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8563:3:1"
																				},
																				"nativeSrc": "8563:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8563:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8557:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "8557:5:1"
																		},
																		"nativeSrc": "8557:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8557:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8541:12:1",
																			"nodeType": "YulTypedName",
																			"src": "8541:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8627:12:1",
																				"nodeType": "YulIdentifier",
																				"src": "8627:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8645:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8645:3:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8650:4:1",
																						"nodeType": "YulLiteral",
																						"src": "8650:4:1",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8641:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8641:3:1"
																				},
																				"nativeSrc": "8641:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8641:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "8593:33:1",
																			"nodeType": "YulIdentifier",
																			"src": "8593:33:1"
																		},
																		"nativeSrc": "8593:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8593:63:1"
																	},
																	"nativeSrc": "8593:63:1",
																	"nodeType": "YulExpressionStatement",
																	"src": "8593:63:1"
																}
															]
														},
														{
															"nativeSrc": "8676:168:1",
															"nodeType": "YulBlock",
															"src": "8676:168:1",
															"statements": [
																{
																	"nativeSrc": "8715:43:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8715:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8745:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8745:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8752:4:1",
																						"nodeType": "YulLiteral",
																						"src": "8752:4:1",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8741:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8741:3:1"
																				},
																				"nativeSrc": "8741:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8741:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8735:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "8735:5:1"
																		},
																		"nativeSrc": "8735:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8735:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8719:12:1",
																			"nodeType": "YulTypedName",
																			"src": "8719:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8805:12:1",
																				"nodeType": "YulIdentifier",
																				"src": "8805:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8823:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8823:3:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8828:4:1",
																						"nodeType": "YulLiteral",
																						"src": "8828:4:1",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8819:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8819:3:1"
																				},
																				"nativeSrc": "8819:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8819:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "8771:33:1",
																			"nodeType": "YulIdentifier",
																			"src": "8771:33:1"
																		},
																		"nativeSrc": "8771:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8771:63:1"
																	},
																	"nativeSrc": "8771:63:1",
																	"nodeType": "YulExpressionStatement",
																	"src": "8771:63:1"
																}
															]
														},
														{
															"nativeSrc": "8854:168:1",
															"nodeType": "YulBlock",
															"src": "8854:168:1",
															"statements": [
																{
																	"nativeSrc": "8893:43:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8893:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8923:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8923:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8930:4:1",
																						"nodeType": "YulLiteral",
																						"src": "8930:4:1",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8919:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8919:3:1"
																				},
																				"nativeSrc": "8919:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8919:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8913:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "8913:5:1"
																		},
																		"nativeSrc": "8913:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8913:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8897:12:1",
																			"nodeType": "YulTypedName",
																			"src": "8897:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8983:12:1",
																				"nodeType": "YulIdentifier",
																				"src": "8983:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9001:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "9001:3:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9006:4:1",
																						"nodeType": "YulLiteral",
																						"src": "9006:4:1",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8997:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8997:3:1"
																				},
																				"nativeSrc": "8997:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8997:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "8949:33:1",
																			"nodeType": "YulIdentifier",
																			"src": "8949:33:1"
																		},
																		"nativeSrc": "8949:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8949:63:1"
																	},
																	"nativeSrc": "8949:63:1",
																	"nodeType": "YulExpressionStatement",
																	"src": "8949:63:1"
																}
															]
														},
														{
															"nativeSrc": "9032:176:1",
															"nodeType": "YulBlock",
															"src": "9032:176:1",
															"statements": [
																{
																	"nativeSrc": "9079:43:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9079:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9109:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "9109:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9116:4:1",
																						"nodeType": "YulLiteral",
																						"src": "9116:4:1",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9105:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9105:3:1"
																				},
																				"nativeSrc": "9105:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9105:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9099:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "9099:5:1"
																		},
																		"nativeSrc": "9099:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9099:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "9083:12:1",
																			"nodeType": "YulTypedName",
																			"src": "9083:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "9169:12:1",
																				"nodeType": "YulIdentifier",
																				"src": "9169:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9187:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "9187:3:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9192:4:1",
																						"nodeType": "YulLiteral",
																						"src": "9192:4:1",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9183:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9183:3:1"
																				},
																				"nativeSrc": "9183:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9183:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "9135:33:1",
																			"nodeType": "YulIdentifier",
																			"src": "9135:33:1"
																		},
																		"nativeSrc": "9135:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9135:63:1"
																	},
																	"nativeSrc": "9135:63:1",
																	"nodeType": "YulExpressionStatement",
																	"src": "9135:63:1"
																}
															]
														},
														{
															"nativeSrc": "9218:177:1",
															"nodeType": "YulBlock",
															"src": "9218:177:1",
															"statements": [
																{
																	"nativeSrc": "9266:43:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9266:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9296:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "9296:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9303:4:1",
																						"nodeType": "YulLiteral",
																						"src": "9303:4:1",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9292:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9292:3:1"
																				},
																				"nativeSrc": "9292:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9292:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9286:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "9286:5:1"
																		},
																		"nativeSrc": "9286:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9286:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "9270:12:1",
																			"nodeType": "YulTypedName",
																			"src": "9270:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "9356:12:1",
																				"nodeType": "YulIdentifier",
																				"src": "9356:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "9374:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "9374:3:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9379:4:1",
																						"nodeType": "YulLiteral",
																						"src": "9379:4:1",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9370:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9370:3:1"
																				},
																				"nativeSrc": "9370:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9370:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "9322:33:1",
																			"nodeType": "YulIdentifier",
																			"src": "9322:33:1"
																		},
																		"nativeSrc": "9322:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9322:63:1"
																	},
																	"nativeSrc": "9322:63:1",
																	"nodeType": "YulExpressionStatement",
																	"src": "9322:63:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$35_memory_ptr_to_t_struct$_ExactInputSingleParams_$35_memory_ptr_fromStack",
												"nativeSrc": "7781:1621:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7910:5:1",
														"nodeType": "YulTypedName",
														"src": "7910:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7917:3:1",
														"nodeType": "YulTypedName",
														"src": "7917:3:1",
														"type": ""
													}
												],
												"src": "7781:1621:1"
											},
											{
												"body": {
													"nativeSrc": "9582:201:1",
													"nodeType": "YulBlock",
													"src": "9582:201:1",
													"statements": [
														{
															"nativeSrc": "9592:27:1",
															"nodeType": "YulAssignment",
															"src": "9592:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9604:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9604:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9615:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9615:3:1",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9600:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9600:3:1"
																},
																"nativeSrc": "9600:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9600:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9592:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9592:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9749:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9749:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9762:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9762:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9773:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9773:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9758:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9758:3:1"
																		},
																		"nativeSrc": "9758:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9758:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$35_memory_ptr_to_t_struct$_ExactInputSingleParams_$35_memory_ptr_fromStack",
																	"nativeSrc": "9629:119:1",
																	"nodeType": "YulIdentifier",
																	"src": "9629:119:1"
																},
																"nativeSrc": "9629:147:1",
																"nodeType": "YulFunctionCall",
																"src": "9629:147:1"
															},
															"nativeSrc": "9629:147:1",
															"nodeType": "YulExpressionStatement",
															"src": "9629:147:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$35_memory_ptr__to_t_struct$_ExactInputSingleParams_$35_memory_ptr__fromStack_reversed",
												"nativeSrc": "9408:375:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9554:9:1",
														"nodeType": "YulTypedName",
														"src": "9554:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9566:6:1",
														"nodeType": "YulTypedName",
														"src": "9566:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9577:4:1",
														"nodeType": "YulTypedName",
														"src": "9577:4:1",
														"type": ""
													}
												],
												"src": "9408:375:1"
											},
											{
												"body": {
													"nativeSrc": "9852:80:1",
													"nodeType": "YulBlock",
													"src": "9852:80:1",
													"statements": [
														{
															"nativeSrc": "9862:22:1",
															"nodeType": "YulAssignment",
															"src": "9862:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9877:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9877:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9871:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9871:5:1"
																},
																"nativeSrc": "9871:13:1",
																"nodeType": "YulFunctionCall",
																"src": "9871:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9862:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9862:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9920:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9920:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "9893:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "9893:26:1"
																},
																"nativeSrc": "9893:33:1",
																"nodeType": "YulFunctionCall",
																"src": "9893:33:1"
															},
															"nativeSrc": "9893:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "9893:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "9789:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9830:6:1",
														"nodeType": "YulTypedName",
														"src": "9830:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9838:3:1",
														"nodeType": "YulTypedName",
														"src": "9838:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9846:5:1",
														"nodeType": "YulTypedName",
														"src": "9846:5:1",
														"type": ""
													}
												],
												"src": "9789:143:1"
											},
											{
												"body": {
													"nativeSrc": "10015:274:1",
													"nodeType": "YulBlock",
													"src": "10015:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10061:83:1",
																"nodeType": "YulBlock",
																"src": "10061:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10063:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "10063:77:1"
																			},
																			"nativeSrc": "10063:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10063:79:1"
																		},
																		"nativeSrc": "10063:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10063:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10036:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10036:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10045:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10045:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10032:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10032:3:1"
																		},
																		"nativeSrc": "10032:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10032:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10057:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10057:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10028:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10028:3:1"
																},
																"nativeSrc": "10028:32:1",
																"nodeType": "YulFunctionCall",
																"src": "10028:32:1"
															},
															"nativeSrc": "10025:119:1",
															"nodeType": "YulIf",
															"src": "10025:119:1"
														},
														{
															"nativeSrc": "10154:128:1",
															"nodeType": "YulBlock",
															"src": "10154:128:1",
															"statements": [
																{
																	"nativeSrc": "10169:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10169:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10183:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10183:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10173:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10173:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10198:74:1",
																	"nodeType": "YulAssignment",
																	"src": "10198:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10244:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10244:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10255:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10255:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10240:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10240:3:1"
																				},
																				"nativeSrc": "10240:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10240:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10264:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10264:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10208:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "10208:31:1"
																		},
																		"nativeSrc": "10208:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10208:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10198:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10198:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "9938:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9985:9:1",
														"nodeType": "YulTypedName",
														"src": "9985:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9996:7:1",
														"nodeType": "YulTypedName",
														"src": "9996:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10008:6:1",
														"nodeType": "YulTypedName",
														"src": "10008:6:1",
														"type": ""
													}
												],
												"src": "9938:351:1"
											},
											{
												"body": {
													"nativeSrc": "10401:70:1",
													"nodeType": "YulBlock",
													"src": "10401:70:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10423:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10423:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10431:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10431:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10419:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10419:3:1"
																		},
																		"nativeSrc": "10419:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10419:14:1"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206f757470757420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "10435:28:1",
																		"nodeType": "YulLiteral",
																		"src": "10435:28:1",
																		"type": "",
																		"value": "Insufficient output amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10412:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10412:6:1"
																},
																"nativeSrc": "10412:52:1",
																"nodeType": "YulFunctionCall",
																"src": "10412:52:1"
															},
															"nativeSrc": "10412:52:1",
															"nodeType": "YulExpressionStatement",
															"src": "10412:52:1"
														}
													]
												},
												"name": "store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
												"nativeSrc": "10295:176:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10393:6:1",
														"nodeType": "YulTypedName",
														"src": "10393:6:1",
														"type": ""
													}
												],
												"src": "10295:176:1"
											},
											{
												"body": {
													"nativeSrc": "10623:220:1",
													"nodeType": "YulBlock",
													"src": "10623:220:1",
													"statements": [
														{
															"nativeSrc": "10633:74:1",
															"nodeType": "YulAssignment",
															"src": "10633:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10699:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10699:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10704:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10704:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10640:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "10640:58:1"
																},
																"nativeSrc": "10640:67:1",
																"nodeType": "YulFunctionCall",
																"src": "10640:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10633:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10633:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10805:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10805:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																	"nativeSrc": "10716:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "10716:88:1"
																},
																"nativeSrc": "10716:93:1",
																"nodeType": "YulFunctionCall",
																"src": "10716:93:1"
															},
															"nativeSrc": "10716:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "10716:93:1"
														},
														{
															"nativeSrc": "10818:19:1",
															"nodeType": "YulAssignment",
															"src": "10818:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10829:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10829:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10834:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10834:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10825:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10825:3:1"
																},
																"nativeSrc": "10825:12:1",
																"nodeType": "YulFunctionCall",
																"src": "10825:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10818:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10818:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10477:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10611:3:1",
														"nodeType": "YulTypedName",
														"src": "10611:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10619:3:1",
														"nodeType": "YulTypedName",
														"src": "10619:3:1",
														"type": ""
													}
												],
												"src": "10477:366:1"
											},
											{
												"body": {
													"nativeSrc": "11020:248:1",
													"nodeType": "YulBlock",
													"src": "11020:248:1",
													"statements": [
														{
															"nativeSrc": "11030:26:1",
															"nodeType": "YulAssignment",
															"src": "11030:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11042:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11042:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11053:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11053:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11038:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11038:3:1"
																},
																"nativeSrc": "11038:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11038:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11030:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11030:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11077:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11077:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11088:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11088:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11073:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11073:3:1"
																		},
																		"nativeSrc": "11073:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11073:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11096:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "11096:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11102:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11102:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11092:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11092:3:1"
																		},
																		"nativeSrc": "11092:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11092:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11066:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11066:6:1"
																},
																"nativeSrc": "11066:47:1",
																"nodeType": "YulFunctionCall",
																"src": "11066:47:1"
															},
															"nativeSrc": "11066:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "11066:47:1"
														},
														{
															"nativeSrc": "11122:139:1",
															"nodeType": "YulAssignment",
															"src": "11122:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11256:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11256:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11130:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "11130:124:1"
																},
																"nativeSrc": "11130:131:1",
																"nodeType": "YulFunctionCall",
																"src": "11130:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11122:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11122:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10849:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11000:9:1",
														"nodeType": "YulTypedName",
														"src": "11000:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11015:4:1",
														"nodeType": "YulTypedName",
														"src": "11015:4:1",
														"type": ""
													}
												],
												"src": "10849:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$111_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$111_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$111_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$111__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$111_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07(memPtr) {\n\n        mstore(add(memPtr, 0), \"Approval failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$35_memory_ptr_to_t_struct$_ExactInputSingleParams_$35_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$35_memory_ptr__to_t_struct$_ExactInputSingleParams_$35_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$35_memory_ptr_to_t_struct$_ExactInputSingleParams_$35_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient output amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063ad5c464814610043578063c31c9c0714610061578063d5bcb9b51461007f575b5f80fd5b61004b61009b565b604051610058919061043b565b60405180910390f35b6100696100c0565b60405161007691906104af565b60405180910390f35b61009960048036038101906100949190610529565b6100e3565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610120939291906105af565b6020604051808303815f875af115801561013c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101609190610619565b61019f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101969061069e565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff1663095ea7b35f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b81526004016101f99291906106bc565b6020604051808303815f875af1158015610215573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102399190610619565b610278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026f9061072d565b60405180910390fd5b5f6040518061010001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018581526020018481526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663414bf389836040518263ffffffff1660e01b815260040161036e9190610835565b6020604051808303815f875af115801561038a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103ae9190610863565b9050838110156103f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ea906108d8565b60405180910390fd5b50505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610425826103fc565b9050919050565b6104358161041b565b82525050565b5f60208201905061044e5f83018461042c565b92915050565b5f819050919050565b5f61047761047261046d846103fc565b610454565b6103fc565b9050919050565b5f6104888261045d565b9050919050565b5f6104998261047e565b9050919050565b6104a98161048f565b82525050565b5f6020820190506104c25f8301846104a0565b92915050565b5f80fd5b6104d58161041b565b81146104df575f80fd5b50565b5f813590506104f0816104cc565b92915050565b5f819050919050565b610508816104f6565b8114610512575f80fd5b50565b5f81359050610523816104ff565b92915050565b5f805f805f60a08688031215610542576105416104c8565b5b5f61054f888289016104e2565b9550506020610560888289016104e2565b945050604061057188828901610515565b935050606061058288828901610515565b9250506080610593888289016104e2565b9150509295509295909350565b6105a9816104f6565b82525050565b5f6060820190506105c25f83018661042c565b6105cf602083018561042c565b6105dc60408301846105a0565b949350505050565b5f8115159050919050565b6105f8816105e4565b8114610602575f80fd5b50565b5f81519050610613816105ef565b92915050565b5f6020828403121561062e5761062d6104c8565b5b5f61063b84828501610605565b91505092915050565b5f82825260208201905092915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f610688600f83610644565b915061069382610654565b602082019050919050565b5f6020820190508181035f8301526106b58161067c565b9050919050565b5f6040820190506106cf5f83018561042c565b6106dc60208301846105a0565b9392505050565b7f417070726f76616c206661696c656400000000000000000000000000000000005f82015250565b5f610717600f83610644565b9150610722826106e3565b602082019050919050565b5f6020820190508181035f8301526107448161070b565b9050919050565b6107548161041b565b82525050565b5f62ffffff82169050919050565b6107718161075a565b82525050565b610780816104f6565b82525050565b61078f816103fc565b82525050565b61010082015f8201516107aa5f85018261074b565b5060208201516107bd602085018261074b565b5060408201516107d06040850182610768565b5060608201516107e3606085018261074b565b5060808201516107f66080850182610777565b5060a082015161080960a0850182610777565b5060c082015161081c60c0850182610777565b5060e082015161082f60e0850182610786565b50505050565b5f610100820190506108495f830184610795565b92915050565b5f8151905061085d816104ff565b92915050565b5f60208284031215610878576108776104c8565b5b5f6108858482850161084f565b91505092915050565b7f496e73756666696369656e74206f757470757420616d6f756e740000000000005f82015250565b5f6108c2601a83610644565b91506108cd8261088e565b602082019050919050565b5f6020820190508181035f8301526108ef816108b6565b905091905056fea26469706673582212204e160841c94019cf4687df97f698f75355a4f64a5657bb80dfd271fe01353d5164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xD5BCB9B5 EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x529 JUMP JUMPDEST PUSH2 0xE3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x19F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196 SWAP1 PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F9 SWAP3 SWAP2 SWAP1 PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x215 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x619 JUMP JUMPDEST PUSH2 0x278 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26F SWAP1 PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x835 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x863 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EA SWAP1 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x425 DUP3 PUSH2 0x3FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x435 DUP2 PUSH2 0x41B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x44E PUSH0 DUP4 ADD DUP5 PUSH2 0x42C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x477 PUSH2 0x472 PUSH2 0x46D DUP5 PUSH2 0x3FC JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x488 DUP3 PUSH2 0x45D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x499 DUP3 PUSH2 0x47E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4A9 DUP2 PUSH2 0x48F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C2 PUSH0 DUP4 ADD DUP5 PUSH2 0x4A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4D5 DUP2 PUSH2 0x41B JUMP JUMPDEST DUP2 EQ PUSH2 0x4DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4F0 DUP2 PUSH2 0x4CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x508 DUP2 PUSH2 0x4F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x512 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x523 DUP2 PUSH2 0x4FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x542 JUMPI PUSH2 0x541 PUSH2 0x4C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x54F DUP9 DUP3 DUP10 ADD PUSH2 0x4E2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x560 DUP9 DUP3 DUP10 ADD PUSH2 0x4E2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x571 DUP9 DUP3 DUP10 ADD PUSH2 0x515 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x582 DUP9 DUP3 DUP10 ADD PUSH2 0x515 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x593 DUP9 DUP3 DUP10 ADD PUSH2 0x4E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x5A9 DUP2 PUSH2 0x4F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5C2 PUSH0 DUP4 ADD DUP7 PUSH2 0x42C JUMP JUMPDEST PUSH2 0x5CF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x42C JUMP JUMPDEST PUSH2 0x5DC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x5A0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F8 DUP2 PUSH2 0x5E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x602 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x613 DUP2 PUSH2 0x5EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62E JUMPI PUSH2 0x62D PUSH2 0x4C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x63B DUP5 DUP3 DUP6 ADD PUSH2 0x605 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x688 PUSH1 0xF DUP4 PUSH2 0x644 JUMP JUMPDEST SWAP2 POP PUSH2 0x693 DUP3 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6B5 DUP2 PUSH2 0x67C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6CF PUSH0 DUP4 ADD DUP6 PUSH2 0x42C JUMP JUMPDEST PUSH2 0x6DC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x417070726F76616C206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x717 PUSH1 0xF DUP4 PUSH2 0x644 JUMP JUMPDEST SWAP2 POP PUSH2 0x722 DUP3 PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x744 DUP2 PUSH2 0x70B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x754 DUP2 PUSH2 0x41B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x771 DUP2 PUSH2 0x75A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x780 DUP2 PUSH2 0x4F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x78F DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x7AA PUSH0 DUP6 ADD DUP3 PUSH2 0x74B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x7BD PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x74B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x7D0 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x768 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x7E3 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x74B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x7F6 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x777 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x809 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x777 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x81C PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x777 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x82F PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x786 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x849 PUSH0 DUP4 ADD DUP5 PUSH2 0x795 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x85D DUP2 PUSH2 0x4FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x878 JUMPI PUSH2 0x877 PUSH2 0x4C8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x885 DUP5 DUP3 DUP6 ADD PUSH2 0x84F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8C2 PUSH1 0x1A DUP4 PUSH2 0x644 JUMP JUMPDEST SWAP2 POP PUSH2 0x8CD DUP3 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8EF DUP2 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E AND ADDMOD COINBASE 0xC9 BLOCKHASH NOT 0xCF CHAINID DUP8 0xDF SWAP8 0xF6 SWAP9 0xF7 MSTORE8 SSTORE LOG4 0xF6 BLOBBASEFEE JUMP JUMPI 0xBB DUP1 0xDF 0xD2 PUSH18 0xFE01353D5164736F6C634300081A00330000 ",
							"sourceMap": "7146:1679:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7214:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7178:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7615:1207;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7214:19;;;;;;;;;;;;;:::o;7178:29::-;;;;;;;;;;;;:::o;7615:1207::-;7884:7;7877:28;;;7906:10;7926:4;7933:8;7877:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7869:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;8056:7;8049:23;;;8081:10;;;;;;;;;;8094:8;8049:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8041:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;8176:48;8227:352;;;;;;;;8286:7;8227:352;;;;;;8318:8;8227:352;;;;;;8346:4;8227:352;;;;;;8401:9;8227:352;;;;;;8435:15;8227:352;;;;8475:8;8227:352;;;;8516:16;8227:352;;;;8566:1;8227:352;;;;;8176:403;;8677:17;8697:10;;;;;;;;;;;:27;;;8725:6;8697:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8677:55;;8767:16;8754:9;:29;;8746:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7788:1034;;7615:1207;;;;;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:60::-;621:3;642:5;635:12;;593:60;;;:::o;659:142::-;709:9;742:53;760:34;769:24;787:5;769:24;:::i;:::-;760:34;:::i;:::-;742:53;:::i;:::-;729:66;;659:142;;;:::o;807:126::-;857:9;890:37;921:5;890:37;:::i;:::-;877:50;;807:126;;;:::o;939:145::-;1008:9;1041:37;1072:5;1041:37;:::i;:::-;1028:50;;939:145;;;:::o;1090:169::-;1196:56;1246:5;1196:56;:::i;:::-;1191:3;1184:69;1090:169;;:::o;1265:260::-;1377:4;1415:2;1404:9;1400:18;1392:26;;1428:90;1515:1;1504:9;1500:17;1491:6;1428:90;:::i;:::-;1265:260;;;;:::o;1612:117::-;1721:1;1718;1711:12;1858:122;1931:24;1949:5;1931:24;:::i;:::-;1924:5;1921:35;1911:63;;1970:1;1967;1960:12;1911:63;1858:122;:::o;1986:139::-;2032:5;2070:6;2057:20;2048:29;;2086:33;2113:5;2086:33;:::i;:::-;1986:139;;;;:::o;2131:77::-;2168:7;2197:5;2186:16;;2131:77;;;:::o;2214:122::-;2287:24;2305:5;2287:24;:::i;:::-;2280:5;2277:35;2267:63;;2326:1;2323;2316:12;2267:63;2214:122;:::o;2342:139::-;2388:5;2426:6;2413:20;2404:29;;2442:33;2469:5;2442:33;:::i;:::-;2342:139;;;;:::o;2487:911::-;2582:6;2590;2598;2606;2614;2663:3;2651:9;2642:7;2638:23;2634:33;2631:120;;;2670:79;;:::i;:::-;2631:120;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;3045:2;3071:53;3116:7;3107:6;3096:9;3092:22;3071:53;:::i;:::-;3061:63;;3016:118;3173:2;3199:53;3244:7;3235:6;3224:9;3220:22;3199:53;:::i;:::-;3189:63;;3144:118;3301:3;3328:53;3373:7;3364:6;3353:9;3349:22;3328:53;:::i;:::-;3318:63;;3272:119;2487:911;;;;;;;;:::o;3404:118::-;3491:24;3509:5;3491:24;:::i;:::-;3486:3;3479:37;3404:118;;:::o;3528:442::-;3677:4;3715:2;3704:9;3700:18;3692:26;;3728:71;3796:1;3785:9;3781:17;3772:6;3728:71;:::i;:::-;3809:72;3877:2;3866:9;3862:18;3853:6;3809:72;:::i;:::-;3891;3959:2;3948:9;3944:18;3935:6;3891:72;:::i;:::-;3528:442;;;;;;:::o;3976:90::-;4010:7;4053:5;4046:13;4039:21;4028:32;;3976:90;;;:::o;4072:116::-;4142:21;4157:5;4142:21;:::i;:::-;4135:5;4132:32;4122:60;;4178:1;4175;4168:12;4122:60;4072:116;:::o;4194:137::-;4248:5;4279:6;4273:13;4264:22;;4295:30;4319:5;4295:30;:::i;:::-;4194:137;;;;:::o;4337:345::-;4404:6;4453:2;4441:9;4432:7;4428:23;4424:32;4421:119;;;4459:79;;:::i;:::-;4421:119;4579:1;4604:61;4657:7;4648:6;4637:9;4633:22;4604:61;:::i;:::-;4594:71;;4550:125;4337:345;;;;:::o;4688:169::-;4772:11;4806:6;4801:3;4794:19;4846:4;4841:3;4837:14;4822:29;;4688:169;;;;:::o;4863:165::-;5003:17;4999:1;4991:6;4987:14;4980:41;4863:165;:::o;5034:366::-;5176:3;5197:67;5261:2;5256:3;5197:67;:::i;:::-;5190:74;;5273:93;5362:3;5273:93;:::i;:::-;5391:2;5386:3;5382:12;5375:19;;5034:366;;;:::o;5406:419::-;5572:4;5610:2;5599:9;5595:18;5587:26;;5659:9;5653:4;5649:20;5645:1;5634:9;5630:17;5623:47;5687:131;5813:4;5687:131;:::i;:::-;5679:139;;5406:419;;;:::o;5831:332::-;5952:4;5990:2;5979:9;5975:18;5967:26;;6003:71;6071:1;6060:9;6056:17;6047:6;6003:71;:::i;:::-;6084:72;6152:2;6141:9;6137:18;6128:6;6084:72;:::i;:::-;5831:332;;;;;:::o;6169:165::-;6309:17;6305:1;6297:6;6293:14;6286:41;6169:165;:::o;6340:366::-;6482:3;6503:67;6567:2;6562:3;6503:67;:::i;:::-;6496:74;;6579:93;6668:3;6579:93;:::i;:::-;6697:2;6692:3;6688:12;6681:19;;6340:366;;;:::o;6712:419::-;6878:4;6916:2;6905:9;6901:18;6893:26;;6965:9;6959:4;6955:20;6951:1;6940:9;6936:17;6929:47;6993:131;7119:4;6993:131;:::i;:::-;6985:139;;6712:419;;;:::o;7137:108::-;7214:24;7232:5;7214:24;:::i;:::-;7209:3;7202:37;7137:108;;:::o;7251:91::-;7287:7;7327:8;7320:5;7316:20;7305:31;;7251:91;;;:::o;7348:105::-;7423:23;7440:5;7423:23;:::i;:::-;7418:3;7411:36;7348:105;;:::o;7459:108::-;7536:24;7554:5;7536:24;:::i;:::-;7531:3;7524:37;7459:108;;:::o;7573:::-;7650:24;7668:5;7650:24;:::i;:::-;7645:3;7638:37;7573:108;;:::o;7781:1621::-;7954:6;7949:3;7945:16;8046:4;8039:5;8035:16;8029:23;8065:63;8122:4;8117:3;8113:14;8099:12;8065:63;:::i;:::-;7971:167;8224:4;8217:5;8213:16;8207:23;8243:63;8300:4;8295:3;8291:14;8277:12;8243:63;:::i;:::-;8148:168;8397:4;8390:5;8386:16;8380:23;8416:61;8471:4;8466:3;8462:14;8448:12;8416:61;:::i;:::-;8326:161;8574:4;8567:5;8563:16;8557:23;8593:63;8650:4;8645:3;8641:14;8627:12;8593:63;:::i;:::-;8497:169;8752:4;8745:5;8741:16;8735:23;8771:63;8828:4;8823:3;8819:14;8805:12;8771:63;:::i;:::-;8676:168;8930:4;8923:5;8919:16;8913:23;8949:63;9006:4;9001:3;8997:14;8983:12;8949:63;:::i;:::-;8854:168;9116:4;9109:5;9105:16;9099:23;9135:63;9192:4;9187:3;9183:14;9169:12;9135:63;:::i;:::-;9032:176;9303:4;9296:5;9292:16;9286:23;9322:63;9379:4;9374:3;9370:14;9356:12;9322:63;:::i;:::-;9218:177;7923:1479;7781:1621;;:::o;9408:375::-;9577:4;9615:3;9604:9;9600:19;9592:27;;9629:147;9773:1;9762:9;9758:17;9749:6;9629:147;:::i;:::-;9408:375;;;;:::o;9789:143::-;9846:5;9877:6;9871:13;9862:22;;9893:33;9920:5;9893:33;:::i;:::-;9789:143;;;;:::o;9938:351::-;10008:6;10057:2;10045:9;10036:7;10032:23;10028:32;10025:119;;;10063:79;;:::i;:::-;10025:119;10183:1;10208:64;10264:7;10255:6;10244:9;10240:22;10208:64;:::i;:::-;10198:74;;10154:128;9938:351;;;;:::o;10295:176::-;10435:28;10431:1;10423:6;10419:14;10412:52;10295:176;:::o;10477:366::-;10619:3;10640:67;10704:2;10699:3;10640:67;:::i;:::-;10633:74;;10716:93;10805:3;10716:93;:::i;:::-;10834:2;10829:3;10825:12;10818:19;;10477:366;;;:::o;10849:419::-;11015:4;11053:2;11042:9;11038:18;11030:26;;11102:9;11096:4;11092:20;11088:1;11077:9;11073:17;11066:47;11130:131;11256:4;11130:131;:::i;:::-;11122:139;;10849:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "469600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH()": "2486",
								"swap(address,address,uint256,uint256,address)": "infinite",
								"swapRouter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7146,
									"end": 8825,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 7146,
									"end": 8825,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7146,
									"end": 8825,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 7322,
									"end": 7449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7406,
									"end": 7417,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7381,
									"end": 7391,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7381,
									"end": 7391,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7381,
									"end": 7418,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7436,
									"end": 7441,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7429,
									"end": 7433,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7429,
									"end": 7433,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7429,
									"end": 7441,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7322,
									"end": 7449,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7146,
									"end": 8825,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 7146,
									"end": 8825,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7146,
									"end": 8825,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 7146,
									"end": 8825,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7146,
									"end": 8825,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7146,
									"end": 8825,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7146,
									"end": 8825,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7146,
									"end": 8825,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7146,
									"end": 8825,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7146,
									"end": 8825,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7146,
									"end": 8825,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e160841c94019cf4687df97f698f75355a4f64a5657bb80dfd271fe01353d5164736f6c634300081a0033",
									".code": [
										{
											"begin": 7146,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "AD5C4648"
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "C31C9C07"
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "D5BCB9B5"
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 8825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7214,
											"end": 7233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7214,
											"end": 7233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7178,
											"end": 7207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 7178,
											"end": 7207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7615,
											"end": 8822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7615,
											"end": 8822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7214,
											"end": 7233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7884,
											"end": 7891,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7877,
											"end": 7905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7926,
											"end": 7930,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 7941,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7877,
											"end": 7942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7877,
											"end": 7942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7869,
											"end": 7962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8056,
											"end": 8063,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8049,
											"end": 8072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8072,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 8081,
											"end": 8091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8081,
											"end": 8091,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8081,
											"end": 8091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8081,
											"end": 8091,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8081,
											"end": 8091,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8081,
											"end": 8091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8081,
											"end": 8091,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8081,
											"end": 8091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8081,
											"end": 8091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8094,
											"end": 8102,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8049,
											"end": 8103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8049,
											"end": 8103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8049,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8041,
											"end": 8123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 8041,
											"end": 8123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8286,
											"end": 8293,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8318,
											"end": 8326,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8350,
											"name": "PUSH",
											"source": 0,
											"value": "BB8"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8410,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8435,
											"end": 8450,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8475,
											"end": 8483,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8532,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8566,
											"end": 8567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8677,
											"end": 8694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8707,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8707,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8697,
											"end": 8707,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8707,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8707,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8697,
											"end": 8707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8724,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8697,
											"end": 8724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8724,
											"name": "PUSH",
											"source": 0,
											"value": "414BF389"
										},
										{
											"begin": 8725,
											"end": 8731,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8697,
											"end": 8732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 8697,
											"end": 8732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8697,
											"end": 8732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8677,
											"end": 8732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8677,
											"end": 8732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8754,
											"end": 8763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8754,
											"end": 8783,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8754,
											"end": 8783,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8746,
											"end": 8814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 8746,
											"end": 8814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 8822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 8822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7615,
											"end": 8822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 653,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 593,
											"end": 653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 621,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 653,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 659,
											"end": 801,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 659,
											"end": 801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 760,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 769,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 787,
											"end": 792,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 769,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 769,
											"end": 793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 793,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 769,
											"end": 793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 760,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 760,
											"end": 794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 760,
											"end": 794,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 760,
											"end": 794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 742,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 742,
											"end": 795,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 742,
											"end": 795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 729,
											"end": 795,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 729,
											"end": 795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 659,
											"end": 801,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 659,
											"end": 801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 659,
											"end": 801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 659,
											"end": 801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 807,
											"end": 933,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 857,
											"end": 866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 921,
											"end": 926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 890,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 890,
											"end": 927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 927,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 890,
											"end": 927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 877,
											"end": 927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 807,
											"end": 933,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 807,
											"end": 933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 807,
											"end": 933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 807,
											"end": 933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1084,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 939,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1072,
											"end": 1077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1041,
											"end": 1078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1078,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1041,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1259,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1090,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1196,
											"end": 1252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1252,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1196,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1525,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1265,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1404,
											"end": 1413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1515,
											"end": 1516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1504,
											"end": 1513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1497,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1428,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1518,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1428,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1525,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1525,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1723,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1980,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1858,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1931,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1955,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1931,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1956,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1911,
											"end": 1974,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1972,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1974,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1911,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2125,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1986,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2077,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2113,
											"end": 2118,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2086,
											"end": 2119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2125,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2125,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2208,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2131,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2336,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2214,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2305,
											"end": 2310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2287,
											"end": 2311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2311,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2287,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2280,
											"end": 2285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2267,
											"end": 2330,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2324,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2330,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2267,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2481,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2342,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2413,
											"end": 2433,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2469,
											"end": 2474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2442,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2475,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2442,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 3398,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2487,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2582,
											"end": 2588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2596,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 2651,
											"end": 2660,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2649,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2638,
											"end": 2661,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2667,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2631,
											"end": 2751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2751,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2631,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3071,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3116,
											"end": 3123,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3113,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3105,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3071,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3124,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3071,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3124,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3199,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3244,
											"end": 3251,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3224,
											"end": 3233,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3199,
											"end": 3252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3252,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3199,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3252,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3304,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3328,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3373,
											"end": 3380,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3353,
											"end": 3362,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3349,
											"end": 3371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3328,
											"end": 3381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3381,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3328,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3318,
											"end": 3381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3318,
											"end": 3381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 3398,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 3398,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 3398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 3398,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 3398,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 3398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 3398,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 3398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 3398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3522,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3404,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3509,
											"end": 3514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3491,
											"end": 3515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3515,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3491,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3970,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3528,
											"end": 3970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3677,
											"end": 3681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3715,
											"end": 3717,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3704,
											"end": 3713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3796,
											"end": 3797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3794,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3778,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3728,
											"end": 3799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3799,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3728,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3866,
											"end": 3875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3853,
											"end": 3859,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3809,
											"end": 3881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3881,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3809,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3959,
											"end": 3961,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3948,
											"end": 3957,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3944,
											"end": 3962,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 3941,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3891,
											"end": 3963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3963,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3891,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3970,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3970,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4066,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3976,
											"end": 4066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4010,
											"end": 4017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4059,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4060,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4028,
											"end": 4060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4028,
											"end": 4060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4066,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4188,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4072,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4157,
											"end": 4162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4142,
											"end": 4163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4163,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4142,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4140,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4122,
											"end": 4182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4176,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4180,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4182,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4122,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4331,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4194,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4248,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4279,
											"end": 4285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4273,
											"end": 4286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4295,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4319,
											"end": 4324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4295,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4295,
											"end": 4325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4295,
											"end": 4325,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4295,
											"end": 4325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4331,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4331,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4682,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4337,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4432,
											"end": 4439,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4451,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4456,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4540,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4421,
											"end": 4540,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4459,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4459,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4459,
											"end": 4538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4459,
											"end": 4538,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4459,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4540,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4421,
											"end": 4540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4579,
											"end": 4580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4657,
											"end": 4664,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4637,
											"end": 4646,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4604,
											"end": 4665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4665,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4604,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4550,
											"end": 4675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4682,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4857,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4688,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4806,
											"end": 4812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4850,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4841,
											"end": 4844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4837,
											"end": 4851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4857,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4863,
											"end": 5028,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4863,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 4999,
											"end": 5000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 4997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4980,
											"end": 5021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4863,
											"end": 5028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4863,
											"end": 5028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5400,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5034,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5176,
											"end": 5179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5197,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5261,
											"end": 5263,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 5256,
											"end": 5259,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5197,
											"end": 5264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5264,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5197,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5264,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5273,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5362,
											"end": 5365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5273,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5273,
											"end": 5366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5273,
											"end": 5366,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5273,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5391,
											"end": 5393,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5386,
											"end": 5389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5382,
											"end": 5394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5406,
											"end": 5825,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5406,
											"end": 5825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5572,
											"end": 5576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5612,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5599,
											"end": 5608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 5613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5659,
											"end": 5668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 5657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5649,
											"end": 5669,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5645,
											"end": 5646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5634,
											"end": 5643,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5687,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5687,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5687,
											"end": 5818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5687,
											"end": 5818,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 5687,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5406,
											"end": 5825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5406,
											"end": 5825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5406,
											"end": 5825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5406,
											"end": 5825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 6163,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5831,
											"end": 6163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5990,
											"end": 5992,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5979,
											"end": 5988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 5993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5967,
											"end": 5993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5967,
											"end": 5993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6071,
											"end": 6072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6060,
											"end": 6069,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6073,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6047,
											"end": 6053,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 6003,
											"end": 6074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6074,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6003,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6152,
											"end": 6154,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6141,
											"end": 6150,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6128,
											"end": 6134,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6084,
											"end": 6156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6156,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6084,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 6163,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 6163,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 6163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 6163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 6163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 6163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6334,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6169,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6309,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "417070726F76616C206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6297,
											"end": 6303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6293,
											"end": 6307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6286,
											"end": 6327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6706,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 6340,
											"end": 6706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6482,
											"end": 6485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6503,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6567,
											"end": 6569,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 6562,
											"end": 6565,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6503,
											"end": 6570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6570,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6503,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6570,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 6668,
											"end": 6671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6579,
											"end": 6672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6672,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 6579,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6697,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6692,
											"end": 6695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6688,
											"end": 6700,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6681,
											"end": 6700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6706,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 7131,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 6712,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6878,
											"end": 6882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6916,
											"end": 6918,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6905,
											"end": 6914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6901,
											"end": 6919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 6974,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6959,
											"end": 6963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6955,
											"end": 6975,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6951,
											"end": 6952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6940,
											"end": 6949,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 6953,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6993,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 7119,
											"end": 7123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6993,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 6993,
											"end": 7124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6993,
											"end": 7124,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6993,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 7124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 7124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 7131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 7131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 7131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 7131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7245,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 7137,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7232,
											"end": 7237,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 7214,
											"end": 7238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7238,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7214,
											"end": 7238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7212,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7202,
											"end": 7239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7342,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 7251,
											"end": 7342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7327,
											"end": 7335,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 7320,
											"end": 7325,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7316,
											"end": 7336,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7342,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7453,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 7348,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 7440,
											"end": 7445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 7423,
											"end": 7446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7446,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 7423,
											"end": 7446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7411,
											"end": 7447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7567,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 7459,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 7554,
											"end": 7559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 7536,
											"end": 7560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7560,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 7536,
											"end": 7560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7534,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7681,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7573,
											"end": 7681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 7668,
											"end": 7673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 7650,
											"end": 7674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7674,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 7650,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7638,
											"end": 7675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 9402,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 7781,
											"end": 9402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7949,
											"end": 7952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7945,
											"end": 7961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8046,
											"end": 8050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8039,
											"end": 8044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8035,
											"end": 8051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8052,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8065,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 8122,
											"end": 8126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8117,
											"end": 8120,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8113,
											"end": 8127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8065,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 8065,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8065,
											"end": 8128,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 8065,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7971,
											"end": 8138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8228,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8217,
											"end": 8222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8213,
											"end": 8229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8207,
											"end": 8230,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8243,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 8300,
											"end": 8304,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8295,
											"end": 8298,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8291,
											"end": 8305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8243,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 8243,
											"end": 8306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8243,
											"end": 8306,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 8243,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8397,
											"end": 8401,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8390,
											"end": 8395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8386,
											"end": 8402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8380,
											"end": 8403,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8416,
											"end": 8477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 8471,
											"end": 8475,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8466,
											"end": 8469,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8462,
											"end": 8476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8448,
											"end": 8460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8416,
											"end": 8477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 8416,
											"end": 8477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8416,
											"end": 8477,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 8416,
											"end": 8477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8326,
											"end": 8487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8574,
											"end": 8578,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8567,
											"end": 8572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8563,
											"end": 8579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8557,
											"end": 8580,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 8650,
											"end": 8654,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8645,
											"end": 8648,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8641,
											"end": 8655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 8593,
											"end": 8656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8656,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 8593,
											"end": 8656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8497,
											"end": 8666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8752,
											"end": 8756,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8745,
											"end": 8750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 8757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8735,
											"end": 8758,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 8834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 8828,
											"end": 8832,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8823,
											"end": 8826,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8805,
											"end": 8817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 8834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 8771,
											"end": 8834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8771,
											"end": 8834,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 8771,
											"end": 8834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8676,
											"end": 8844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8930,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 8923,
											"end": 8928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8919,
											"end": 8935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8913,
											"end": 8936,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8949,
											"end": 9012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 9006,
											"end": 9010,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 9001,
											"end": 9004,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8997,
											"end": 9011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8983,
											"end": 8995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8949,
											"end": 9012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 8949,
											"end": 9012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8949,
											"end": 9012,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 8949,
											"end": 9012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8854,
											"end": 9022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9116,
											"end": 9120,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 9109,
											"end": 9114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9099,
											"end": 9122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9135,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 9192,
											"end": 9196,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 9187,
											"end": 9190,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9183,
											"end": 9197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9169,
											"end": 9181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9135,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 9135,
											"end": 9198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9135,
											"end": 9198,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 9135,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9032,
											"end": 9208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9307,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9296,
											"end": 9301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9292,
											"end": 9308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9286,
											"end": 9309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9322,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 9379,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9374,
											"end": 9377,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9370,
											"end": 9384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9356,
											"end": 9368,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9322,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 9322,
											"end": 9385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9322,
											"end": 9385,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 9322,
											"end": 9385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9218,
											"end": 9395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7923,
											"end": 9402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 9402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 9402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 9402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9408,
											"end": 9783,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 9408,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9615,
											"end": 9618,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9604,
											"end": 9613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9629,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 9773,
											"end": 9774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9762,
											"end": 9771,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9758,
											"end": 9775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9749,
											"end": 9755,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9629,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 9629,
											"end": 9776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9629,
											"end": 9776,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 9629,
											"end": 9776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9408,
											"end": 9783,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9408,
											"end": 9783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9408,
											"end": 9783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9408,
											"end": 9783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9408,
											"end": 9783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9789,
											"end": 9932,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 9789,
											"end": 9932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9846,
											"end": 9851,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9877,
											"end": 9883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9871,
											"end": 9884,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9862,
											"end": 9884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9862,
											"end": 9884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9893,
											"end": 9926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 9920,
											"end": 9925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9893,
											"end": 9926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 9893,
											"end": 9926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9893,
											"end": 9926,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 9893,
											"end": 9926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9789,
											"end": 9932,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9789,
											"end": 9932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9789,
											"end": 9932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9789,
											"end": 9932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9789,
											"end": 9932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9938,
											"end": 10289,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 9938,
											"end": 10289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10008,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10057,
											"end": 10059,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10045,
											"end": 10054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10043,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10055,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10028,
											"end": 10060,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10025,
											"end": 10144,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10025,
											"end": 10144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 10025,
											"end": 10144,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10063,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 10063,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 10063,
											"end": 10142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10063,
											"end": 10142,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 10063,
											"end": 10142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10025,
											"end": 10144,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 10025,
											"end": 10144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10208,
											"end": 10272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 10264,
											"end": 10271,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10255,
											"end": 10261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10253,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10240,
											"end": 10262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 10208,
											"end": 10272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10272,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 10208,
											"end": 10272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10198,
											"end": 10272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10198,
											"end": 10272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10154,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9938,
											"end": 10289,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9938,
											"end": 10289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9938,
											"end": 10289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9938,
											"end": 10289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9938,
											"end": 10289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10471,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 10295,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10435,
											"end": 10463,
											"name": "PUSH",
											"source": 1,
											"value": "496E73756666696369656E74206F757470757420616D6F756E74000000000000"
										},
										{
											"begin": 10431,
											"end": 10432,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10423,
											"end": 10429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10419,
											"end": 10433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10412,
											"end": 10464,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10477,
											"end": 10843,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 10477,
											"end": 10843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10619,
											"end": 10622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10640,
											"end": 10707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 10704,
											"end": 10706,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 10699,
											"end": 10702,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10640,
											"end": 10707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 10640,
											"end": 10707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10640,
											"end": 10707,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 10640,
											"end": 10707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10716,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10805,
											"end": 10808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10716,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 10716,
											"end": 10809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10716,
											"end": 10809,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10716,
											"end": 10809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10834,
											"end": 10836,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10829,
											"end": 10832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10825,
											"end": 10837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10818,
											"end": 10837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10818,
											"end": 10837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10477,
											"end": 10843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10477,
											"end": 10843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10477,
											"end": 10843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10477,
											"end": 10843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11268,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10849,
											"end": 11268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11015,
											"end": 11019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11053,
											"end": 11055,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11042,
											"end": 11051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11038,
											"end": 11056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11030,
											"end": 11056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11030,
											"end": 11056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11102,
											"end": 11111,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11092,
											"end": 11112,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11088,
											"end": 11089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11077,
											"end": 11086,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11073,
											"end": 11090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11066,
											"end": 11113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11130,
											"end": 11261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 11256,
											"end": 11260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11130,
											"end": 11261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 11130,
											"end": 11261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11130,
											"end": 11261,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 11130,
											"end": 11261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11122,
											"end": 11261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11122,
											"end": 11261,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"TOKEN SWAP/Test.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"swap(address,address,uint256,uint256,address)": "d5bcb9b5",
							"swapRouter()": "c31c9c07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TOKEN SWAP/Test.sol\":\"SimpleTokenSwap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TOKEN SWAP/Test.sol\":{\"keccak256\":\"0x29a49e2a5e680dcf5d2e790acaf919315a890985eabef404f509a9412c4a3272\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f2a7eeb299a9ef534c144c8f6edc4cfbb4eb81d96b2abf7667127585e0be88\",\"dweb:/ipfs/QmNswAyponvrfEPtNQ8Eg1SyrwibnBWFAU28cQgGeFUtNg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 192,
								"contract": "TOKEN SWAP/Test.sol:SimpleTokenSwap",
								"label": "swapRouter",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ISwapRouter)111"
							},
							{
								"astId": 194,
								"contract": "TOKEN SWAP/Test.sol:SimpleTokenSwap",
								"label": "WETH",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ISwapRouter)111": {
								"encoding": "inplace",
								"label": "contract ISwapRouter",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"TOKEN SWAP/Test.sol": {
				"ast": {
					"absolutePath": "TOKEN SWAP/Test.sol",
					"exportedSymbols": {
						"IERC20": [
							188
						],
						"ISwapRouter": [
							111
						],
						"IUniswapV3SwapCallback": [
							13
						],
						"SimpleTokenSwap": [
							289
						]
					},
					"id": 290,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "153:146:0",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "309:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "339:906:0",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1260:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1299:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1292:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1292:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1329:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1322:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 6,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1322:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1367:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "1352:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1352:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1281:97:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1387:0:0"
									},
									"scope": 13,
									"src": "1251:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 290,
							"src": "299:1092:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 14,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "1468:24:0"
						},
						{
							"id": 15,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "1494:19:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 17,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"1650:22:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 13,
										"src": "1650:22:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "1650:22:0"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 16,
								"nodeType": "StructuredDocumentation",
								"src": "1519:106:0",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 111,
							"linearizedBaseContracts": [
								111,
								13
							],
							"name": "ISwapRouter",
							"nameLocation": "1635:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 35,
									"members": [
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1729:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "1721:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 19,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1721:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1755:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "1747:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1747:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1781:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "1774:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 23,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1774:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 26,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1803:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "1795:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1795:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 28,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1831:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "1823:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 27,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1823:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 30,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1858:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "1850:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 29,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1850:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 32,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1885:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "1877:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 31,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1877:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1920:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "1912:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 33,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1912:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "1687:22:0",
									"nodeType": "StructDefinition",
									"scope": 111,
									"src": "1680:265:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1953:252:0",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "2220:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2269:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2237:38:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$35_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 38,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 37,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"2237:22:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 35,
														"src": "2237:22:0"
													},
													"referencedDeclaration": 35,
													"src": "2237:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$35_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2236:40:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2311:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2303:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:19:0"
									},
									"scope": 111,
									"src": "2211:111:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 55,
									"members": [
										{
											"constant": false,
											"id": 46,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2371:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 55,
											"src": "2365:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 45,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2365:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 48,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2394:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 55,
											"src": "2386:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 47,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2386:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 50,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2422:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 55,
											"src": "2414:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 49,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2414:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 52,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "2449:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 55,
											"src": "2441:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 51,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2441:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 54,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "2476:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 55,
											"src": "2468:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 53,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2468:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "2337:16:0",
									"nodeType": "StructDefinition",
									"scope": 111,
									"src": "2330:170:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "2508:275:0",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "2798:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2835:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2809:32:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$55_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 58,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 57,
														"name": "ExactInputParams",
														"nameLocations": [
															"2809:16:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 55,
														"src": "2809:16:0"
													},
													"referencedDeclaration": 55,
													"src": "2809:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$55_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2808:34:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2877:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2869:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2868:19:0"
									},
									"scope": 111,
									"src": "2789:99:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 81,
									"members": [
										{
											"constant": false,
											"id": 66,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "2946:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 81,
											"src": "2938:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 65,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2938:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 68,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "2972:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 81,
											"src": "2964:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 67,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2964:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 70,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "2998:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 81,
											"src": "2991:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 69,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2991:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 72,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "3020:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 81,
											"src": "3012:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 71,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3012:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 74,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "3048:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 81,
											"src": "3040:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 73,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3040:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 76,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "3075:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 81,
											"src": "3067:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 75,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3067:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 78,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "3103:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 81,
											"src": "3095:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 77,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3095:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 80,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "3137:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 81,
											"src": "3129:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 79,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "3129:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "2903:23:0",
									"nodeType": "StructDefinition",
									"scope": 111,
									"src": "2896:266:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3170:252:0",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "3437:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "3488:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3455:39:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$81_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 84,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 83,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"3455:23:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "3455:23:0"
													},
													"referencedDeclaration": 81,
													"src": "3455:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$81_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:41:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3530:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3522:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3521:18:0"
									},
									"scope": 111,
									"src": "3428:112:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 101,
									"members": [
										{
											"constant": false,
											"id": 92,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "3590:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 101,
											"src": "3584:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 91,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "3584:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 94,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "3613:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 101,
											"src": "3605:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 93,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3605:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 96,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "3641:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 101,
											"src": "3633:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 95,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3633:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 98,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "3668:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 101,
											"src": "3660:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 97,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3660:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "3696:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 101,
											"src": "3688:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 99,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3688:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "3555:17:0",
									"nodeType": "StructDefinition",
									"scope": 111,
									"src": "3548:171:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "3727:286:0",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "4028:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "4067:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4040:33:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$101_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 104,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 103,
														"name": "ExactOutputParams",
														"nameLocations": [
															"4040:17:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 101,
														"src": "4040:17:0"
													},
													"referencedDeclaration": 101,
													"src": "4040:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$101_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4039:35:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4100:18:0"
									},
									"scope": 111,
									"src": "4019:100:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 290,
							"src": "1625:2497:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 112,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4263:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 113,
								"nodeType": "StructuredDocumentation",
								"src": "4291:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 188,
							"linearizedBaseContracts": [
								188
							],
							"name": "IERC20",
							"nameLocation": "4375:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "4389:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 122,
									"name": "Transfer",
									"nameLocation": "4564:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4589:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "4573:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4611:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "4595:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4623:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "4615:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4572:57:0"
									},
									"src": "4558:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "4638:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 131,
									"name": "Approval",
									"nameLocation": "4801:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4826:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4810:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4849:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4833:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4866:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4858:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4858:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4809:63:0"
									},
									"src": "4795:78:0"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4881:67:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4963:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4974:2:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "5000:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4999:9:0"
									},
									"scope": 188,
									"src": "4954:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "5017:73:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5105:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5123:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5115:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5115:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5114:17:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5155:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5154:9:0"
									},
									"scope": 188,
									"src": "5096:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5172:219:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5406:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5423:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5415:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5435:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5427:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5414:27:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5460:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5460:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5459:6:0"
									},
									"scope": 188,
									"src": "5397:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "5474:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5759:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5777:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5769:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5792:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5784:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5768:32:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5823:9:0"
									},
									"scope": 188,
									"src": "5750:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "5841:681:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6537:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6553:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "6545:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6545:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6570:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "6562:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6544:32:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "6595:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:0"
									},
									"scope": 188,
									"src": "6528:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "6609:305:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6929:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6950:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "6942:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6942:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6964:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "6956:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6976:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "6968:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6941:41:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "7001:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7001:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7000:6:0"
									},
									"scope": 188,
									"src": "6920:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 290,
							"src": "4365:2645:0",
							"usedErrors": [],
							"usedEvents": [
								122,
								131
							]
						},
						{
							"id": 189,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "7057:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimpleTokenSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 289,
							"linearizedBaseContracts": [
								289
							],
							"name": "SimpleTokenSwap",
							"nameLocation": "7155:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 192,
									"mutability": "mutable",
									"name": "swapRouter",
									"nameLocation": "7197:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 289,
									"src": "7178:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$111",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 191,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 190,
											"name": "ISwapRouter",
											"nameLocations": [
												"7178:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 111,
											"src": "7178:11:0"
										},
										"referencedDeclaration": 111,
										"src": "7178:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$111",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad5c4648",
									"id": 194,
									"mutability": "mutable",
									"name": "WETH",
									"nameLocation": "7229:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 289,
									"src": "7214:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 193,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7214:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "7370:79:0",
										"statements": [
											{
												"expression": {
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 201,
														"name": "swapRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "7381:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$111",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 203,
																"name": "_swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "7406:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 202,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "7394:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$111_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7394:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$111",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "7381:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$111",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "7381:37:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 207,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "7429:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "_WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "7436:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7429:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "7429:12:0"
											}
										]
									},
									"id": 212,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "_swapRouter",
												"nameLocation": "7342:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "7334:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7334:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "_WETH",
												"nameLocation": "7363:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "7355:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7333:36:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7370:0:0"
									},
									"scope": 289,
									"src": "7322:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "7788:1034:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 230,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7906:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7910:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7906:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 234,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "7926:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SimpleTokenSwap_$289",
																				"typeString": "contract SimpleTokenSwap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SimpleTokenSwap_$289",
																				"typeString": "contract SimpleTokenSwap"
																			}
																		],
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 232,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7918:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7918:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 236,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "7933:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 227,
																			"name": "tokenIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "7884:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 226,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 188,
																		"src": "7877:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$188_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7877:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$188",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7893:12:0",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 187,
																"src": "7877:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7877:65:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7944:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7869:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7869:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "7869:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 248,
																			"name": "swapRouter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 192,
																			"src": "8081:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ISwapRouter_$111",
																				"typeString": "contract ISwapRouter"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ISwapRouter_$111",
																				"typeString": "contract ISwapRouter"
																			}
																		],
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8073:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 246,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8073:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8073:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 250,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "8094:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 243,
																			"name": "tokenIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "8056:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 242,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 188,
																		"src": "8049:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$188_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8049:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$188",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8065:7:0",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 175,
																"src": "8049:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8049:54:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "417070726f76616c206661696c6564",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8105:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07",
																"typeString": "literal_string \"Approval failed\""
															},
															"value": "Approval failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07",
																"typeString": "literal_string \"Approval failed\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8041:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8041:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "8041:82:0"
											},
											{
												"assignments": [
													259
												],
												"declarations": [
													{
														"constant": false,
														"id": 259,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "8218:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 287,
														"src": "8176:48:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$35_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 258,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 257,
																"name": "ISwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"8176:11:0",
																	"8188:22:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "8176:34:0"
															},
															"referencedDeclaration": 35,
															"src": "8176:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$35_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 272,
												"initialValue": {
													"arguments": [
														{
															"id": 262,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "8286:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 263,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "8318:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "33303030",
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8346:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															"value": "3000"
														},
														{
															"id": 265,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "8401:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 266,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "8435:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8441:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "8435:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 268,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "8475:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 269,
															"name": "amountOutMinimum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "8516:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8566:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 260,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "8227:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$111_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8239:22:0",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 35,
														"src": "8227:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$35_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"8277:7:0",
														"8308:8:0",
														"8341:3:0",
														"8390:9:0",
														"8425:8:0",
														"8465:8:0",
														"8498:16:0",
														"8547:17:0"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "8227:352:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$35_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8176:403:0"
											},
											{
												"assignments": [
													274
												],
												"declarations": [
													{
														"constant": false,
														"id": 274,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "8685:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 287,
														"src": "8677:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 273,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8677:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 279,
												"initialValue": {
													"arguments": [
														{
															"id": 277,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "8725:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$35_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$35_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputSingleParams memory"
															}
														],
														"expression": {
															"id": 275,
															"name": "swapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "8697:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwapRouter_$111",
																"typeString": "contract ISwapRouter"
															}
														},
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8708:16:0",
														"memberName": "exactInputSingle",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "8697:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$35_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8697:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8677:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "8754:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 282,
																"name": "amountOutMinimum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "8767:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8754:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206f757470757420616d6f756e74",
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8785:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															},
															"value": "Insufficient output amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															}
														],
														"id": 280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8746:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8746:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "8746:68:0"
											}
										]
									},
									"functionSelector": "d5bcb9b5",
									"id": 288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "7624:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "7647:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "7639:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "7673:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "7665:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "7700:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "7692:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "amountOutMinimum",
												"nameLocation": "7727:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "7719:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7762:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "7754:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7628:150:0"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7788:0:0"
									},
									"scope": 289,
									"src": "7615:1207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 290,
							"src": "7146:1679:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "125:8700:0"
				},
				"id": 0
			}
		}
	}
}