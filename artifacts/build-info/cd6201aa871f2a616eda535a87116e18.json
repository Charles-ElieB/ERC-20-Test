{
	"id": "cd6201aa871f2a616eda535a87116e18",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contrat_de_Stacking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract GenericStaking is Ownable(address(this)) {\r\n    IERC20 public stakingToken;\r\n\r\n    struct Stake {\r\n        uint256 amount; // Amount of tokens staked\r\n        uint256 timestamp; // Timestamp of when the staking started\r\n    }\r\n\r\n    mapping(address => Stake) public stakes;\r\n\r\n    event Staked(address indexed user, uint256 amount);\r\n    event Unstaked(address indexed user, uint256 amount);\r\n\r\n    /// @notice Set the token to be used for staking\r\n    /// @param tokenAddress The address of the ERC20 token contract\r\n    constructor(address tokenAddress) {\r\n        require(tokenAddress != address(0), \"Token address cannot be zero\");\r\n        stakingToken = IERC20(tokenAddress);\r\n    }\r\n\r\n    /// @notice Stake a specific amount of tokens\r\n    /// @param amount The amount of tokens to stake\r\n    function stake(uint256 amount) external {\r\n        require(amount > 0, \"Amount must be greater than 0\");\r\n\r\n        // Transfer tokens from the sender to the staking contract\r\n        require(\r\n            stakingToken.transferFrom(msg.sender, address(this), amount),\r\n            \"Token transfer failed\"\r\n        );\r\n\r\n        // Update the stake data for the user\r\n        stakes[msg.sender].amount += amount;\r\n        stakes[msg.sender].timestamp = block.timestamp;\r\n\r\n        emit Staked(msg.sender, amount);\r\n    }\r\n\r\n    /// @notice Unstake all tokens that the user has staked\r\n    function unstake() external {\r\n        Stake memory userStake = stakes[msg.sender];\r\n        require(userStake.amount > 0, \"No tokens to unstake\");\r\n\r\n        uint256 amountToUnstake = userStake.amount;\r\n\r\n        // Reset the user's stake data\r\n        stakes[msg.sender].amount = 0;\r\n        stakes[msg.sender].timestamp = 0;\r\n\r\n        // Transfer tokens back to the user\r\n        require(\r\n            stakingToken.transfer(msg.sender, amountToUnstake),\r\n            \"Token transfer failed\"\r\n        );\r\n\r\n        emit Unstaked(msg.sender, amountToUnstake);\r\n    }\r\n\r\n    /// @notice Get the stake details for a user\r\n    /// @param user The address of the user\r\n    /// @return amount The amount of tokens staked\r\n    /// @return timestamp The timestamp when the stake started\r\n    function getStakeDetails(address user)\r\n        external\r\n        view\r\n        returns (uint256 amount, uint256 timestamp)\r\n    {\r\n        Stake memory userStake = stakes[user];\r\n        return (userStake.amount, userStake.timestamp);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contrat_de_Stacking.sol": {
				"GenericStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getStakeDetails",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"tokenAddress": "The address of the ERC20 token contract"
								}
							},
							"getStakeDetails(address)": {
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"amount": "The amount of tokens staked",
									"timestamp": "The timestamp when the stake started"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"stake(uint256)": {
								"params": {
									"amount": "The amount of tokens to stake"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contrat_de_Stacking.sol\":175:2604  contract GenericStaking is Ownable(address(this)) {... */\n  mstore(0x40, 0x80)\n    /* \"Contrat_de_Stacking.sol\":706:872  constructor(address tokenAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Contrat_de_Stacking.sol\":218:222  this */\n  address\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"Contrat_de_Stacking.sol\":783:784  0 */\n  0x00\n    /* \"Contrat_de_Stacking.sol\":759:785  tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Contrat_de_Stacking.sol\":759:771  tokenAddress */\n  dup2\n    /* \"Contrat_de_Stacking.sol\":759:785  tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Contrat_de_Stacking.sol\":751:818  require(tokenAddress != address(0), \"Token address cannot be zero\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"Contrat_de_Stacking.sol\":851:863  tokenAddress */\n  dup1\n    /* \"Contrat_de_Stacking.sol\":829:841  stakingToken */\n  0x01\n  0x00\n    /* \"Contrat_de_Stacking.sol\":829:864  stakingToken = IERC20(tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Contrat_de_Stacking.sol\":706:872  constructor(address tokenAddress) {... */\n  pop\n    /* \"Contrat_de_Stacking.sol\":175:2604  contract GenericStaking is Ownable(address(this)) {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_35\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_37\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_38:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_40\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_43\n  tag_19\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":932:1051   */\ntag_42:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_44\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_24\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_25:\n    /* \"#utility.yul\":1289:1313   */\n  tag_46\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_22\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_9:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_48\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_25\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1554:1723   */\ntag_26:\n    /* \"#utility.yul\":1638:1649   */\n  0x00\n    /* \"#utility.yul\":1672:1678   */\n  dup3\n    /* \"#utility.yul\":1667:1670   */\n  dup3\n    /* \"#utility.yul\":1660:1679   */\n  mstore\n    /* \"#utility.yul\":1712:1716   */\n  0x20\n    /* \"#utility.yul\":1707:1710   */\n  dup3\n    /* \"#utility.yul\":1703:1717   */\n  add\n    /* \"#utility.yul\":1688:1717   */\n  swap1\n  pop\n    /* \"#utility.yul\":1554:1723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1729:1907   */\ntag_27:\n    /* \"#utility.yul\":1869:1899   */\n  0x546f6b656e20616464726573732063616e6e6f74206265207a65726f00000000\n    /* \"#utility.yul\":1865:1866   */\n  0x00\n    /* \"#utility.yul\":1857:1863   */\n  dup3\n    /* \"#utility.yul\":1853:1867   */\n  add\n    /* \"#utility.yul\":1846:1900   */\n  mstore\n    /* \"#utility.yul\":1729:1907   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1913:2279   */\ntag_28:\n    /* \"#utility.yul\":2055:2058   */\n  0x00\n    /* \"#utility.yul\":2076:2143   */\n  tag_52\n    /* \"#utility.yul\":2140:2142   */\n  0x1c\n    /* \"#utility.yul\":2135:2138   */\n  dup4\n    /* \"#utility.yul\":2076:2143   */\n  tag_26\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2069:2143   */\n  swap2\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  tag_53\n    /* \"#utility.yul\":2241:2244   */\n  dup3\n    /* \"#utility.yul\":2152:2245   */\n  tag_27\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2270:2272   */\n  0x20\n    /* \"#utility.yul\":2265:2268   */\n  dup3\n    /* \"#utility.yul\":2261:2273   */\n  add\n    /* \"#utility.yul\":2254:2273   */\n  swap1\n  pop\n    /* \"#utility.yul\":1913:2279   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2285:2704   */\ntag_15:\n    /* \"#utility.yul\":2451:2455   */\n  0x00\n    /* \"#utility.yul\":2489:2491   */\n  0x20\n    /* \"#utility.yul\":2478:2487   */\n  dup3\n    /* \"#utility.yul\":2474:2492   */\n  add\n    /* \"#utility.yul\":2466:2492   */\n  swap1\n  pop\n    /* \"#utility.yul\":2538:2547   */\n  dup2\n    /* \"#utility.yul\":2532:2536   */\n  dup2\n    /* \"#utility.yul\":2528:2548   */\n  sub\n    /* \"#utility.yul\":2524:2525   */\n  0x00\n    /* \"#utility.yul\":2513:2522   */\n  dup4\n    /* \"#utility.yul\":2509:2526   */\n  add\n    /* \"#utility.yul\":2502:2549   */\n  mstore\n    /* \"#utility.yul\":2566:2697   */\n  tag_55\n    /* \"#utility.yul\":2692:2696   */\n  dup2\n    /* \"#utility.yul\":2566:2697   */\n  tag_28\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2558:2697   */\n  swap1\n  pop\n    /* \"#utility.yul\":2285:2704   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Contrat_de_Stacking.sol\":175:2604  contract GenericStaking is Ownable(address(this)) {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contrat_de_Stacking.sol\":175:2604  contract GenericStaking is Ownable(address(this)) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf41322ac\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x16934fc4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2def6620\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contrat_de_Stacking.sol\":417:456  mapping(address => Stake) public stakes */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contrat_de_Stacking.sol\":1572:2140  function unstake() external {... */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"Contrat_de_Stacking.sol\":232:258  IERC20 public stakingToken */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contrat_de_Stacking.sol\":984:1503  function stake(uint256 amount) external {... */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \"Contrat_de_Stacking.sol\":2359:2601  function getStakeDetails(address user)... */\n    tag_10:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contrat_de_Stacking.sol\":417:456  mapping(address => Stake) public stakes */\n    tag_15:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"Contrat_de_Stacking.sol\":1572:2140  function unstake() external {... */\n    tag_19:\n        /* \"Contrat_de_Stacking.sol\":1611:1633  Stake memory userStake */\n      0x00\n        /* \"Contrat_de_Stacking.sol\":1636:1642  stakes */\n      0x02\n        /* \"Contrat_de_Stacking.sol\":1636:1654  stakes[msg.sender] */\n      0x00\n        /* \"Contrat_de_Stacking.sol\":1643:1653  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking.sol\":1636:1654  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Contrat_de_Stacking.sol\":1611:1654  Stake memory userStake = stakes[msg.sender] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Contrat_de_Stacking.sol\":1692:1693  0 */\n      0x00\n        /* \"Contrat_de_Stacking.sol\":1673:1682  userStake */\n      dup2\n        /* \"Contrat_de_Stacking.sol\":1673:1689  userStake.amount */\n      0x00\n      add\n      mload\n        /* \"Contrat_de_Stacking.sol\":1673:1693  userStake.amount > 0 */\n      gt\n        /* \"Contrat_de_Stacking.sol\":1665:1718  require(userStake.amount > 0, \"No tokens to unstake\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"Contrat_de_Stacking.sol\":1731:1754  uint256 amountToUnstake */\n      0x00\n        /* \"Contrat_de_Stacking.sol\":1757:1766  userStake */\n      dup2\n        /* \"Contrat_de_Stacking.sol\":1757:1773  userStake.amount */\n      0x00\n      add\n      mload\n        /* \"Contrat_de_Stacking.sol\":1731:1773  uint256 amountToUnstake = userStake.amount */\n      swap1\n      pop\n        /* \"Contrat_de_Stacking.sol\":1854:1855  0 */\n      0x00\n        /* \"Contrat_de_Stacking.sol\":1826:1832  stakes */\n      0x02\n        /* \"Contrat_de_Stacking.sol\":1826:1844  stakes[msg.sender] */\n      0x00\n        /* \"Contrat_de_Stacking.sol\":1833:1843  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking.sol\":1826:1844  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Contrat_de_Stacking.sol\":1826:1851  stakes[msg.sender].amount */\n      0x00\n      add\n        /* \"Contrat_de_Stacking.sol\":1826:1855  stakes[msg.sender].amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contrat_de_Stacking.sol\":1897:1898  0 */\n      0x00\n        /* \"Contrat_de_Stacking.sol\":1866:1872  stakes */\n      0x02\n        /* \"Contrat_de_Stacking.sol\":1866:1884  stakes[msg.sender] */\n      0x00\n        /* \"Contrat_de_Stacking.sol\":1873:1883  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking.sol\":1866:1884  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Contrat_de_Stacking.sol\":1866:1894  stakes[msg.sender].timestamp */\n      0x01\n      add\n        /* \"Contrat_de_Stacking.sol\":1866:1898  stakes[msg.sender].timestamp = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contrat_de_Stacking.sol\":1978:1990  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contrat_de_Stacking.sol\":1978:1999  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Contrat_de_Stacking.sol\":2000:2010  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking.sol\":2012:2027  amountToUnstake */\n      dup4\n        /* \"Contrat_de_Stacking.sol\":1978:2028  stakingToken.transfer(msg.sender, amountToUnstake) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"Contrat_de_Stacking.sol\":1956:2077  require(... */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"Contrat_de_Stacking.sol\":2104:2114  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking.sol\":2095:2132  Unstaked(msg.sender, amountToUnstake) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75\n        /* \"Contrat_de_Stacking.sol\":2116:2131  amountToUnstake */\n      dup3\n        /* \"Contrat_de_Stacking.sol\":2095:2132  Unstaked(msg.sender, amountToUnstake) */\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Contrat_de_Stacking.sol\":1600:2140  {... */\n      pop\n      pop\n        /* \"Contrat_de_Stacking.sol\":1572:2140  function unstake() external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Contrat_de_Stacking.sol\":232:258  IERC20 public stakingToken */\n    tag_23:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Contrat_de_Stacking.sol\":984:1503  function stake(uint256 amount) external {... */\n    tag_33:\n        /* \"Contrat_de_Stacking.sol\":1052:1053  0 */\n      0x00\n        /* \"Contrat_de_Stacking.sol\":1043:1049  amount */\n      dup2\n        /* \"Contrat_de_Stacking.sol\":1043:1053  amount > 0 */\n      gt\n        /* \"Contrat_de_Stacking.sol\":1035:1087  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"Contrat_de_Stacking.sol\":1190:1202  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contrat_de_Stacking.sol\":1190:1215  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Contrat_de_Stacking.sol\":1216:1226  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking.sol\":1236:1240  this */\n      address\n        /* \"Contrat_de_Stacking.sol\":1243:1249  amount */\n      dup5\n        /* \"Contrat_de_Stacking.sol\":1190:1250  stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_71:\n        /* \"Contrat_de_Stacking.sol\":1168:1299  require(... */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_53\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"Contrat_de_Stacking.sol\":1388:1394  amount */\n      dup1\n        /* \"Contrat_de_Stacking.sol\":1359:1365  stakes */\n      0x02\n        /* \"Contrat_de_Stacking.sol\":1359:1377  stakes[msg.sender] */\n      0x00\n        /* \"Contrat_de_Stacking.sol\":1366:1376  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking.sol\":1359:1377  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Contrat_de_Stacking.sol\":1359:1384  stakes[msg.sender].amount */\n      0x00\n      add\n      0x00\n        /* \"Contrat_de_Stacking.sol\":1359:1394  stakes[msg.sender].amount += amount */\n      dup3\n      dup3\n      sload\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contrat_de_Stacking.sol\":1436:1451  block.timestamp */\n      timestamp\n        /* \"Contrat_de_Stacking.sol\":1405:1411  stakes */\n      0x02\n        /* \"Contrat_de_Stacking.sol\":1405:1423  stakes[msg.sender] */\n      0x00\n        /* \"Contrat_de_Stacking.sol\":1412:1422  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking.sol\":1405:1423  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Contrat_de_Stacking.sol\":1405:1433  stakes[msg.sender].timestamp */\n      0x01\n      add\n        /* \"Contrat_de_Stacking.sol\":1405:1451  stakes[msg.sender].timestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contrat_de_Stacking.sol\":1476:1486  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking.sol\":1469:1495  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"Contrat_de_Stacking.sol\":1488:1494  amount */\n      dup3\n        /* \"Contrat_de_Stacking.sol\":1469:1495  Staked(msg.sender, amount) */\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Contrat_de_Stacking.sol\":984:1503  function stake(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_80\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Contrat_de_Stacking.sol\":2359:2601  function getStakeDetails(address user)... */\n    tag_39:\n        /* \"Contrat_de_Stacking.sol\":2448:2462  uint256 amount */\n      0x00\n        /* \"Contrat_de_Stacking.sol\":2464:2481  uint256 timestamp */\n      dup1\n        /* \"Contrat_de_Stacking.sol\":2499:2521  Stake memory userStake */\n      0x00\n        /* \"Contrat_de_Stacking.sol\":2524:2530  stakes */\n      0x02\n        /* \"Contrat_de_Stacking.sol\":2524:2536  stakes[user] */\n      0x00\n        /* \"Contrat_de_Stacking.sol\":2531:2535  user */\n      dup6\n        /* \"Contrat_de_Stacking.sol\":2524:2536  stakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Contrat_de_Stacking.sol\":2499:2536  Stake memory userStake = stakes[user] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Contrat_de_Stacking.sol\":2555:2564  userStake */\n      dup1\n        /* \"Contrat_de_Stacking.sol\":2555:2571  userStake.amount */\n      0x00\n      add\n      mload\n        /* \"Contrat_de_Stacking.sol\":2573:2582  userStake */\n      dup2\n        /* \"Contrat_de_Stacking.sol\":2573:2592  userStake.timestamp */\n      0x20\n      add\n      mload\n        /* \"Contrat_de_Stacking.sol\":2547:2593  return (userStake.amount, userStake.timestamp) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"Contrat_de_Stacking.sol\":2359:2601  function getStakeDetails(address user)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_27\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_88\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_94:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_96:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_97:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_127\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_96\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_98:\n        /* \"#utility.yul\":641:665   */\n      tag_129\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_97\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_130\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_130:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_99:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_132\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_98\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_14:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_135\n      tag_94\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":917:1036   */\n    tag_134:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_136\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_99\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_100:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_101:\n        /* \"#utility.yul\":1346:1370   */\n      tag_139\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_100\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1715   */\n    tag_17:\n        /* \"#utility.yul\":1504:1508   */\n      0x00\n        /* \"#utility.yul\":1542:1544   */\n      0x40\n        /* \"#utility.yul\":1531:1540   */\n      dup3\n        /* \"#utility.yul\":1527:1545   */\n      add\n        /* \"#utility.yul\":1519:1545   */\n      swap1\n      pop\n        /* \"#utility.yul\":1555:1626   */\n      tag_141\n        /* \"#utility.yul\":1623:1624   */\n      0x00\n        /* \"#utility.yul\":1612:1621   */\n      dup4\n        /* \"#utility.yul\":1608:1625   */\n      add\n        /* \"#utility.yul\":1599:1605   */\n      dup6\n        /* \"#utility.yul\":1555:1626   */\n      tag_101\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1636:1708   */\n      tag_142\n        /* \"#utility.yul\":1704:1706   */\n      0x20\n        /* \"#utility.yul\":1693:1702   */\n      dup4\n        /* \"#utility.yul\":1689:1707   */\n      add\n        /* \"#utility.yul\":1680:1686   */\n      dup5\n        /* \"#utility.yul\":1636:1708   */\n      tag_101\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1383:1715   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1721:1781   */\n    tag_102:\n        /* \"#utility.yul\":1749:1752   */\n      0x00\n        /* \"#utility.yul\":1770:1775   */\n      dup2\n        /* \"#utility.yul\":1763:1775   */\n      swap1\n      pop\n        /* \"#utility.yul\":1721:1781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1787:1929   */\n    tag_103:\n        /* \"#utility.yul\":1837:1846   */\n      0x00\n        /* \"#utility.yul\":1870:1923   */\n      tag_145\n        /* \"#utility.yul\":1888:1922   */\n      tag_146\n        /* \"#utility.yul\":1897:1921   */\n      tag_147\n        /* \"#utility.yul\":1915:1920   */\n      dup5\n        /* \"#utility.yul\":1897:1921   */\n      tag_96\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":1888:1922   */\n      tag_102\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1870:1923   */\n      tag_96\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1857:1923   */\n      swap1\n      pop\n        /* \"#utility.yul\":1787:1929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1935:2061   */\n    tag_104:\n        /* \"#utility.yul\":1985:1994   */\n      0x00\n        /* \"#utility.yul\":2018:2055   */\n      tag_149\n        /* \"#utility.yul\":2049:2054   */\n      dup3\n        /* \"#utility.yul\":2018:2055   */\n      tag_103\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2005:2055   */\n      swap1\n      pop\n        /* \"#utility.yul\":1935:2061   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2067:2207   */\n    tag_105:\n        /* \"#utility.yul\":2131:2140   */\n      0x00\n        /* \"#utility.yul\":2164:2201   */\n      tag_151\n        /* \"#utility.yul\":2195:2200   */\n      dup3\n        /* \"#utility.yul\":2164:2201   */\n      tag_104\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2151:2201   */\n      swap1\n      pop\n        /* \"#utility.yul\":2067:2207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2213:2372   */\n    tag_106:\n        /* \"#utility.yul\":2314:2365   */\n      tag_153\n        /* \"#utility.yul\":2359:2364   */\n      dup2\n        /* \"#utility.yul\":2314:2365   */\n      tag_105\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2309:2312   */\n      dup3\n        /* \"#utility.yul\":2302:2366   */\n      mstore\n        /* \"#utility.yul\":2213:2372   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2378:2628   */\n    tag_25:\n        /* \"#utility.yul\":2485:2489   */\n      0x00\n        /* \"#utility.yul\":2523:2525   */\n      0x20\n        /* \"#utility.yul\":2512:2521   */\n      dup3\n        /* \"#utility.yul\":2508:2526   */\n      add\n        /* \"#utility.yul\":2500:2526   */\n      swap1\n      pop\n        /* \"#utility.yul\":2536:2621   */\n      tag_155\n        /* \"#utility.yul\":2618:2619   */\n      0x00\n        /* \"#utility.yul\":2607:2616   */\n      dup4\n        /* \"#utility.yul\":2603:2620   */\n      add\n        /* \"#utility.yul\":2594:2600   */\n      dup5\n        /* \"#utility.yul\":2536:2621   */\n      tag_106\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2378:2628   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2634:2752   */\n    tag_107:\n        /* \"#utility.yul\":2721:2745   */\n      tag_157\n        /* \"#utility.yul\":2739:2744   */\n      dup2\n        /* \"#utility.yul\":2721:2745   */\n      tag_97\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2716:2719   */\n      dup3\n        /* \"#utility.yul\":2709:2746   */\n      mstore\n        /* \"#utility.yul\":2634:2752   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2758:2980   */\n    tag_29:\n        /* \"#utility.yul\":2851:2855   */\n      0x00\n        /* \"#utility.yul\":2889:2891   */\n      0x20\n        /* \"#utility.yul\":2878:2887   */\n      dup3\n        /* \"#utility.yul\":2874:2892   */\n      add\n        /* \"#utility.yul\":2866:2892   */\n      swap1\n      pop\n        /* \"#utility.yul\":2902:2973   */\n      tag_159\n        /* \"#utility.yul\":2970:2971   */\n      0x00\n        /* \"#utility.yul\":2959:2968   */\n      dup4\n        /* \"#utility.yul\":2955:2972   */\n      add\n        /* \"#utility.yul\":2946:2952   */\n      dup5\n        /* \"#utility.yul\":2902:2973   */\n      tag_107\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2758:2980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2986:3108   */\n    tag_108:\n        /* \"#utility.yul\":3059:3083   */\n      tag_161\n        /* \"#utility.yul\":3077:3082   */\n      dup2\n        /* \"#utility.yul\":3059:3083   */\n      tag_100\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3052:3057   */\n      dup2\n        /* \"#utility.yul\":3049:3084   */\n      eq\n        /* \"#utility.yul\":3039:3102   */\n      tag_162\n      jumpi\n        /* \"#utility.yul\":3098:3099   */\n      0x00\n        /* \"#utility.yul\":3095:3096   */\n      dup1\n        /* \"#utility.yul\":3088:3100   */\n      revert\n        /* \"#utility.yul\":3039:3102   */\n    tag_162:\n        /* \"#utility.yul\":2986:3108   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3114:3253   */\n    tag_109:\n        /* \"#utility.yul\":3160:3165   */\n      0x00\n        /* \"#utility.yul\":3198:3204   */\n      dup2\n        /* \"#utility.yul\":3185:3205   */\n      calldataload\n        /* \"#utility.yul\":3176:3205   */\n      swap1\n      pop\n        /* \"#utility.yul\":3214:3247   */\n      tag_164\n        /* \"#utility.yul\":3241:3246   */\n      dup2\n        /* \"#utility.yul\":3214:3247   */\n      tag_108\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":3114:3253   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3259:3588   */\n    tag_32:\n        /* \"#utility.yul\":3318:3324   */\n      0x00\n        /* \"#utility.yul\":3367:3369   */\n      0x20\n        /* \"#utility.yul\":3355:3364   */\n      dup3\n        /* \"#utility.yul\":3346:3353   */\n      dup5\n        /* \"#utility.yul\":3342:3365   */\n      sub\n        /* \"#utility.yul\":3338:3370   */\n      slt\n        /* \"#utility.yul\":3335:3454   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":3373:3452   */\n      tag_167\n      tag_94\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3335:3454   */\n    tag_166:\n        /* \"#utility.yul\":3493:3494   */\n      0x00\n        /* \"#utility.yul\":3518:3571   */\n      tag_168\n        /* \"#utility.yul\":3563:3570   */\n      dup5\n        /* \"#utility.yul\":3554:3560   */\n      dup3\n        /* \"#utility.yul\":3543:3552   */\n      dup6\n        /* \"#utility.yul\":3539:3561   */\n      add\n        /* \"#utility.yul\":3518:3571   */\n      tag_109\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":3508:3571   */\n      swap2\n      pop\n        /* \"#utility.yul\":3464:3581   */\n      pop\n        /* \"#utility.yul\":3259:3588   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3594:3763   */\n    tag_110:\n        /* \"#utility.yul\":3678:3689   */\n      0x00\n        /* \"#utility.yul\":3712:3718   */\n      dup3\n        /* \"#utility.yul\":3707:3710   */\n      dup3\n        /* \"#utility.yul\":3700:3719   */\n      mstore\n        /* \"#utility.yul\":3752:3756   */\n      0x20\n        /* \"#utility.yul\":3747:3750   */\n      dup3\n        /* \"#utility.yul\":3743:3757   */\n      add\n        /* \"#utility.yul\":3728:3757   */\n      swap1\n      pop\n        /* \"#utility.yul\":3594:3763   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3769:3939   */\n    tag_111:\n        /* \"#utility.yul\":3909:3931   */\n      0x4e6f20746f6b656e7320746f20756e7374616b65000000000000000000000000\n        /* \"#utility.yul\":3905:3906   */\n      0x00\n        /* \"#utility.yul\":3897:3903   */\n      dup3\n        /* \"#utility.yul\":3893:3907   */\n      add\n        /* \"#utility.yul\":3886:3932   */\n      mstore\n        /* \"#utility.yul\":3769:3939   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3945:4311   */\n    tag_112:\n        /* \"#utility.yul\":4087:4090   */\n      0x00\n        /* \"#utility.yul\":4108:4175   */\n      tag_172\n        /* \"#utility.yul\":4172:4174   */\n      0x14\n        /* \"#utility.yul\":4167:4170   */\n      dup4\n        /* \"#utility.yul\":4108:4175   */\n      tag_110\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4101:4175   */\n      swap2\n      pop\n        /* \"#utility.yul\":4184:4277   */\n      tag_173\n        /* \"#utility.yul\":4273:4276   */\n      dup3\n        /* \"#utility.yul\":4184:4277   */\n      tag_111\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4302:4304   */\n      0x20\n        /* \"#utility.yul\":4297:4300   */\n      dup3\n        /* \"#utility.yul\":4293:4305   */\n      add\n        /* \"#utility.yul\":4286:4305   */\n      swap1\n      pop\n        /* \"#utility.yul\":3945:4311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4317:4736   */\n    tag_44:\n        /* \"#utility.yul\":4483:4487   */\n      0x00\n        /* \"#utility.yul\":4521:4523   */\n      0x20\n        /* \"#utility.yul\":4510:4519   */\n      dup3\n        /* \"#utility.yul\":4506:4524   */\n      add\n        /* \"#utility.yul\":4498:4524   */\n      swap1\n      pop\n        /* \"#utility.yul\":4570:4579   */\n      dup2\n        /* \"#utility.yul\":4564:4568   */\n      dup2\n        /* \"#utility.yul\":4560:4580   */\n      sub\n        /* \"#utility.yul\":4556:4557   */\n      0x00\n        /* \"#utility.yul\":4545:4554   */\n      dup4\n        /* \"#utility.yul\":4541:4558   */\n      add\n        /* \"#utility.yul\":4534:4581   */\n      mstore\n        /* \"#utility.yul\":4598:4729   */\n      tag_175\n        /* \"#utility.yul\":4724:4728   */\n      dup2\n        /* \"#utility.yul\":4598:4729   */\n      tag_112\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4590:4729   */\n      swap1\n      pop\n        /* \"#utility.yul\":4317:4736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4742:5074   */\n    tag_46:\n        /* \"#utility.yul\":4863:4867   */\n      0x00\n        /* \"#utility.yul\":4901:4903   */\n      0x40\n        /* \"#utility.yul\":4890:4899   */\n      dup3\n        /* \"#utility.yul\":4886:4904   */\n      add\n        /* \"#utility.yul\":4878:4904   */\n      swap1\n      pop\n        /* \"#utility.yul\":4914:4985   */\n      tag_177\n        /* \"#utility.yul\":4982:4983   */\n      0x00\n        /* \"#utility.yul\":4971:4980   */\n      dup4\n        /* \"#utility.yul\":4967:4984   */\n      add\n        /* \"#utility.yul\":4958:4964   */\n      dup6\n        /* \"#utility.yul\":4914:4985   */\n      tag_107\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":4995:5067   */\n      tag_178\n        /* \"#utility.yul\":5063:5065   */\n      0x20\n        /* \"#utility.yul\":5052:5061   */\n      dup4\n        /* \"#utility.yul\":5048:5066   */\n      add\n        /* \"#utility.yul\":5039:5045   */\n      dup5\n        /* \"#utility.yul\":4995:5067   */\n      tag_101\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":4742:5074   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5080:5170   */\n    tag_113:\n        /* \"#utility.yul\":5114:5121   */\n      0x00\n        /* \"#utility.yul\":5157:5162   */\n      dup2\n        /* \"#utility.yul\":5150:5163   */\n      iszero\n        /* \"#utility.yul\":5143:5164   */\n      iszero\n        /* \"#utility.yul\":5132:5164   */\n      swap1\n      pop\n        /* \"#utility.yul\":5080:5170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5176:5292   */\n    tag_114:\n        /* \"#utility.yul\":5246:5267   */\n      tag_181\n        /* \"#utility.yul\":5261:5266   */\n      dup2\n        /* \"#utility.yul\":5246:5267   */\n      tag_113\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5239:5244   */\n      dup2\n        /* \"#utility.yul\":5236:5268   */\n      eq\n        /* \"#utility.yul\":5226:5286   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":5282:5283   */\n      0x00\n        /* \"#utility.yul\":5279:5280   */\n      dup1\n        /* \"#utility.yul\":5272:5284   */\n      revert\n        /* \"#utility.yul\":5226:5286   */\n    tag_182:\n        /* \"#utility.yul\":5176:5292   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5298:5435   */\n    tag_115:\n        /* \"#utility.yul\":5352:5357   */\n      0x00\n        /* \"#utility.yul\":5383:5389   */\n      dup2\n        /* \"#utility.yul\":5377:5390   */\n      mload\n        /* \"#utility.yul\":5368:5390   */\n      swap1\n      pop\n        /* \"#utility.yul\":5399:5429   */\n      tag_184\n        /* \"#utility.yul\":5423:5428   */\n      dup2\n        /* \"#utility.yul\":5399:5429   */\n      tag_114\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5298:5435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5441:5786   */\n    tag_50:\n        /* \"#utility.yul\":5508:5514   */\n      0x00\n        /* \"#utility.yul\":5557:5559   */\n      0x20\n        /* \"#utility.yul\":5545:5554   */\n      dup3\n        /* \"#utility.yul\":5536:5543   */\n      dup5\n        /* \"#utility.yul\":5532:5555   */\n      sub\n        /* \"#utility.yul\":5528:5560   */\n      slt\n        /* \"#utility.yul\":5525:5644   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":5563:5642   */\n      tag_187\n      tag_94\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":5525:5644   */\n    tag_186:\n        /* \"#utility.yul\":5683:5684   */\n      0x00\n        /* \"#utility.yul\":5708:5769   */\n      tag_188\n        /* \"#utility.yul\":5761:5768   */\n      dup5\n        /* \"#utility.yul\":5752:5758   */\n      dup3\n        /* \"#utility.yul\":5741:5750   */\n      dup6\n        /* \"#utility.yul\":5737:5759   */\n      add\n        /* \"#utility.yul\":5708:5769   */\n      tag_115\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":5698:5769   */\n      swap2\n      pop\n        /* \"#utility.yul\":5654:5779   */\n      pop\n        /* \"#utility.yul\":5441:5786   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5792:5963   */\n    tag_116:\n        /* \"#utility.yul\":5932:5955   */\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":5928:5929   */\n      0x00\n        /* \"#utility.yul\":5920:5926   */\n      dup3\n        /* \"#utility.yul\":5916:5930   */\n      add\n        /* \"#utility.yul\":5909:5956   */\n      mstore\n        /* \"#utility.yul\":5792:5963   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5969:6335   */\n    tag_117:\n        /* \"#utility.yul\":6111:6114   */\n      0x00\n        /* \"#utility.yul\":6132:6199   */\n      tag_191\n        /* \"#utility.yul\":6196:6198   */\n      0x15\n        /* \"#utility.yul\":6191:6194   */\n      dup4\n        /* \"#utility.yul\":6132:6199   */\n      tag_110\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":6125:6199   */\n      swap2\n      pop\n        /* \"#utility.yul\":6208:6301   */\n      tag_192\n        /* \"#utility.yul\":6297:6300   */\n      dup3\n        /* \"#utility.yul\":6208:6301   */\n      tag_116\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6326:6328   */\n      0x20\n        /* \"#utility.yul\":6321:6324   */\n      dup3\n        /* \"#utility.yul\":6317:6329   */\n      add\n        /* \"#utility.yul\":6310:6329   */\n      swap1\n      pop\n        /* \"#utility.yul\":5969:6335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6341:6760   */\n    tag_53:\n        /* \"#utility.yul\":6507:6511   */\n      0x00\n        /* \"#utility.yul\":6545:6547   */\n      0x20\n        /* \"#utility.yul\":6534:6543   */\n      dup3\n        /* \"#utility.yul\":6530:6548   */\n      add\n        /* \"#utility.yul\":6522:6548   */\n      swap1\n      pop\n        /* \"#utility.yul\":6594:6603   */\n      dup2\n        /* \"#utility.yul\":6588:6592   */\n      dup2\n        /* \"#utility.yul\":6584:6604   */\n      sub\n        /* \"#utility.yul\":6580:6581   */\n      0x00\n        /* \"#utility.yul\":6569:6578   */\n      dup4\n        /* \"#utility.yul\":6565:6582   */\n      add\n        /* \"#utility.yul\":6558:6605   */\n      mstore\n        /* \"#utility.yul\":6622:6753   */\n      tag_194\n        /* \"#utility.yul\":6748:6752   */\n      dup2\n        /* \"#utility.yul\":6622:6753   */\n      tag_117\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":6614:6753   */\n      swap1\n      pop\n        /* \"#utility.yul\":6341:6760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6766:6988   */\n    tag_55:\n        /* \"#utility.yul\":6859:6863   */\n      0x00\n        /* \"#utility.yul\":6897:6899   */\n      0x20\n        /* \"#utility.yul\":6886:6895   */\n      dup3\n        /* \"#utility.yul\":6882:6900   */\n      add\n        /* \"#utility.yul\":6874:6900   */\n      swap1\n      pop\n        /* \"#utility.yul\":6910:6981   */\n      tag_196\n        /* \"#utility.yul\":6978:6979   */\n      0x00\n        /* \"#utility.yul\":6967:6976   */\n      dup4\n        /* \"#utility.yul\":6963:6980   */\n      add\n        /* \"#utility.yul\":6954:6960   */\n      dup5\n        /* \"#utility.yul\":6910:6981   */\n      tag_101\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":6766:6988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6994:7173   */\n    tag_118:\n        /* \"#utility.yul\":7134:7165   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":7130:7131   */\n      0x00\n        /* \"#utility.yul\":7122:7128   */\n      dup3\n        /* \"#utility.yul\":7118:7132   */\n      add\n        /* \"#utility.yul\":7111:7166   */\n      mstore\n        /* \"#utility.yul\":6994:7173   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7179:7545   */\n    tag_119:\n        /* \"#utility.yul\":7321:7324   */\n      0x00\n        /* \"#utility.yul\":7342:7409   */\n      tag_199\n        /* \"#utility.yul\":7406:7408   */\n      0x1d\n        /* \"#utility.yul\":7401:7404   */\n      dup4\n        /* \"#utility.yul\":7342:7409   */\n      tag_110\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":7335:7409   */\n      swap2\n      pop\n        /* \"#utility.yul\":7418:7511   */\n      tag_200\n        /* \"#utility.yul\":7507:7510   */\n      dup3\n        /* \"#utility.yul\":7418:7511   */\n      tag_118\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":7536:7538   */\n      0x20\n        /* \"#utility.yul\":7531:7534   */\n      dup3\n        /* \"#utility.yul\":7527:7539   */\n      add\n        /* \"#utility.yul\":7520:7539   */\n      swap1\n      pop\n        /* \"#utility.yul\":7179:7545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7551:7970   */\n    tag_66:\n        /* \"#utility.yul\":7717:7721   */\n      0x00\n        /* \"#utility.yul\":7755:7757   */\n      0x20\n        /* \"#utility.yul\":7744:7753   */\n      dup3\n        /* \"#utility.yul\":7740:7758   */\n      add\n        /* \"#utility.yul\":7732:7758   */\n      swap1\n      pop\n        /* \"#utility.yul\":7804:7813   */\n      dup2\n        /* \"#utility.yul\":7798:7802   */\n      dup2\n        /* \"#utility.yul\":7794:7814   */\n      sub\n        /* \"#utility.yul\":7790:7791   */\n      0x00\n        /* \"#utility.yul\":7779:7788   */\n      dup4\n        /* \"#utility.yul\":7775:7792   */\n      add\n        /* \"#utility.yul\":7768:7815   */\n      mstore\n        /* \"#utility.yul\":7832:7963   */\n      tag_202\n        /* \"#utility.yul\":7958:7962   */\n      dup2\n        /* \"#utility.yul\":7832:7963   */\n      tag_119\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":7824:7963   */\n      swap1\n      pop\n        /* \"#utility.yul\":7551:7970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7976:8418   */\n    tag_68:\n        /* \"#utility.yul\":8125:8129   */\n      0x00\n        /* \"#utility.yul\":8163:8165   */\n      0x60\n        /* \"#utility.yul\":8152:8161   */\n      dup3\n        /* \"#utility.yul\":8148:8166   */\n      add\n        /* \"#utility.yul\":8140:8166   */\n      swap1\n      pop\n        /* \"#utility.yul\":8176:8247   */\n      tag_204\n        /* \"#utility.yul\":8244:8245   */\n      0x00\n        /* \"#utility.yul\":8233:8242   */\n      dup4\n        /* \"#utility.yul\":8229:8246   */\n      add\n        /* \"#utility.yul\":8220:8226   */\n      dup7\n        /* \"#utility.yul\":8176:8247   */\n      tag_107\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":8257:8329   */\n      tag_205\n        /* \"#utility.yul\":8325:8327   */\n      0x20\n        /* \"#utility.yul\":8314:8323   */\n      dup4\n        /* \"#utility.yul\":8310:8328   */\n      add\n        /* \"#utility.yul\":8301:8307   */\n      dup6\n        /* \"#utility.yul\":8257:8329   */\n      tag_107\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":8339:8411   */\n      tag_206\n        /* \"#utility.yul\":8407:8409   */\n      0x40\n        /* \"#utility.yul\":8396:8405   */\n      dup4\n        /* \"#utility.yul\":8392:8410   */\n      add\n        /* \"#utility.yul\":8383:8389   */\n      dup5\n        /* \"#utility.yul\":8339:8411   */\n      tag_101\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":7976:8418   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8424:8604   */\n    tag_120:\n        /* \"#utility.yul\":8472:8549   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8469:8470   */\n      0x00\n        /* \"#utility.yul\":8462:8550   */\n      mstore\n        /* \"#utility.yul\":8569:8573   */\n      0x11\n        /* \"#utility.yul\":8566:8567   */\n      0x04\n        /* \"#utility.yul\":8559:8574   */\n      mstore\n        /* \"#utility.yul\":8593:8597   */\n      0x24\n        /* \"#utility.yul\":8590:8591   */\n      0x00\n        /* \"#utility.yul\":8583:8598   */\n      revert\n        /* \"#utility.yul\":8610:8801   */\n    tag_75:\n        /* \"#utility.yul\":8650:8653   */\n      0x00\n        /* \"#utility.yul\":8669:8689   */\n      tag_209\n        /* \"#utility.yul\":8687:8688   */\n      dup3\n        /* \"#utility.yul\":8669:8689   */\n      tag_100\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":8664:8689   */\n      swap2\n      pop\n        /* \"#utility.yul\":8703:8723   */\n      tag_210\n        /* \"#utility.yul\":8721:8722   */\n      dup4\n        /* \"#utility.yul\":8703:8723   */\n      tag_100\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":8698:8723   */\n      swap3\n      pop\n        /* \"#utility.yul\":8746:8747   */\n      dup3\n        /* \"#utility.yul\":8743:8744   */\n      dup3\n        /* \"#utility.yul\":8739:8748   */\n      add\n        /* \"#utility.yul\":8732:8748   */\n      swap1\n      pop\n        /* \"#utility.yul\":8767:8770   */\n      dup1\n        /* \"#utility.yul\":8764:8765   */\n      dup3\n        /* \"#utility.yul\":8761:8771   */\n      gt\n        /* \"#utility.yul\":8758:8794   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":8774:8792   */\n      tag_212\n      tag_120\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":8758:8794   */\n    tag_211:\n        /* \"#utility.yul\":8610:8801   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201749a415ce541b28fb12618e98337c6c6669562f23d25aed7ffcc21ede3bdc7064736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_313": {
									"entryPoint": null,
									"id": 313,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 363,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2707:4",
										"nodeType": "YulBlock",
										"src": "0:2707:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "759:80:4",
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nativeSrc": "769:22:4",
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nativeSrc": "778:13:4",
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nativeSrc": "800:33:4",
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nativeSrc": "800:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:4",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:4",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:4",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nativeSrc": "922:274:4",
													"nodeType": "YulBlock",
													"src": "922:274:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:4",
																"nodeType": "YulBlock",
																"src": "968:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:4"
																			},
																			"nativeSrc": "970:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:4"
																		},
																		"nativeSrc": "970:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:4"
																		},
																		"nativeSrc": "939:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:4",
																		"nodeType": "YulLiteral",
																		"src": "964:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:4"
																},
																"nativeSrc": "935:32:4",
																"nodeType": "YulFunctionCall",
																"src": "935:32:4"
															},
															"nativeSrc": "932:119:4",
															"nodeType": "YulIf",
															"src": "932:119:4"
														},
														{
															"nativeSrc": "1061:128:4",
															"nodeType": "YulBlock",
															"src": "1061:128:4",
															"statements": [
																{
																	"nativeSrc": "1076:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:4"
																				},
																				"nativeSrc": "1147:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:4"
																		},
																		"nativeSrc": "1115:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:4",
														"nodeType": "YulTypedName",
														"src": "892:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:4",
														"nodeType": "YulTypedName",
														"src": "903:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:4",
														"nodeType": "YulTypedName",
														"src": "915:6:4",
														"type": ""
													}
												],
												"src": "845:351:4"
											},
											{
												"body": {
													"nativeSrc": "1267:53:4",
													"nodeType": "YulBlock",
													"src": "1267:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:4"
																		},
																		"nativeSrc": "1289:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:4"
																},
																"nativeSrc": "1277:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:4"
															},
															"nativeSrc": "1277:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:4",
														"nodeType": "YulTypedName",
														"src": "1255:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:4",
														"nodeType": "YulTypedName",
														"src": "1262:3:4",
														"type": ""
													}
												],
												"src": "1202:118:4"
											},
											{
												"body": {
													"nativeSrc": "1424:124:4",
													"nodeType": "YulBlock",
													"src": "1424:124:4",
													"statements": [
														{
															"nativeSrc": "1434:26:4",
															"nodeType": "YulAssignment",
															"src": "1434:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:4"
																},
																"nativeSrc": "1442:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:4"
																		},
																		"nativeSrc": "1523:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:4"
																},
																"nativeSrc": "1470:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:4"
															},
															"nativeSrc": "1470:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:4",
														"nodeType": "YulTypedName",
														"src": "1396:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:4",
														"nodeType": "YulTypedName",
														"src": "1408:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:4",
														"nodeType": "YulTypedName",
														"src": "1419:4:4",
														"type": ""
													}
												],
												"src": "1326:222:4"
											},
											{
												"body": {
													"nativeSrc": "1650:73:4",
													"nodeType": "YulBlock",
													"src": "1650:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1667:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1667:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1672:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1660:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:4"
																},
																"nativeSrc": "1660:19:4",
																"nodeType": "YulFunctionCall",
																"src": "1660:19:4"
															},
															"nativeSrc": "1660:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "1660:19:4"
														},
														{
															"nativeSrc": "1688:29:4",
															"nodeType": "YulAssignment",
															"src": "1688:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1707:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1707:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1712:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1712:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1703:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:4"
																},
																"nativeSrc": "1703:14:4",
																"nodeType": "YulFunctionCall",
																"src": "1703:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1688:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "1688:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1554:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1622:3:4",
														"nodeType": "YulTypedName",
														"src": "1622:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1627:6:4",
														"nodeType": "YulTypedName",
														"src": "1627:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1638:11:4",
														"nodeType": "YulTypedName",
														"src": "1638:11:4",
														"type": ""
													}
												],
												"src": "1554:169:4"
											},
											{
												"body": {
													"nativeSrc": "1835:72:4",
													"nodeType": "YulBlock",
													"src": "1835:72:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1857:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1857:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1865:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1865:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1853:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1853:3:4"
																		},
																		"nativeSrc": "1853:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1853:14:4"
																	},
																	{
																		"hexValue": "546f6b656e20616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "1869:30:4",
																		"nodeType": "YulLiteral",
																		"src": "1869:30:4",
																		"type": "",
																		"value": "Token address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1846:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1846:6:4"
																},
																"nativeSrc": "1846:54:4",
																"nodeType": "YulFunctionCall",
																"src": "1846:54:4"
															},
															"nativeSrc": "1846:54:4",
															"nodeType": "YulExpressionStatement",
															"src": "1846:54:4"
														}
													]
												},
												"name": "store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
												"nativeSrc": "1729:178:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1827:6:4",
														"nodeType": "YulTypedName",
														"src": "1827:6:4",
														"type": ""
													}
												],
												"src": "1729:178:4"
											},
											{
												"body": {
													"nativeSrc": "2059:220:4",
													"nodeType": "YulBlock",
													"src": "2059:220:4",
													"statements": [
														{
															"nativeSrc": "2069:74:4",
															"nodeType": "YulAssignment",
															"src": "2069:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2135:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2135:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2140:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2140:2:4",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2076:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "2076:58:4"
																},
																"nativeSrc": "2076:67:4",
																"nodeType": "YulFunctionCall",
																"src": "2076:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2069:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2069:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2241:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2241:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
																	"nativeSrc": "2152:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "2152:88:4"
																},
																"nativeSrc": "2152:93:4",
																"nodeType": "YulFunctionCall",
																"src": "2152:93:4"
															},
															"nativeSrc": "2152:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "2152:93:4"
														},
														{
															"nativeSrc": "2254:19:4",
															"nodeType": "YulAssignment",
															"src": "2254:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2265:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2265:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2270:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2270:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2261:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:4"
																},
																"nativeSrc": "2261:12:4",
																"nodeType": "YulFunctionCall",
																"src": "2261:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2254:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2254:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1913:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2047:3:4",
														"nodeType": "YulTypedName",
														"src": "2047:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2055:3:4",
														"nodeType": "YulTypedName",
														"src": "2055:3:4",
														"type": ""
													}
												],
												"src": "1913:366:4"
											},
											{
												"body": {
													"nativeSrc": "2456:248:4",
													"nodeType": "YulBlock",
													"src": "2456:248:4",
													"statements": [
														{
															"nativeSrc": "2466:26:4",
															"nodeType": "YulAssignment",
															"src": "2466:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2478:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2478:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2489:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2489:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2474:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2474:3:4"
																},
																"nativeSrc": "2474:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2474:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2466:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2466:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2513:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2513:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2524:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2524:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2509:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2509:3:4"
																		},
																		"nativeSrc": "2509:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2509:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2532:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "2532:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2538:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2528:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2528:3:4"
																		},
																		"nativeSrc": "2528:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2528:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2502:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:4"
																},
																"nativeSrc": "2502:47:4",
																"nodeType": "YulFunctionCall",
																"src": "2502:47:4"
															},
															"nativeSrc": "2502:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "2502:47:4"
														},
														{
															"nativeSrc": "2558:139:4",
															"nodeType": "YulAssignment",
															"src": "2558:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2692:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "2692:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2566:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "2566:124:4"
																},
																"nativeSrc": "2566:131:4",
																"nodeType": "YulFunctionCall",
																"src": "2566:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2558:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2558:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2285:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2436:9:4",
														"nodeType": "YulTypedName",
														"src": "2436:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2451:4:4",
														"nodeType": "YulTypedName",
														"src": "2451:4:4",
														"type": ""
													}
												],
												"src": "2285:419:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token address cannot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516110ea3803806110ea83398181016040528101906100329190610292565b30600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c91906102ce565b60405180910390fd5b6100b48161016b60201b60201c565b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610124576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011b90610346565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610366565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061025f82610234565b9050919050565b61026f81610254565b811461027a57600080fd5b50565b60008151905061028c81610266565b92915050565b6000602082840312156102a8576102a761022f565b5b60006102b68482850161027d565b91505092915050565b6102c881610254565b82525050565b60006020820190506102e360008301846102bf565b92915050565b600082825260208201905092915050565b7f546f6b656e20616464726573732063616e6e6f74206265207a65726f00000000600082015250565b6000610330601c836102e9565b915061033b826102fa565b602082019050919050565b6000602082019050818103600083015261035f81610323565b9050919050565b610d75806103756000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f0578063a694fc3a1461010e578063f2fde38b1461012a578063f41322ac1461014657610088565b806316934fc41461008d5780632def6620146100be578063715018a6146100c857806372f702f3146100d2575b600080fd5b6100a760048036038101906100a2919061093b565b610177565b6040516100b5929190610981565b60405180910390f35b6100c661019b565b005b6100d061040e565b005b6100da610422565b6040516100e79190610a09565b60405180910390f35b6100f8610448565b6040516101059190610a33565b60405180910390f35b61012860048036038101906101239190610a7a565b610471565b005b610144600480360381019061013f919061093b565b610686565b005b610160600480360381019061015b919061093b565b61070c565b60405161016e929190610981565b60405180910390f35b60026020528060005260406000206000915090508060000154908060010154905082565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000816000015111610244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023b90610b04565b60405180910390fd5b6000816000015190506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161033a929190610b24565b6020604051808303816000875af1158015610359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037d9190610b85565b6103bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b390610bfe565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75826040516104029190610c1e565b60405180910390a25050565b610416610785565b610420600061080c565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081116104b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ab90610c85565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161051393929190610ca5565b6020604051808303816000875af1158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190610b85565b610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c90610bfe565b60405180910390fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546105e79190610d0b565b9250508190555042600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8260405161067b9190610c1e565b60405180910390a250565b61068e610785565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107005760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106f79190610a33565b60405180910390fd5b6107098161080c565b50565b6000806000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050806000015181602001519250925050915091565b61078d6108d0565b73ffffffffffffffffffffffffffffffffffffffff166107ab610448565b73ffffffffffffffffffffffffffffffffffffffff161461080a576107ce6108d0565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108019190610a33565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610908826108dd565b9050919050565b610918816108fd565b811461092357600080fd5b50565b6000813590506109358161090f565b92915050565b600060208284031215610951576109506108d8565b5b600061095f84828501610926565b91505092915050565b6000819050919050565b61097b81610968565b82525050565b60006040820190506109966000830185610972565b6109a36020830184610972565b9392505050565b6000819050919050565b60006109cf6109ca6109c5846108dd565b6109aa565b6108dd565b9050919050565b60006109e1826109b4565b9050919050565b60006109f3826109d6565b9050919050565b610a03816109e8565b82525050565b6000602082019050610a1e60008301846109fa565b92915050565b610a2d816108fd565b82525050565b6000602082019050610a486000830184610a24565b92915050565b610a5781610968565b8114610a6257600080fd5b50565b600081359050610a7481610a4e565b92915050565b600060208284031215610a9057610a8f6108d8565b5b6000610a9e84828501610a65565b91505092915050565b600082825260208201905092915050565b7f4e6f20746f6b656e7320746f20756e7374616b65000000000000000000000000600082015250565b6000610aee601483610aa7565b9150610af982610ab8565b602082019050919050565b60006020820190508181036000830152610b1d81610ae1565b9050919050565b6000604082019050610b396000830185610a24565b610b466020830184610972565b9392505050565b60008115159050919050565b610b6281610b4d565b8114610b6d57600080fd5b50565b600081519050610b7f81610b59565b92915050565b600060208284031215610b9b57610b9a6108d8565b5b6000610ba984828501610b70565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b6000610be8601583610aa7565b9150610bf382610bb2565b602082019050919050565b60006020820190508181036000830152610c1781610bdb565b9050919050565b6000602082019050610c336000830184610972565b92915050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b6000610c6f601d83610aa7565b9150610c7a82610c39565b602082019050919050565b60006020820190508181036000830152610c9e81610c62565b9050919050565b6000606082019050610cba6000830186610a24565b610cc76020830185610a24565b610cd46040830184610972565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d1682610968565b9150610d2183610968565b9250828201905080821115610d3957610d38610cdc565b5b9291505056fea26469706673582212201749a415ce541b28fb12618e98337c6c6669562f23d25aed7ffcc21ede3bdc7064736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x10EA CODESIZE SUB DUP1 PUSH2 0x10EA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x292 JUMP JUMPDEST ADDRESS PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB4 DUP2 PUSH2 0x16B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x124 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B SWAP1 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x366 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25F DUP3 PUSH2 0x234 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F DUP2 PUSH2 0x254 JUMP JUMPDEST DUP2 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x28C DUP2 PUSH2 0x266 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x2A7 PUSH2 0x22F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B6 DUP5 DUP3 DUP6 ADD PUSH2 0x27D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C8 DUP2 PUSH2 0x254 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20616464726573732063616E6E6F74206265207A65726F00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x330 PUSH1 0x1C DUP4 PUSH2 0x2E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x33B DUP3 PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35F DUP2 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD75 DUP1 PUSH2 0x375 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xF41322AC EQ PUSH2 0x146 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0xD2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP3 SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x19B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD0 PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDA PUSH2 0x422 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP3 SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x244 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23B SWAP1 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33A SWAP3 SWAP2 SWAP1 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x359 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B3 SWAP1 PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP3 PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x416 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x420 PUSH1 0x0 PUSH2 0x80C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AB SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x513 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP1 PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5E7 SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x67B SWAP2 SWAP1 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x68E PUSH2 0x785 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x700 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x709 DUP2 PUSH2 0x80C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x78D PUSH2 0x8D0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7AB PUSH2 0x448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x80A JUMPI PUSH2 0x7CE PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x801 SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x908 DUP3 PUSH2 0x8DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x918 DUP2 PUSH2 0x8FD JUMP JUMPDEST DUP2 EQ PUSH2 0x923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x935 DUP2 PUSH2 0x90F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x951 JUMPI PUSH2 0x950 PUSH2 0x8D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x95F DUP5 DUP3 DUP6 ADD PUSH2 0x926 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x97B DUP2 PUSH2 0x968 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x996 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x972 JUMP JUMPDEST PUSH2 0x9A3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CF PUSH2 0x9CA PUSH2 0x9C5 DUP5 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x8DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E1 DUP3 PUSH2 0x9B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F3 DUP3 PUSH2 0x9D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA03 DUP2 PUSH2 0x9E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA1E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA2D DUP2 PUSH2 0x8FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA48 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA57 DUP2 PUSH2 0x968 JUMP JUMPDEST DUP2 EQ PUSH2 0xA62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA74 DUP2 PUSH2 0xA4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA90 JUMPI PUSH2 0xA8F PUSH2 0x8D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA9E DUP5 DUP3 DUP6 ADD PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F20756E7374616B65000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEE PUSH1 0x14 DUP4 PUSH2 0xAA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xAF9 DUP3 PUSH2 0xAB8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB1D DUP2 PUSH2 0xAE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB39 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xB46 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB62 DUP2 PUSH2 0xB4D JUMP JUMPDEST DUP2 EQ PUSH2 0xB6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB7F DUP2 PUSH2 0xB59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB9A PUSH2 0x8D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBA9 DUP5 DUP3 DUP6 ADD PUSH2 0xB70 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE8 PUSH1 0x15 DUP4 PUSH2 0xAA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xBF3 DUP3 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC17 DUP2 PUSH2 0xBDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC33 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6F PUSH1 0x1D DUP4 PUSH2 0xAA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xC7A DUP3 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC9E DUP2 PUSH2 0xC62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCBA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xCC7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xCD4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD16 DUP3 PUSH2 0x968 JUMP JUMPDEST SWAP2 POP PUSH2 0xD21 DUP4 PUSH2 0x968 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD39 JUMPI PUSH2 0xD38 PUSH2 0xCDC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR BLOBHASH LOG4 ISZERO 0xCE SLOAD SHL 0x28 0xFB SLT PUSH2 0x8E98 CALLER PUSH29 0x6C6669562F23D25AED7FFCC21EDE3BDC7064736F6C634300081C003300 ",
							"sourceMap": "175:2429:3:-:0;;;706:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;218:4;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;783:1:3;759:26;;:12;:26;;;751:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;851:12;829;;:35;;;;;;;;;;;;;;;;;;706:166;175:2429;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:169::-;1638:11;1672:6;1667:3;1660:19;1712:4;1707:3;1703:14;1688:29;;1554:169;;;;:::o;1729:178::-;1869:30;1865:1;1857:6;1853:14;1846:54;1729:178;:::o;1913:366::-;2055:3;2076:67;2140:2;2135:3;2076:67;:::i;:::-;2069:74;;2152:93;2241:3;2152:93;:::i;:::-;2270:2;2265:3;2261:12;2254:19;;1913:366;;;:::o;2285:419::-;2451:4;2489:2;2478:9;2474:18;2466:26;;2538:9;2532:4;2528:20;2524:1;2513:9;2509:17;2502:47;2566:131;2692:4;2566:131;:::i;:::-;2558:139;;2285:419;;;:::o;175:2429:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1925,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_237": {
									"entryPoint": 2256,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2060,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getStakeDetails_446": {
									"entryPoint": 1804,
									"id": 446,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@owner_67": {
									"entryPoint": 1096,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1038,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_364": {
									"entryPoint": 1137,
									"id": 364,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_278": {
									"entryPoint": 375,
									"id": 278,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingToken_268": {
									"entryPoint": 1058,
									"id": 268,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1670,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_422": {
									"entryPoint": 411,
									"id": 422,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 2554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3237,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2852,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": 2569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 2536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2264,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 3129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4": {
									"entryPoint": 2994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346": {
									"entryPoint": 2744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8804:4",
										"nodeType": "YulBlock",
										"src": "0:8804:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "748:87:4",
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nativeSrc": "758:29:4",
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nativeSrc": "767:20:4",
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nativeSrc": "796:33:4",
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nativeSrc": "796:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:4",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:4",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:4",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nativeSrc": "907:263:4",
													"nodeType": "YulBlock",
													"src": "907:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:4",
																"nodeType": "YulBlock",
																"src": "953:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:4"
																			},
																			"nativeSrc": "955:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:4"
																		},
																		"nativeSrc": "955:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:4"
																		},
																		"nativeSrc": "924:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:4",
																		"nodeType": "YulLiteral",
																		"src": "949:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:4"
																},
																"nativeSrc": "920:32:4",
																"nodeType": "YulFunctionCall",
																"src": "920:32:4"
															},
															"nativeSrc": "917:119:4",
															"nodeType": "YulIf",
															"src": "917:119:4"
														},
														{
															"nativeSrc": "1046:117:4",
															"nodeType": "YulBlock",
															"src": "1046:117:4",
															"statements": [
																{
																	"nativeSrc": "1061:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:4"
																				},
																				"nativeSrc": "1121:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:4"
																		},
																		"nativeSrc": "1100:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:4",
														"nodeType": "YulTypedName",
														"src": "877:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:4",
														"nodeType": "YulTypedName",
														"src": "888:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:4",
														"nodeType": "YulTypedName",
														"src": "900:6:4",
														"type": ""
													}
												],
												"src": "841:329:4"
											},
											{
												"body": {
													"nativeSrc": "1221:32:4",
													"nodeType": "YulBlock",
													"src": "1221:32:4",
													"statements": [
														{
															"nativeSrc": "1231:16:4",
															"nodeType": "YulAssignment",
															"src": "1231:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:4",
																"nodeType": "YulIdentifier",
																"src": "1242:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:4",
														"nodeType": "YulTypedName",
														"src": "1203:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:4",
														"nodeType": "YulTypedName",
														"src": "1213:7:4",
														"type": ""
													}
												],
												"src": "1176:77:4"
											},
											{
												"body": {
													"nativeSrc": "1324:53:4",
													"nodeType": "YulBlock",
													"src": "1324:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:4"
																		},
																		"nativeSrc": "1346:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:4"
																},
																"nativeSrc": "1334:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:4"
															},
															"nativeSrc": "1334:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:4",
														"nodeType": "YulTypedName",
														"src": "1312:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:4",
														"nodeType": "YulTypedName",
														"src": "1319:3:4",
														"type": ""
													}
												],
												"src": "1259:118:4"
											},
											{
												"body": {
													"nativeSrc": "1509:206:4",
													"nodeType": "YulBlock",
													"src": "1509:206:4",
													"statements": [
														{
															"nativeSrc": "1519:26:4",
															"nodeType": "YulAssignment",
															"src": "1519:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1531:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1531:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1542:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1542:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1527:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1527:3:4"
																},
																"nativeSrc": "1527:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1527:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1519:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1519:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1599:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1599:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1612:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1612:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1623:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1623:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1608:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1608:3:4"
																		},
																		"nativeSrc": "1608:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1608:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1555:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:4"
																},
																"nativeSrc": "1555:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1555:71:4"
															},
															"nativeSrc": "1555:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1555:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1680:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1680:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1693:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1693:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1704:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1704:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1689:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1689:3:4"
																		},
																		"nativeSrc": "1689:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1689:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1636:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1636:43:4"
																},
																"nativeSrc": "1636:72:4",
																"nodeType": "YulFunctionCall",
																"src": "1636:72:4"
															},
															"nativeSrc": "1636:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "1636:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1473:9:4",
														"nodeType": "YulTypedName",
														"src": "1473:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1485:6:4",
														"nodeType": "YulTypedName",
														"src": "1485:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1493:6:4",
														"nodeType": "YulTypedName",
														"src": "1493:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1504:4:4",
														"nodeType": "YulTypedName",
														"src": "1504:4:4",
														"type": ""
													}
												],
												"src": "1383:332:4"
											},
											{
												"body": {
													"nativeSrc": "1753:28:4",
													"nodeType": "YulBlock",
													"src": "1753:28:4",
													"statements": [
														{
															"nativeSrc": "1763:12:4",
															"nodeType": "YulAssignment",
															"src": "1763:12:4",
															"value": {
																"name": "value",
																"nativeSrc": "1770:5:4",
																"nodeType": "YulIdentifier",
																"src": "1770:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1763:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1763:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1721:60:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1739:5:4",
														"nodeType": "YulTypedName",
														"src": "1739:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1749:3:4",
														"nodeType": "YulTypedName",
														"src": "1749:3:4",
														"type": ""
													}
												],
												"src": "1721:60:4"
											},
											{
												"body": {
													"nativeSrc": "1847:82:4",
													"nodeType": "YulBlock",
													"src": "1847:82:4",
													"statements": [
														{
															"nativeSrc": "1857:66:4",
															"nodeType": "YulAssignment",
															"src": "1857:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1915:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1915:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1897:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1897:17:4"
																				},
																				"nativeSrc": "1897:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1897:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1888:8:4",
																			"nodeType": "YulIdentifier",
																			"src": "1888:8:4"
																		},
																		"nativeSrc": "1888:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1888:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1870:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "1870:17:4"
																},
																"nativeSrc": "1870:53:4",
																"nodeType": "YulFunctionCall",
																"src": "1870:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1857:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "1857:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1787:142:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1827:5:4",
														"nodeType": "YulTypedName",
														"src": "1827:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1837:9:4",
														"nodeType": "YulTypedName",
														"src": "1837:9:4",
														"type": ""
													}
												],
												"src": "1787:142:4"
											},
											{
												"body": {
													"nativeSrc": "1995:66:4",
													"nodeType": "YulBlock",
													"src": "1995:66:4",
													"statements": [
														{
															"nativeSrc": "2005:50:4",
															"nodeType": "YulAssignment",
															"src": "2005:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2049:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2049:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2018:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "2018:30:4"
																},
																"nativeSrc": "2018:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2018:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2005:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "2005:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1935:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1975:5:4",
														"nodeType": "YulTypedName",
														"src": "1975:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1985:9:4",
														"nodeType": "YulTypedName",
														"src": "1985:9:4",
														"type": ""
													}
												],
												"src": "1935:126:4"
											},
											{
												"body": {
													"nativeSrc": "2141:66:4",
													"nodeType": "YulBlock",
													"src": "2141:66:4",
													"statements": [
														{
															"nativeSrc": "2151:50:4",
															"nodeType": "YulAssignment",
															"src": "2151:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2195:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2195:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2164:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "2164:30:4"
																},
																"nativeSrc": "2164:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2164:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2151:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "2151:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nativeSrc": "2067:140:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2121:5:4",
														"nodeType": "YulTypedName",
														"src": "2121:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2131:9:4",
														"nodeType": "YulTypedName",
														"src": "2131:9:4",
														"type": ""
													}
												],
												"src": "2067:140:4"
											},
											{
												"body": {
													"nativeSrc": "2292:80:4",
													"nodeType": "YulBlock",
													"src": "2292:80:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2309:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2309:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2359:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2359:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nativeSrc": "2314:44:4",
																			"nodeType": "YulIdentifier",
																			"src": "2314:44:4"
																		},
																		"nativeSrc": "2314:51:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2314:51:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2302:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2302:6:4"
																},
																"nativeSrc": "2302:64:4",
																"nodeType": "YulFunctionCall",
																"src": "2302:64:4"
															},
															"nativeSrc": "2302:64:4",
															"nodeType": "YulExpressionStatement",
															"src": "2302:64:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nativeSrc": "2213:159:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2280:5:4",
														"nodeType": "YulTypedName",
														"src": "2280:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2287:3:4",
														"nodeType": "YulTypedName",
														"src": "2287:3:4",
														"type": ""
													}
												],
												"src": "2213:159:4"
											},
											{
												"body": {
													"nativeSrc": "2490:138:4",
													"nodeType": "YulBlock",
													"src": "2490:138:4",
													"statements": [
														{
															"nativeSrc": "2500:26:4",
															"nodeType": "YulAssignment",
															"src": "2500:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2512:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2512:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2523:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2523:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2508:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2508:3:4"
																},
																"nativeSrc": "2508:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2508:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2500:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2500:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2594:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2594:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2607:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2607:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2618:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2618:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2603:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2603:3:4"
																		},
																		"nativeSrc": "2603:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2603:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "2536:57:4",
																	"nodeType": "YulIdentifier",
																	"src": "2536:57:4"
																},
																"nativeSrc": "2536:85:4",
																"nodeType": "YulFunctionCall",
																"src": "2536:85:4"
															},
															"nativeSrc": "2536:85:4",
															"nodeType": "YulExpressionStatement",
															"src": "2536:85:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "2378:250:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2462:9:4",
														"nodeType": "YulTypedName",
														"src": "2462:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2474:6:4",
														"nodeType": "YulTypedName",
														"src": "2474:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2485:4:4",
														"nodeType": "YulTypedName",
														"src": "2485:4:4",
														"type": ""
													}
												],
												"src": "2378:250:4"
											},
											{
												"body": {
													"nativeSrc": "2699:53:4",
													"nodeType": "YulBlock",
													"src": "2699:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2716:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2716:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2739:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2739:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2721:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "2721:17:4"
																		},
																		"nativeSrc": "2721:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2721:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2709:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:4"
																},
																"nativeSrc": "2709:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2709:37:4"
															},
															"nativeSrc": "2709:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "2709:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2634:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2687:5:4",
														"nodeType": "YulTypedName",
														"src": "2687:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2694:3:4",
														"nodeType": "YulTypedName",
														"src": "2694:3:4",
														"type": ""
													}
												],
												"src": "2634:118:4"
											},
											{
												"body": {
													"nativeSrc": "2856:124:4",
													"nodeType": "YulBlock",
													"src": "2856:124:4",
													"statements": [
														{
															"nativeSrc": "2866:26:4",
															"nodeType": "YulAssignment",
															"src": "2866:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2878:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2878:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2889:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2889:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2874:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2874:3:4"
																},
																"nativeSrc": "2874:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2874:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2866:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2866:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2946:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2946:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2959:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2959:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2970:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2970:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2955:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2955:3:4"
																		},
																		"nativeSrc": "2955:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2955:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2902:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2902:43:4"
																},
																"nativeSrc": "2902:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2902:71:4"
															},
															"nativeSrc": "2902:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2902:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2758:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2828:9:4",
														"nodeType": "YulTypedName",
														"src": "2828:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2840:6:4",
														"nodeType": "YulTypedName",
														"src": "2840:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2851:4:4",
														"nodeType": "YulTypedName",
														"src": "2851:4:4",
														"type": ""
													}
												],
												"src": "2758:222:4"
											},
											{
												"body": {
													"nativeSrc": "3029:79:4",
													"nodeType": "YulBlock",
													"src": "3029:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3086:16:4",
																"nodeType": "YulBlock",
																"src": "3086:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3095:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3095:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3098:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3098:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3088:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3088:6:4"
																			},
																			"nativeSrc": "3088:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3088:12:4"
																		},
																		"nativeSrc": "3088:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3088:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3052:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3052:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3077:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "3077:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3059:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "3059:17:4"
																				},
																				"nativeSrc": "3059:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3059:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3049:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3049:2:4"
																		},
																		"nativeSrc": "3049:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3049:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3042:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3042:6:4"
																},
																"nativeSrc": "3042:43:4",
																"nodeType": "YulFunctionCall",
																"src": "3042:43:4"
															},
															"nativeSrc": "3039:63:4",
															"nodeType": "YulIf",
															"src": "3039:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2986:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3022:5:4",
														"nodeType": "YulTypedName",
														"src": "3022:5:4",
														"type": ""
													}
												],
												"src": "2986:122:4"
											},
											{
												"body": {
													"nativeSrc": "3166:87:4",
													"nodeType": "YulBlock",
													"src": "3166:87:4",
													"statements": [
														{
															"nativeSrc": "3176:29:4",
															"nodeType": "YulAssignment",
															"src": "3176:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3198:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3198:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3185:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "3185:12:4"
																},
																"nativeSrc": "3185:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3185:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3176:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3176:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3241:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3241:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3214:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "3214:26:4"
																},
																"nativeSrc": "3214:33:4",
																"nodeType": "YulFunctionCall",
																"src": "3214:33:4"
															},
															"nativeSrc": "3214:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "3214:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3114:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3144:6:4",
														"nodeType": "YulTypedName",
														"src": "3144:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3152:3:4",
														"nodeType": "YulTypedName",
														"src": "3152:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3160:5:4",
														"nodeType": "YulTypedName",
														"src": "3160:5:4",
														"type": ""
													}
												],
												"src": "3114:139:4"
											},
											{
												"body": {
													"nativeSrc": "3325:263:4",
													"nodeType": "YulBlock",
													"src": "3325:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3371:83:4",
																"nodeType": "YulBlock",
																"src": "3371:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3373:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "3373:77:4"
																			},
																			"nativeSrc": "3373:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3373:79:4"
																		},
																		"nativeSrc": "3373:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3373:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3346:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3346:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3355:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3342:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3342:3:4"
																		},
																		"nativeSrc": "3342:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3342:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3367:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3367:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3338:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3338:3:4"
																},
																"nativeSrc": "3338:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3338:32:4"
															},
															"nativeSrc": "3335:119:4",
															"nodeType": "YulIf",
															"src": "3335:119:4"
														},
														{
															"nativeSrc": "3464:117:4",
															"nodeType": "YulBlock",
															"src": "3464:117:4",
															"statements": [
																{
																	"nativeSrc": "3479:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3479:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3493:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3493:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3483:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3483:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3508:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3508:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3543:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3543:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3554:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3554:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3539:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3539:3:4"
																				},
																				"nativeSrc": "3539:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3539:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3563:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3563:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3518:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3518:20:4"
																		},
																		"nativeSrc": "3518:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3518:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3508:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3508:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3259:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3295:9:4",
														"nodeType": "YulTypedName",
														"src": "3295:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3306:7:4",
														"nodeType": "YulTypedName",
														"src": "3306:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3318:6:4",
														"nodeType": "YulTypedName",
														"src": "3318:6:4",
														"type": ""
													}
												],
												"src": "3259:329:4"
											},
											{
												"body": {
													"nativeSrc": "3690:73:4",
													"nodeType": "YulBlock",
													"src": "3690:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3707:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3707:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3712:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3712:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3700:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3700:6:4"
																},
																"nativeSrc": "3700:19:4",
																"nodeType": "YulFunctionCall",
																"src": "3700:19:4"
															},
															"nativeSrc": "3700:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "3700:19:4"
														},
														{
															"nativeSrc": "3728:29:4",
															"nodeType": "YulAssignment",
															"src": "3728:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3747:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3747:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3752:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3752:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3743:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3743:3:4"
																},
																"nativeSrc": "3743:14:4",
																"nodeType": "YulFunctionCall",
																"src": "3743:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3728:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "3728:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3594:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3662:3:4",
														"nodeType": "YulTypedName",
														"src": "3662:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3667:6:4",
														"nodeType": "YulTypedName",
														"src": "3667:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3678:11:4",
														"nodeType": "YulTypedName",
														"src": "3678:11:4",
														"type": ""
													}
												],
												"src": "3594:169:4"
											},
											{
												"body": {
													"nativeSrc": "3875:64:4",
													"nodeType": "YulBlock",
													"src": "3875:64:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3897:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3897:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3905:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3905:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3893:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3893:3:4"
																		},
																		"nativeSrc": "3893:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3893:14:4"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f20756e7374616b65",
																		"kind": "string",
																		"nativeSrc": "3909:22:4",
																		"nodeType": "YulLiteral",
																		"src": "3909:22:4",
																		"type": "",
																		"value": "No tokens to unstake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3886:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3886:6:4"
																},
																"nativeSrc": "3886:46:4",
																"nodeType": "YulFunctionCall",
																"src": "3886:46:4"
															},
															"nativeSrc": "3886:46:4",
															"nodeType": "YulExpressionStatement",
															"src": "3886:46:4"
														}
													]
												},
												"name": "store_literal_in_memory_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346",
												"nativeSrc": "3769:170:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3867:6:4",
														"nodeType": "YulTypedName",
														"src": "3867:6:4",
														"type": ""
													}
												],
												"src": "3769:170:4"
											},
											{
												"body": {
													"nativeSrc": "4091:220:4",
													"nodeType": "YulBlock",
													"src": "4091:220:4",
													"statements": [
														{
															"nativeSrc": "4101:74:4",
															"nodeType": "YulAssignment",
															"src": "4101:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4167:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4167:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4172:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4172:2:4",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4108:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "4108:58:4"
																},
																"nativeSrc": "4108:67:4",
																"nodeType": "YulFunctionCall",
																"src": "4108:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4101:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4101:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4273:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4273:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346",
																	"nativeSrc": "4184:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "4184:88:4"
																},
																"nativeSrc": "4184:93:4",
																"nodeType": "YulFunctionCall",
																"src": "4184:93:4"
															},
															"nativeSrc": "4184:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "4184:93:4"
														},
														{
															"nativeSrc": "4286:19:4",
															"nodeType": "YulAssignment",
															"src": "4286:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4297:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4297:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4302:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4302:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4293:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4293:3:4"
																},
																"nativeSrc": "4293:12:4",
																"nodeType": "YulFunctionCall",
																"src": "4293:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4286:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4286:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3945:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4079:3:4",
														"nodeType": "YulTypedName",
														"src": "4079:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4087:3:4",
														"nodeType": "YulTypedName",
														"src": "4087:3:4",
														"type": ""
													}
												],
												"src": "3945:366:4"
											},
											{
												"body": {
													"nativeSrc": "4488:248:4",
													"nodeType": "YulBlock",
													"src": "4488:248:4",
													"statements": [
														{
															"nativeSrc": "4498:26:4",
															"nodeType": "YulAssignment",
															"src": "4498:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4510:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4510:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4521:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4521:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4506:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:4"
																},
																"nativeSrc": "4506:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4506:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4498:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4498:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4545:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4545:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4556:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4556:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4541:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4541:3:4"
																		},
																		"nativeSrc": "4541:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4541:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4564:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "4564:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4570:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4570:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4560:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4560:3:4"
																		},
																		"nativeSrc": "4560:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4560:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4534:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4534:6:4"
																},
																"nativeSrc": "4534:47:4",
																"nodeType": "YulFunctionCall",
																"src": "4534:47:4"
															},
															"nativeSrc": "4534:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "4534:47:4"
														},
														{
															"nativeSrc": "4590:139:4",
															"nodeType": "YulAssignment",
															"src": "4590:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4724:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "4724:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4598:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "4598:124:4"
																},
																"nativeSrc": "4598:131:4",
																"nodeType": "YulFunctionCall",
																"src": "4598:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4590:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4590:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4317:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4468:9:4",
														"nodeType": "YulTypedName",
														"src": "4468:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4483:4:4",
														"nodeType": "YulTypedName",
														"src": "4483:4:4",
														"type": ""
													}
												],
												"src": "4317:419:4"
											},
											{
												"body": {
													"nativeSrc": "4868:206:4",
													"nodeType": "YulBlock",
													"src": "4868:206:4",
													"statements": [
														{
															"nativeSrc": "4878:26:4",
															"nodeType": "YulAssignment",
															"src": "4878:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4890:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4890:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4901:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4901:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4886:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4886:3:4"
																},
																"nativeSrc": "4886:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4886:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4878:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4878:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4958:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4958:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4971:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4971:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4982:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4982:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4967:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4967:3:4"
																		},
																		"nativeSrc": "4967:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4967:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4914:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "4914:43:4"
																},
																"nativeSrc": "4914:71:4",
																"nodeType": "YulFunctionCall",
																"src": "4914:71:4"
															},
															"nativeSrc": "4914:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "4914:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5039:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5039:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5052:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5052:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5063:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5063:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5048:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5048:3:4"
																		},
																		"nativeSrc": "5048:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5048:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4995:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "4995:43:4"
																},
																"nativeSrc": "4995:72:4",
																"nodeType": "YulFunctionCall",
																"src": "4995:72:4"
															},
															"nativeSrc": "4995:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "4995:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4742:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4832:9:4",
														"nodeType": "YulTypedName",
														"src": "4832:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4844:6:4",
														"nodeType": "YulTypedName",
														"src": "4844:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4852:6:4",
														"nodeType": "YulTypedName",
														"src": "4852:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4863:4:4",
														"nodeType": "YulTypedName",
														"src": "4863:4:4",
														"type": ""
													}
												],
												"src": "4742:332:4"
											},
											{
												"body": {
													"nativeSrc": "5122:48:4",
													"nodeType": "YulBlock",
													"src": "5122:48:4",
													"statements": [
														{
															"nativeSrc": "5132:32:4",
															"nodeType": "YulAssignment",
															"src": "5132:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5157:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5157:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5150:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5150:6:4"
																		},
																		"nativeSrc": "5150:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5150:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5143:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5143:6:4"
																},
																"nativeSrc": "5143:21:4",
																"nodeType": "YulFunctionCall",
																"src": "5143:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5132:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "5132:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5080:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5104:5:4",
														"nodeType": "YulTypedName",
														"src": "5104:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5114:7:4",
														"nodeType": "YulTypedName",
														"src": "5114:7:4",
														"type": ""
													}
												],
												"src": "5080:90:4"
											},
											{
												"body": {
													"nativeSrc": "5216:76:4",
													"nodeType": "YulBlock",
													"src": "5216:76:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5270:16:4",
																"nodeType": "YulBlock",
																"src": "5270:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5279:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5279:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5282:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5282:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5272:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5272:6:4"
																			},
																			"nativeSrc": "5272:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5272:12:4"
																		},
																		"nativeSrc": "5272:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5272:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5239:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5239:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5261:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5261:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5246:14:4",
																					"nodeType": "YulIdentifier",
																					"src": "5246:14:4"
																				},
																				"nativeSrc": "5246:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5246:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5236:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "5236:2:4"
																		},
																		"nativeSrc": "5236:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5236:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5229:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5229:6:4"
																},
																"nativeSrc": "5229:40:4",
																"nodeType": "YulFunctionCall",
																"src": "5229:40:4"
															},
															"nativeSrc": "5226:60:4",
															"nodeType": "YulIf",
															"src": "5226:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5176:116:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5209:5:4",
														"nodeType": "YulTypedName",
														"src": "5209:5:4",
														"type": ""
													}
												],
												"src": "5176:116:4"
											},
											{
												"body": {
													"nativeSrc": "5358:77:4",
													"nodeType": "YulBlock",
													"src": "5358:77:4",
													"statements": [
														{
															"nativeSrc": "5368:22:4",
															"nodeType": "YulAssignment",
															"src": "5368:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5383:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5383:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5377:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5377:5:4"
																},
																"nativeSrc": "5377:13:4",
																"nodeType": "YulFunctionCall",
																"src": "5377:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5368:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5368:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5423:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5423:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5399:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "5399:23:4"
																},
																"nativeSrc": "5399:30:4",
																"nodeType": "YulFunctionCall",
																"src": "5399:30:4"
															},
															"nativeSrc": "5399:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "5399:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "5298:137:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5336:6:4",
														"nodeType": "YulTypedName",
														"src": "5336:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5344:3:4",
														"nodeType": "YulTypedName",
														"src": "5344:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5352:5:4",
														"nodeType": "YulTypedName",
														"src": "5352:5:4",
														"type": ""
													}
												],
												"src": "5298:137:4"
											},
											{
												"body": {
													"nativeSrc": "5515:271:4",
													"nodeType": "YulBlock",
													"src": "5515:271:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5561:83:4",
																"nodeType": "YulBlock",
																"src": "5561:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5563:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "5563:77:4"
																			},
																			"nativeSrc": "5563:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5563:79:4"
																		},
																		"nativeSrc": "5563:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5563:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5536:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5536:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5545:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5545:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5532:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5532:3:4"
																		},
																		"nativeSrc": "5532:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5532:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5557:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5557:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5528:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5528:3:4"
																},
																"nativeSrc": "5528:32:4",
																"nodeType": "YulFunctionCall",
																"src": "5528:32:4"
															},
															"nativeSrc": "5525:119:4",
															"nodeType": "YulIf",
															"src": "5525:119:4"
														},
														{
															"nativeSrc": "5654:125:4",
															"nodeType": "YulBlock",
															"src": "5654:125:4",
															"statements": [
																{
																	"nativeSrc": "5669:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5669:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5683:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5683:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5673:6:4",
																			"nodeType": "YulTypedName",
																			"src": "5673:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5698:71:4",
																	"nodeType": "YulAssignment",
																	"src": "5698:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5741:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "5741:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5752:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "5752:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5737:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5737:3:4"
																				},
																				"nativeSrc": "5737:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5737:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5761:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5761:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "5708:28:4",
																			"nodeType": "YulIdentifier",
																			"src": "5708:28:4"
																		},
																		"nativeSrc": "5708:61:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5708:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5698:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5698:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5441:345:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5485:9:4",
														"nodeType": "YulTypedName",
														"src": "5485:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5496:7:4",
														"nodeType": "YulTypedName",
														"src": "5496:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5508:6:4",
														"nodeType": "YulTypedName",
														"src": "5508:6:4",
														"type": ""
													}
												],
												"src": "5441:345:4"
											},
											{
												"body": {
													"nativeSrc": "5898:65:4",
													"nodeType": "YulBlock",
													"src": "5898:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5920:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5920:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5928:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5928:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5916:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:4"
																		},
																		"nativeSrc": "5916:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5916:14:4"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "5932:23:4",
																		"nodeType": "YulLiteral",
																		"src": "5932:23:4",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5909:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5909:6:4"
																},
																"nativeSrc": "5909:47:4",
																"nodeType": "YulFunctionCall",
																"src": "5909:47:4"
															},
															"nativeSrc": "5909:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "5909:47:4"
														}
													]
												},
												"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
												"nativeSrc": "5792:171:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5890:6:4",
														"nodeType": "YulTypedName",
														"src": "5890:6:4",
														"type": ""
													}
												],
												"src": "5792:171:4"
											},
											{
												"body": {
													"nativeSrc": "6115:220:4",
													"nodeType": "YulBlock",
													"src": "6115:220:4",
													"statements": [
														{
															"nativeSrc": "6125:74:4",
															"nodeType": "YulAssignment",
															"src": "6125:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6191:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6191:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6196:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6196:2:4",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6132:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "6132:58:4"
																},
																"nativeSrc": "6132:67:4",
																"nodeType": "YulFunctionCall",
																"src": "6132:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6125:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6125:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6297:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6297:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																	"nativeSrc": "6208:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "6208:88:4"
																},
																"nativeSrc": "6208:93:4",
																"nodeType": "YulFunctionCall",
																"src": "6208:93:4"
															},
															"nativeSrc": "6208:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "6208:93:4"
														},
														{
															"nativeSrc": "6310:19:4",
															"nodeType": "YulAssignment",
															"src": "6310:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6321:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6321:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6326:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6326:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6317:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6317:3:4"
																},
																"nativeSrc": "6317:12:4",
																"nodeType": "YulFunctionCall",
																"src": "6317:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6310:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6310:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5969:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6103:3:4",
														"nodeType": "YulTypedName",
														"src": "6103:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6111:3:4",
														"nodeType": "YulTypedName",
														"src": "6111:3:4",
														"type": ""
													}
												],
												"src": "5969:366:4"
											},
											{
												"body": {
													"nativeSrc": "6512:248:4",
													"nodeType": "YulBlock",
													"src": "6512:248:4",
													"statements": [
														{
															"nativeSrc": "6522:26:4",
															"nodeType": "YulAssignment",
															"src": "6522:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6534:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6534:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6545:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6545:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6530:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6530:3:4"
																},
																"nativeSrc": "6530:18:4",
																"nodeType": "YulFunctionCall",
																"src": "6530:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6522:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6522:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6569:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6569:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6580:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6580:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6565:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6565:3:4"
																		},
																		"nativeSrc": "6565:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6565:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6588:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "6588:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6594:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6594:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6584:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6584:3:4"
																		},
																		"nativeSrc": "6584:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6584:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6558:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6558:6:4"
																},
																"nativeSrc": "6558:47:4",
																"nodeType": "YulFunctionCall",
																"src": "6558:47:4"
															},
															"nativeSrc": "6558:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "6558:47:4"
														},
														{
															"nativeSrc": "6614:139:4",
															"nodeType": "YulAssignment",
															"src": "6614:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6748:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "6748:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6622:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "6622:124:4"
																},
																"nativeSrc": "6622:131:4",
																"nodeType": "YulFunctionCall",
																"src": "6622:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6614:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6614:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6341:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6492:9:4",
														"nodeType": "YulTypedName",
														"src": "6492:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6507:4:4",
														"nodeType": "YulTypedName",
														"src": "6507:4:4",
														"type": ""
													}
												],
												"src": "6341:419:4"
											},
											{
												"body": {
													"nativeSrc": "6864:124:4",
													"nodeType": "YulBlock",
													"src": "6864:124:4",
													"statements": [
														{
															"nativeSrc": "6874:26:4",
															"nodeType": "YulAssignment",
															"src": "6874:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6886:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6886:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6897:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6897:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6882:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6882:3:4"
																},
																"nativeSrc": "6882:18:4",
																"nodeType": "YulFunctionCall",
																"src": "6882:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6874:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6874:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6954:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6954:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6967:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6967:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6978:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6978:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6963:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6963:3:4"
																		},
																		"nativeSrc": "6963:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6963:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6910:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "6910:43:4"
																},
																"nativeSrc": "6910:71:4",
																"nodeType": "YulFunctionCall",
																"src": "6910:71:4"
															},
															"nativeSrc": "6910:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "6910:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6766:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6836:9:4",
														"nodeType": "YulTypedName",
														"src": "6836:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6848:6:4",
														"nodeType": "YulTypedName",
														"src": "6848:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6859:4:4",
														"nodeType": "YulTypedName",
														"src": "6859:4:4",
														"type": ""
													}
												],
												"src": "6766:222:4"
											},
											{
												"body": {
													"nativeSrc": "7100:73:4",
													"nodeType": "YulBlock",
													"src": "7100:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7122:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "7122:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7130:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7130:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7118:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7118:3:4"
																		},
																		"nativeSrc": "7118:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7118:14:4"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "7134:31:4",
																		"nodeType": "YulLiteral",
																		"src": "7134:31:4",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7111:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7111:6:4"
																},
																"nativeSrc": "7111:55:4",
																"nodeType": "YulFunctionCall",
																"src": "7111:55:4"
															},
															"nativeSrc": "7111:55:4",
															"nodeType": "YulExpressionStatement",
															"src": "7111:55:4"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nativeSrc": "6994:179:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7092:6:4",
														"nodeType": "YulTypedName",
														"src": "7092:6:4",
														"type": ""
													}
												],
												"src": "6994:179:4"
											},
											{
												"body": {
													"nativeSrc": "7325:220:4",
													"nodeType": "YulBlock",
													"src": "7325:220:4",
													"statements": [
														{
															"nativeSrc": "7335:74:4",
															"nodeType": "YulAssignment",
															"src": "7335:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7401:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7401:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7406:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7406:2:4",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7342:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "7342:58:4"
																},
																"nativeSrc": "7342:67:4",
																"nodeType": "YulFunctionCall",
																"src": "7342:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7335:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7335:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7507:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7507:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nativeSrc": "7418:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "7418:88:4"
																},
																"nativeSrc": "7418:93:4",
																"nodeType": "YulFunctionCall",
																"src": "7418:93:4"
															},
															"nativeSrc": "7418:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "7418:93:4"
														},
														{
															"nativeSrc": "7520:19:4",
															"nodeType": "YulAssignment",
															"src": "7520:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7531:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7531:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7536:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7536:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7527:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7527:3:4"
																},
																"nativeSrc": "7527:12:4",
																"nodeType": "YulFunctionCall",
																"src": "7527:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7520:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7520:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7179:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7313:3:4",
														"nodeType": "YulTypedName",
														"src": "7313:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7321:3:4",
														"nodeType": "YulTypedName",
														"src": "7321:3:4",
														"type": ""
													}
												],
												"src": "7179:366:4"
											},
											{
												"body": {
													"nativeSrc": "7722:248:4",
													"nodeType": "YulBlock",
													"src": "7722:248:4",
													"statements": [
														{
															"nativeSrc": "7732:26:4",
															"nodeType": "YulAssignment",
															"src": "7732:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7744:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "7744:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7755:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7755:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7740:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7740:3:4"
																},
																"nativeSrc": "7740:18:4",
																"nodeType": "YulFunctionCall",
																"src": "7740:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7732:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7732:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7779:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7779:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7790:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7790:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7775:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7775:3:4"
																		},
																		"nativeSrc": "7775:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7775:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7798:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7798:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7804:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7804:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7794:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7794:3:4"
																		},
																		"nativeSrc": "7794:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7794:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7768:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7768:6:4"
																},
																"nativeSrc": "7768:47:4",
																"nodeType": "YulFunctionCall",
																"src": "7768:47:4"
															},
															"nativeSrc": "7768:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "7768:47:4"
														},
														{
															"nativeSrc": "7824:139:4",
															"nodeType": "YulAssignment",
															"src": "7824:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7958:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "7958:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7832:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "7832:124:4"
																},
																"nativeSrc": "7832:131:4",
																"nodeType": "YulFunctionCall",
																"src": "7832:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7824:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7824:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7551:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7702:9:4",
														"nodeType": "YulTypedName",
														"src": "7702:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7717:4:4",
														"nodeType": "YulTypedName",
														"src": "7717:4:4",
														"type": ""
													}
												],
												"src": "7551:419:4"
											},
											{
												"body": {
													"nativeSrc": "8130:288:4",
													"nodeType": "YulBlock",
													"src": "8130:288:4",
													"statements": [
														{
															"nativeSrc": "8140:26:4",
															"nodeType": "YulAssignment",
															"src": "8140:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8152:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "8152:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8163:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8163:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8148:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8148:3:4"
																},
																"nativeSrc": "8148:18:4",
																"nodeType": "YulFunctionCall",
																"src": "8148:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8140:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8140:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8220:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "8220:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8233:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8233:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8244:1:4",
																				"nodeType": "YulLiteral",
																				"src": "8244:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8229:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8229:3:4"
																		},
																		"nativeSrc": "8229:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8229:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8176:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "8176:43:4"
																},
																"nativeSrc": "8176:71:4",
																"nodeType": "YulFunctionCall",
																"src": "8176:71:4"
															},
															"nativeSrc": "8176:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "8176:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8301:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "8301:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8314:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8314:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8325:2:4",
																				"nodeType": "YulLiteral",
																				"src": "8325:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8310:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8310:3:4"
																		},
																		"nativeSrc": "8310:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8310:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8257:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "8257:43:4"
																},
																"nativeSrc": "8257:72:4",
																"nodeType": "YulFunctionCall",
																"src": "8257:72:4"
															},
															"nativeSrc": "8257:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "8257:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8383:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "8383:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8396:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8396:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8407:2:4",
																				"nodeType": "YulLiteral",
																				"src": "8407:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8392:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8392:3:4"
																		},
																		"nativeSrc": "8392:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8392:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8339:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "8339:43:4"
																},
																"nativeSrc": "8339:72:4",
																"nodeType": "YulFunctionCall",
																"src": "8339:72:4"
															},
															"nativeSrc": "8339:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "8339:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7976:442:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8086:9:4",
														"nodeType": "YulTypedName",
														"src": "8086:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8098:6:4",
														"nodeType": "YulTypedName",
														"src": "8098:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8106:6:4",
														"nodeType": "YulTypedName",
														"src": "8106:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8114:6:4",
														"nodeType": "YulTypedName",
														"src": "8114:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8125:4:4",
														"nodeType": "YulTypedName",
														"src": "8125:4:4",
														"type": ""
													}
												],
												"src": "7976:442:4"
											},
											{
												"body": {
													"nativeSrc": "8452:152:4",
													"nodeType": "YulBlock",
													"src": "8452:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8469:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8469:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8472:77:4",
																		"nodeType": "YulLiteral",
																		"src": "8472:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8462:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8462:6:4"
																},
																"nativeSrc": "8462:88:4",
																"nodeType": "YulFunctionCall",
																"src": "8462:88:4"
															},
															"nativeSrc": "8462:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "8462:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8566:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8566:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8569:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8569:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8559:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8559:6:4"
																},
																"nativeSrc": "8559:15:4",
																"nodeType": "YulFunctionCall",
																"src": "8559:15:4"
															},
															"nativeSrc": "8559:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "8559:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8590:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8590:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8593:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8593:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8583:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8583:6:4"
																},
																"nativeSrc": "8583:15:4",
																"nodeType": "YulFunctionCall",
																"src": "8583:15:4"
															},
															"nativeSrc": "8583:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "8583:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8424:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "8424:180:4"
											},
											{
												"body": {
													"nativeSrc": "8654:147:4",
													"nodeType": "YulBlock",
													"src": "8654:147:4",
													"statements": [
														{
															"nativeSrc": "8664:25:4",
															"nodeType": "YulAssignment",
															"src": "8664:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8687:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8687:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8669:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "8669:17:4"
																},
																"nativeSrc": "8669:20:4",
																"nodeType": "YulFunctionCall",
																"src": "8669:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8664:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "8664:1:4"
																}
															]
														},
														{
															"nativeSrc": "8698:25:4",
															"nodeType": "YulAssignment",
															"src": "8698:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8721:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8721:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8703:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "8703:17:4"
																},
																"nativeSrc": "8703:20:4",
																"nodeType": "YulFunctionCall",
																"src": "8703:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8698:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "8698:1:4"
																}
															]
														},
														{
															"nativeSrc": "8732:16:4",
															"nodeType": "YulAssignment",
															"src": "8732:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8743:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8743:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8746:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8746:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8739:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8739:3:4"
																},
																"nativeSrc": "8739:9:4",
																"nodeType": "YulFunctionCall",
																"src": "8739:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8732:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8732:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8772:22:4",
																"nodeType": "YulBlock",
																"src": "8772:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8774:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "8774:16:4"
																			},
																			"nativeSrc": "8774:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8774:18:4"
																		},
																		"nativeSrc": "8774:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8774:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8764:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "8764:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8767:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8767:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8761:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "8761:2:4"
																},
																"nativeSrc": "8761:10:4",
																"nodeType": "YulFunctionCall",
																"src": "8761:10:4"
															},
															"nativeSrc": "8758:36:4",
															"nodeType": "YulIf",
															"src": "8758:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8610:191:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8641:1:4",
														"nodeType": "YulTypedName",
														"src": "8641:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8644:1:4",
														"nodeType": "YulTypedName",
														"src": "8644:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8650:3:4",
														"nodeType": "YulTypedName",
														"src": "8650:3:4",
														"type": ""
													}
												],
												"src": "8610:191:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to unstake\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f0578063a694fc3a1461010e578063f2fde38b1461012a578063f41322ac1461014657610088565b806316934fc41461008d5780632def6620146100be578063715018a6146100c857806372f702f3146100d2575b600080fd5b6100a760048036038101906100a2919061093b565b610177565b6040516100b5929190610981565b60405180910390f35b6100c661019b565b005b6100d061040e565b005b6100da610422565b6040516100e79190610a09565b60405180910390f35b6100f8610448565b6040516101059190610a33565b60405180910390f35b61012860048036038101906101239190610a7a565b610471565b005b610144600480360381019061013f919061093b565b610686565b005b610160600480360381019061015b919061093b565b61070c565b60405161016e929190610981565b60405180910390f35b60026020528060005260406000206000915090508060000154908060010154905082565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000816000015111610244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023b90610b04565b60405180910390fd5b6000816000015190506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161033a929190610b24565b6020604051808303816000875af1158015610359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037d9190610b85565b6103bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b390610bfe565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75826040516104029190610c1e565b60405180910390a25050565b610416610785565b610420600061080c565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081116104b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ab90610c85565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161051393929190610ca5565b6020604051808303816000875af1158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190610b85565b610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c90610bfe565b60405180910390fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546105e79190610d0b565b9250508190555042600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8260405161067b9190610c1e565b60405180910390a250565b61068e610785565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107005760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106f79190610a33565b60405180910390fd5b6107098161080c565b50565b6000806000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050806000015181602001519250925050915091565b61078d6108d0565b73ffffffffffffffffffffffffffffffffffffffff166107ab610448565b73ffffffffffffffffffffffffffffffffffffffff161461080a576107ce6108d0565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108019190610a33565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610908826108dd565b9050919050565b610918816108fd565b811461092357600080fd5b50565b6000813590506109358161090f565b92915050565b600060208284031215610951576109506108d8565b5b600061095f84828501610926565b91505092915050565b6000819050919050565b61097b81610968565b82525050565b60006040820190506109966000830185610972565b6109a36020830184610972565b9392505050565b6000819050919050565b60006109cf6109ca6109c5846108dd565b6109aa565b6108dd565b9050919050565b60006109e1826109b4565b9050919050565b60006109f3826109d6565b9050919050565b610a03816109e8565b82525050565b6000602082019050610a1e60008301846109fa565b92915050565b610a2d816108fd565b82525050565b6000602082019050610a486000830184610a24565b92915050565b610a5781610968565b8114610a6257600080fd5b50565b600081359050610a7481610a4e565b92915050565b600060208284031215610a9057610a8f6108d8565b5b6000610a9e84828501610a65565b91505092915050565b600082825260208201905092915050565b7f4e6f20746f6b656e7320746f20756e7374616b65000000000000000000000000600082015250565b6000610aee601483610aa7565b9150610af982610ab8565b602082019050919050565b60006020820190508181036000830152610b1d81610ae1565b9050919050565b6000604082019050610b396000830185610a24565b610b466020830184610972565b9392505050565b60008115159050919050565b610b6281610b4d565b8114610b6d57600080fd5b50565b600081519050610b7f81610b59565b92915050565b600060208284031215610b9b57610b9a6108d8565b5b6000610ba984828501610b70565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b6000610be8601583610aa7565b9150610bf382610bb2565b602082019050919050565b60006020820190508181036000830152610c1781610bdb565b9050919050565b6000602082019050610c336000830184610972565b92915050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b6000610c6f601d83610aa7565b9150610c7a82610c39565b602082019050919050565b60006020820190508181036000830152610c9e81610c62565b9050919050565b6000606082019050610cba6000830186610a24565b610cc76020830185610a24565b610cd46040830184610972565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d1682610968565b9150610d2183610968565b9250828201905080821115610d3957610d38610cdc565b5b9291505056fea26469706673582212201749a415ce541b28fb12618e98337c6c6669562f23d25aed7ffcc21ede3bdc7064736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xF41322AC EQ PUSH2 0x146 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0xD2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP3 SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x19B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD0 PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDA PUSH2 0x422 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP3 SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x244 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23B SWAP1 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33A SWAP3 SWAP2 SWAP1 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x359 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B3 SWAP1 PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP3 PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x416 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x420 PUSH1 0x0 PUSH2 0x80C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AB SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x513 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP1 PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5E7 SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x67B SWAP2 SWAP1 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x68E PUSH2 0x785 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x700 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x709 DUP2 PUSH2 0x80C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x78D PUSH2 0x8D0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7AB PUSH2 0x448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x80A JUMPI PUSH2 0x7CE PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x801 SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x908 DUP3 PUSH2 0x8DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x918 DUP2 PUSH2 0x8FD JUMP JUMPDEST DUP2 EQ PUSH2 0x923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x935 DUP2 PUSH2 0x90F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x951 JUMPI PUSH2 0x950 PUSH2 0x8D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x95F DUP5 DUP3 DUP6 ADD PUSH2 0x926 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x97B DUP2 PUSH2 0x968 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x996 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x972 JUMP JUMPDEST PUSH2 0x9A3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CF PUSH2 0x9CA PUSH2 0x9C5 DUP5 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x8DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E1 DUP3 PUSH2 0x9B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F3 DUP3 PUSH2 0x9D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA03 DUP2 PUSH2 0x9E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA1E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA2D DUP2 PUSH2 0x8FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA48 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA57 DUP2 PUSH2 0x968 JUMP JUMPDEST DUP2 EQ PUSH2 0xA62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA74 DUP2 PUSH2 0xA4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA90 JUMPI PUSH2 0xA8F PUSH2 0x8D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA9E DUP5 DUP3 DUP6 ADD PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F20756E7374616B65000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEE PUSH1 0x14 DUP4 PUSH2 0xAA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xAF9 DUP3 PUSH2 0xAB8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB1D DUP2 PUSH2 0xAE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB39 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xB46 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB62 DUP2 PUSH2 0xB4D JUMP JUMPDEST DUP2 EQ PUSH2 0xB6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB7F DUP2 PUSH2 0xB59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB9A PUSH2 0x8D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBA9 DUP5 DUP3 DUP6 ADD PUSH2 0xB70 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE8 PUSH1 0x15 DUP4 PUSH2 0xAA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xBF3 DUP3 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC17 DUP2 PUSH2 0xBDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC33 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6F PUSH1 0x1D DUP4 PUSH2 0xAA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xC7A DUP3 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC9E DUP2 PUSH2 0xC62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCBA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xCC7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xCD4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD16 DUP3 PUSH2 0x968 JUMP JUMPDEST SWAP2 POP PUSH2 0xD21 DUP4 PUSH2 0x968 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD39 JUMPI PUSH2 0xD38 PUSH2 0xCDC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR BLOBHASH LOG4 ISZERO 0xCE SLOAD SHL 0x28 0xFB SLT PUSH2 0x8E98 CALLER PUSH29 0x6C6669562F23D25AED7FFCC21EDE3BDC7064736F6C634300081C003300 ",
							"sourceMap": "175:2429:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1572:568;;;:::i;:::-;;2293:101:0;;;:::i;:::-;;232:26:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;984:519:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2359:242:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;417:39;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1572:568::-;1611:22;1636:6;:18;1643:10;1636:18;;;;;;;;;;;;;;;1611:43;;;;;;;;;;;;;;;;;;;;;;;;;;;1692:1;1673:9;:16;;;:20;1665:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1731:23;1757:9;:16;;;1731:42;;1854:1;1826:6;:18;1833:10;1826:18;;;;;;;;;;;;;;;:25;;:29;;;;1897:1;1866:6;:18;1873:10;1866:18;;;;;;;;;;;;;;;:28;;:32;;;;1978:12;;;;;;;;;;;:21;;;2000:10;2012:15;1978:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1956:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;2104:10;2095:37;;;2116:15;2095:37;;;;;;:::i;:::-;;;;;;;;1600:540;;1572:568::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;232:26:3:-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;984:519:3:-;1052:1;1043:6;:10;1035:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1190:12;;;;;;;;;;;:25;;;1216:10;1236:4;1243:6;1190:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1168:131;;;;;;;;;;;;:::i;:::-;;;;;;;;;1388:6;1359;:18;1366:10;1359:18;;;;;;;;;;;;;;;:25;;;:35;;;;;;;:::i;:::-;;;;;;;;1436:15;1405:6;:18;1412:10;1405:18;;;;;;;;;;;;;;;:28;;:46;;;;1476:10;1469:26;;;1488:6;1469:26;;;;;;:::i;:::-;;;;;;;;984:519;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2359:242:3:-;2448:14;2464:17;2499:22;2524:6;:12;2531:4;2524:12;;;;;;;;;;;;;;;2499:37;;;;;;;;;;;;;;;;;;;;;;;;;;;2555:9;:16;;;2573:9;:19;;;2547:46;;;;;2359:242;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:332::-;1504:4;1542:2;1531:9;1527:18;1519:26;;1555:71;1623:1;1612:9;1608:17;1599:6;1555:71;:::i;:::-;1636:72;1704:2;1693:9;1689:18;1680:6;1636:72;:::i;:::-;1383:332;;;;;:::o;1721:60::-;1749:3;1770:5;1763:12;;1721:60;;;:::o;1787:142::-;1837:9;1870:53;1888:34;1897:24;1915:5;1897:24;:::i;:::-;1888:34;:::i;:::-;1870:53;:::i;:::-;1857:66;;1787:142;;;:::o;1935:126::-;1985:9;2018:37;2049:5;2018:37;:::i;:::-;2005:50;;1935:126;;;:::o;2067:140::-;2131:9;2164:37;2195:5;2164:37;:::i;:::-;2151:50;;2067:140;;;:::o;2213:159::-;2314:51;2359:5;2314:51;:::i;:::-;2309:3;2302:64;2213:159;;:::o;2378:250::-;2485:4;2523:2;2512:9;2508:18;2500:26;;2536:85;2618:1;2607:9;2603:17;2594:6;2536:85;:::i;:::-;2378:250;;;;:::o;2634:118::-;2721:24;2739:5;2721:24;:::i;:::-;2716:3;2709:37;2634:118;;:::o;2758:222::-;2851:4;2889:2;2878:9;2874:18;2866:26;;2902:71;2970:1;2959:9;2955:17;2946:6;2902:71;:::i;:::-;2758:222;;;;:::o;2986:122::-;3059:24;3077:5;3059:24;:::i;:::-;3052:5;3049:35;3039:63;;3098:1;3095;3088:12;3039:63;2986:122;:::o;3114:139::-;3160:5;3198:6;3185:20;3176:29;;3214:33;3241:5;3214:33;:::i;:::-;3114:139;;;;:::o;3259:329::-;3318:6;3367:2;3355:9;3346:7;3342:23;3338:32;3335:119;;;3373:79;;:::i;:::-;3335:119;3493:1;3518:53;3563:7;3554:6;3543:9;3539:22;3518:53;:::i;:::-;3508:63;;3464:117;3259:329;;;;:::o;3594:169::-;3678:11;3712:6;3707:3;3700:19;3752:4;3747:3;3743:14;3728:29;;3594:169;;;;:::o;3769:170::-;3909:22;3905:1;3897:6;3893:14;3886:46;3769:170;:::o;3945:366::-;4087:3;4108:67;4172:2;4167:3;4108:67;:::i;:::-;4101:74;;4184:93;4273:3;4184:93;:::i;:::-;4302:2;4297:3;4293:12;4286:19;;3945:366;;;:::o;4317:419::-;4483:4;4521:2;4510:9;4506:18;4498:26;;4570:9;4564:4;4560:20;4556:1;4545:9;4541:17;4534:47;4598:131;4724:4;4598:131;:::i;:::-;4590:139;;4317:419;;;:::o;4742:332::-;4863:4;4901:2;4890:9;4886:18;4878:26;;4914:71;4982:1;4971:9;4967:17;4958:6;4914:71;:::i;:::-;4995:72;5063:2;5052:9;5048:18;5039:6;4995:72;:::i;:::-;4742:332;;;;;:::o;5080:90::-;5114:7;5157:5;5150:13;5143:21;5132:32;;5080:90;;;:::o;5176:116::-;5246:21;5261:5;5246:21;:::i;:::-;5239:5;5236:32;5226:60;;5282:1;5279;5272:12;5226:60;5176:116;:::o;5298:137::-;5352:5;5383:6;5377:13;5368:22;;5399:30;5423:5;5399:30;:::i;:::-;5298:137;;;;:::o;5441:345::-;5508:6;5557:2;5545:9;5536:7;5532:23;5528:32;5525:119;;;5563:79;;:::i;:::-;5525:119;5683:1;5708:61;5761:7;5752:6;5741:9;5737:22;5708:61;:::i;:::-;5698:71;;5654:125;5441:345;;;;:::o;5792:171::-;5932:23;5928:1;5920:6;5916:14;5909:47;5792:171;:::o;5969:366::-;6111:3;6132:67;6196:2;6191:3;6132:67;:::i;:::-;6125:74;;6208:93;6297:3;6208:93;:::i;:::-;6326:2;6321:3;6317:12;6310:19;;5969:366;;;:::o;6341:419::-;6507:4;6545:2;6534:9;6530:18;6522:26;;6594:9;6588:4;6584:20;6580:1;6569:9;6565:17;6558:47;6622:131;6748:4;6622:131;:::i;:::-;6614:139;;6341:419;;;:::o;6766:222::-;6859:4;6897:2;6886:9;6882:18;6874:26;;6910:71;6978:1;6967:9;6963:17;6954:6;6910:71;:::i;:::-;6766:222;;;;:::o;6994:179::-;7134:31;7130:1;7122:6;7118:14;7111:55;6994:179;:::o;7179:366::-;7321:3;7342:67;7406:2;7401:3;7342:67;:::i;:::-;7335:74;;7418:93;7507:3;7418:93;:::i;:::-;7536:2;7531:3;7527:12;7520:19;;7179:366;;;:::o;7551:419::-;7717:4;7755:2;7744:9;7740:18;7732:26;;7804:9;7798:4;7794:20;7790:1;7779:9;7775:17;7768:47;7832:131;7958:4;7832:131;:::i;:::-;7824:139;;7551:419;;;:::o;7976:442::-;8125:4;8163:2;8152:9;8148:18;8140:26;;8176:71;8244:1;8233:9;8229:17;8220:6;8176:71;:::i;:::-;8257:72;8325:2;8314:9;8310:18;8301:6;8257:72;:::i;:::-;8339;8407:2;8396:9;8392:18;8383:6;8339:72;:::i;:::-;7976:442;;;;;;:::o;8424:180::-;8472:77;8469:1;8462:88;8569:4;8566:1;8559:15;8593:4;8590:1;8583:15;8610:191;8650:3;8669:20;8687:1;8669:20;:::i;:::-;8664:25;;8703:20;8721:1;8703:20;:::i;:::-;8698:25;;8746:1;8743;8739:9;8732:16;;8767:3;8764:1;8761:10;8758:36;;;8774:18;;:::i;:::-;8758:36;8610:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "689000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getStakeDetails(address)": "infinite",
								"owner()": "2522",
								"renounceOwnership()": "infinite",
								"stake(uint256)": "infinite",
								"stakes(address)": "infinite",
								"stakingToken()": "infinite",
								"transferOwnership(address)": "infinite",
								"unstake()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 2604,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 175,
									"end": 2604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 2604,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 706,
									"end": 872,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 706,
									"end": 872,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 706,
									"end": 872,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 706,
									"end": 872,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 706,
									"end": 872,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 706,
									"end": 872,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 706,
									"end": 872,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 706,
									"end": 872,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 218,
									"end": 222,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 783,
									"end": 784,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 759,
									"end": 785,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 759,
									"end": 785,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 759,
									"end": 771,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 759,
									"end": 785,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 759,
									"end": 785,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 759,
									"end": 785,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 751,
									"end": 818,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 751,
									"end": 818,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 751,
									"end": 818,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 751,
									"end": 818,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 751,
									"end": 818,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 818,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 818,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 818,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 818,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 751,
									"end": 818,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 751,
									"end": 818,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 751,
									"end": 818,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 751,
									"end": 818,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 751,
									"end": 818,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 751,
									"end": 818,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 751,
									"end": 818,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 751,
									"end": 818,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 751,
									"end": 818,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 751,
									"end": 818,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 818,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 751,
									"end": 818,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 751,
									"end": 818,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 751,
									"end": 818,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 751,
									"end": 818,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 851,
									"end": 863,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 829,
									"end": 841,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 829,
									"end": 841,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 829,
									"end": 864,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 829,
									"end": 864,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 829,
									"end": 864,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 829,
									"end": 864,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 829,
									"end": 864,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 829,
									"end": 864,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 829,
									"end": 864,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 829,
									"end": 864,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 829,
									"end": 864,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 829,
									"end": 864,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 829,
									"end": 864,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 829,
									"end": 864,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 829,
									"end": 864,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 829,
									"end": 864,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 829,
									"end": 864,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 829,
									"end": 864,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 829,
									"end": 864,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 829,
									"end": 864,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 706,
									"end": 872,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 175,
									"end": 2604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 175,
									"end": 2604,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1638,
									"end": 1649,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1670,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1660,
									"end": 1679,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1712,
									"end": 1716,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1710,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1703,
									"end": 1717,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1688,
									"end": 1717,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1688,
									"end": 1717,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1554,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1907,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1729,
									"end": 1907,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1869,
									"end": 1899,
									"name": "PUSH",
									"source": 4,
									"value": "546F6B656E20616464726573732063616E6E6F74206265207A65726F00000000"
								},
								{
									"begin": 1865,
									"end": 1866,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1857,
									"end": 1863,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1853,
									"end": 1867,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1846,
									"end": 1900,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1907,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1729,
									"end": 1907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1913,
									"end": 2279,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1913,
									"end": 2279,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2058,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2076,
									"end": 2143,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 2140,
									"end": 2142,
									"name": "PUSH",
									"source": 4,
									"value": "1C"
								},
								{
									"begin": 2135,
									"end": 2138,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2076,
									"end": 2143,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 2076,
									"end": 2143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2076,
									"end": 2143,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 2076,
									"end": 2143,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2069,
									"end": 2143,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2069,
									"end": 2143,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 2241,
									"end": 2244,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2270,
									"end": 2272,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2265,
									"end": 2268,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2261,
									"end": 2273,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2254,
									"end": 2273,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2254,
									"end": 2273,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1913,
									"end": 2279,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1913,
									"end": 2279,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1913,
									"end": 2279,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1913,
									"end": 2279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2285,
									"end": 2704,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 2285,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2451,
									"end": 2455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2489,
									"end": 2491,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2478,
									"end": 2487,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2474,
									"end": 2492,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2466,
									"end": 2492,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2466,
									"end": 2492,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2538,
									"end": 2547,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2532,
									"end": 2536,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2528,
									"end": 2548,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2524,
									"end": 2525,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2513,
									"end": 2522,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2509,
									"end": 2526,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2502,
									"end": 2549,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2566,
									"end": 2697,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 2692,
									"end": 2696,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2566,
									"end": 2697,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 2566,
									"end": 2697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2566,
									"end": 2697,
									"name": "tag",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 2566,
									"end": 2697,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2558,
									"end": 2697,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2558,
									"end": 2697,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2285,
									"end": 2704,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2285,
									"end": 2704,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2285,
									"end": 2704,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2285,
									"end": 2704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 175,
									"end": 2604,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 175,
									"end": 2604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 175,
									"end": 2604,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 2604,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 175,
									"end": 2604,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 2604,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 2604,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 175,
									"end": 2604,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 2604,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201749a415ce541b28fb12618e98337c6c6669562f23d25aed7ffcc21ede3bdc7064736f6c634300081c0033",
									".code": [
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "A694FC3A"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "F41322AC"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "16934FC4"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "2DEF6620"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "72F702F3"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 175,
											"end": 2604,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 417,
											"end": 456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 417,
											"end": 456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 417,
											"end": 456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 2140,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1572,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1572,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1572,
											"end": 2140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 2140,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1572,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 2140,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 232,
											"end": 258,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 232,
											"end": 258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 232,
											"end": 258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 984,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 984,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2359,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2359,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2359,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 417,
											"end": 456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 417,
											"end": 456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 2140,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1572,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1642,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1643,
											"end": 1653,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1692,
											"end": 1693,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1689,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1689,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1689,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1693,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1665,
											"end": 1718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1665,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1754,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1766,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1773,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1773,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 1855,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1843,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1851,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1897,
											"end": 1898,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1872,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1883,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1894,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1866,
											"end": 1894,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1898,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1978,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 1990,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1990,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1990,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1978,
											"end": 1990,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1990,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1990,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1978,
											"end": 1990,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1999,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1978,
											"end": 1999,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1999,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2027,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1978,
											"end": 2028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1978,
											"end": 2028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1978,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1956,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1956,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2114,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "F5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75"
										},
										{
											"begin": 2116,
											"end": 2131,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2095,
											"end": 2132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2132,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 2140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 2140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 2140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 232,
											"end": 258,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 232,
											"end": 258,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 232,
											"end": 258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1053,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1043,
											"end": 1049,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1043,
											"end": 1053,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1035,
											"end": 1087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1035,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1202,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1190,
											"end": 1202,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1202,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1202,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1202,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1202,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1190,
											"end": 1202,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1202,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1202,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1202,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1190,
											"end": 1202,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1215,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1190,
											"end": 1215,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1215,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1216,
											"end": 1226,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1240,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1243,
											"end": 1249,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1190,
											"end": 1250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1190,
											"end": 1250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1190,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1168,
											"end": 1299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1168,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1376,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1384,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1384,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1384,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1359,
											"end": 1394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1422,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1423,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1433,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1405,
											"end": 1433,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1451,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1451,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1451,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1451,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1486,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "PUSH",
											"source": 3,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1469,
											"end": 1495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2481,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2521,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2535,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2536,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 2564,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 2571,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2555,
											"end": 2571,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 2571,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2582,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2592,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2573,
											"end": 2592,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2592,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2547,
											"end": 2593,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2547,
											"end": 2593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2547,
											"end": 2593,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2547,
											"end": 2593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2547,
											"end": 2593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1544,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1540,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1545,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1555,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1623,
											"end": 1624,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1621,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1608,
											"end": 1625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1599,
											"end": 1605,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1555,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1555,
											"end": 1626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1555,
											"end": 1626,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1555,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1704,
											"end": 1706,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1702,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1636,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1708,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1636,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1781,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1721,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1752,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1775,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 1775,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 1775,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1781,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1929,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1787,
											"end": 1929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1888,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1897,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1915,
											"end": 1920,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1897,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1897,
											"end": 1921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1897,
											"end": 1921,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1897,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1888,
											"end": 1922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1922,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1888,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1870,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1870,
											"end": 1923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1870,
											"end": 1923,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1870,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1923,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1929,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1929,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2061,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1935,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1985,
											"end": 1994,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2018,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2018,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2018,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2018,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2018,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2005,
											"end": 2055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2005,
											"end": 2055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2061,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2061,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2207,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2067,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2140,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2195,
											"end": 2200,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2164,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2201,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2164,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2207,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2372,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2213,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2314,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2365,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2314,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2309,
											"end": 2312,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2302,
											"end": 2366,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2628,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2378,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2485,
											"end": 2489,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2525,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2512,
											"end": 2521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2526,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2616,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2603,
											"end": 2620,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2536,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 2621,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2536,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2628,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2739,
											"end": 2744,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2721,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2745,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2721,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2719,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2980,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2758,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2855,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2891,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2887,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2970,
											"end": 2971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2968,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2972,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2952,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2902,
											"end": 2973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2973,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2902,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2980,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2980,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2986,
											"end": 3108,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2986,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3077,
											"end": 3082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3059,
											"end": 3083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3049,
											"end": 3084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3039,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3039,
											"end": 3102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3099,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3100,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3039,
											"end": 3102,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3039,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2986,
											"end": 3108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2986,
											"end": 3108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3253,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3114,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3204,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3205,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3205,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3205,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3214,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3241,
											"end": 3246,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3214,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3214,
											"end": 3247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3214,
											"end": 3247,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3214,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3253,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3259,
											"end": 3588,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3259,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3355,
											"end": 3364,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3353,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3365,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3338,
											"end": 3370,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3335,
											"end": 3454,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3335,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3335,
											"end": 3454,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3373,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3373,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3373,
											"end": 3452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3373,
											"end": 3452,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3373,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3335,
											"end": 3454,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3335,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3563,
											"end": 3570,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3560,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3543,
											"end": 3552,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3518,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3518,
											"end": 3571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3518,
											"end": 3571,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3518,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3508,
											"end": 3571,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3508,
											"end": 3571,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3464,
											"end": 3581,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3259,
											"end": 3588,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3259,
											"end": 3588,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3259,
											"end": 3588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3259,
											"end": 3588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3259,
											"end": 3588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3763,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3594,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3678,
											"end": 3689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3718,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3710,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 3719,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3756,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3750,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 3757,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3728,
											"end": 3757,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3728,
											"end": 3757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3763,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3763,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3769,
											"end": 3939,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3769,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 3931,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F20746F6B656E7320746F20756E7374616B65000000000000000000000000"
										},
										{
											"begin": 3905,
											"end": 3906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3903,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3907,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 3932,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3769,
											"end": 3939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3769,
											"end": 3939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 4311,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3945,
											"end": 4311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4090,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4172,
											"end": 4174,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 4167,
											"end": 4170,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4108,
											"end": 4175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4108,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4101,
											"end": 4175,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4101,
											"end": 4175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4273,
											"end": 4276,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4184,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4184,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4302,
											"end": 4304,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4297,
											"end": 4300,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4305,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4286,
											"end": 4305,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4286,
											"end": 4305,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 4311,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 4311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 4311,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 4311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4317,
											"end": 4736,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4317,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4483,
											"end": 4487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4523,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4510,
											"end": 4519,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4498,
											"end": 4524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4498,
											"end": 4524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4568,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4560,
											"end": 4580,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4556,
											"end": 4557,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4554,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4534,
											"end": 4581,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4598,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4724,
											"end": 4728,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4598,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4598,
											"end": 4729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4598,
											"end": 4729,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4598,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4590,
											"end": 4729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4590,
											"end": 4729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4317,
											"end": 4736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4317,
											"end": 4736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4317,
											"end": 4736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4317,
											"end": 4736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 5074,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4742,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4901,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4890,
											"end": 4899,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4914,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 4982,
											"end": 4983,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4971,
											"end": 4980,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4967,
											"end": 4984,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 4964,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4914,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4914,
											"end": 4985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4914,
											"end": 4985,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 4914,
											"end": 4985,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5052,
											"end": 5061,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5066,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5045,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4995,
											"end": 5067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5067,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4995,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 5074,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 5074,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 5074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 5074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 5074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 5074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5170,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 5080,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5114,
											"end": 5121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5157,
											"end": 5162,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5150,
											"end": 5163,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5164,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5292,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 5176,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5261,
											"end": 5266,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 5246,
											"end": 5267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5267,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5246,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5239,
											"end": 5244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5236,
											"end": 5268,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5226,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5226,
											"end": 5286,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5279,
											"end": 5280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5284,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5226,
											"end": 5286,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5226,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5298,
											"end": 5435,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 5298,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5352,
											"end": 5357,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5383,
											"end": 5389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5377,
											"end": 5390,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5368,
											"end": 5390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5368,
											"end": 5390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5399,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 5423,
											"end": 5428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5399,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 5399,
											"end": 5429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5399,
											"end": 5429,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 5399,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5298,
											"end": 5435,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5298,
											"end": 5435,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5298,
											"end": 5435,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5298,
											"end": 5435,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5298,
											"end": 5435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5441,
											"end": 5786,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 5441,
											"end": 5786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5508,
											"end": 5514,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5557,
											"end": 5559,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5545,
											"end": 5554,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5536,
											"end": 5543,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 5555,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5560,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5525,
											"end": 5644,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5525,
											"end": 5644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5525,
											"end": 5644,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5563,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 5563,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5563,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5563,
											"end": 5642,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 5563,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5525,
											"end": 5644,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5525,
											"end": 5644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5683,
											"end": 5684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5708,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 5761,
											"end": 5768,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5752,
											"end": 5758,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5737,
											"end": 5759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5708,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 5708,
											"end": 5769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5708,
											"end": 5769,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 5708,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 5769,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 5769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5441,
											"end": 5786,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5441,
											"end": 5786,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5441,
											"end": 5786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5441,
											"end": 5786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5441,
											"end": 5786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5963,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 5792,
											"end": 5963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5932,
											"end": 5955,
											"name": "PUSH",
											"source": 4,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 5928,
											"end": 5929,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5920,
											"end": 5926,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5916,
											"end": 5930,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5909,
											"end": 5956,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5963,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5969,
											"end": 6335,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5969,
											"end": 6335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6111,
											"end": 6114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6132,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 6196,
											"end": 6198,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 6191,
											"end": 6194,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 6132,
											"end": 6199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6199,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 6132,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6125,
											"end": 6199,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6125,
											"end": 6199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6208,
											"end": 6301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 6297,
											"end": 6300,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6208,
											"end": 6301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 6208,
											"end": 6301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6208,
											"end": 6301,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 6208,
											"end": 6301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6326,
											"end": 6328,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6321,
											"end": 6324,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6317,
											"end": 6329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6310,
											"end": 6329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6310,
											"end": 6329,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5969,
											"end": 6335,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5969,
											"end": 6335,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5969,
											"end": 6335,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5969,
											"end": 6335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6341,
											"end": 6760,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 6341,
											"end": 6760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6507,
											"end": 6511,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6545,
											"end": 6547,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6534,
											"end": 6543,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6522,
											"end": 6548,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6594,
											"end": 6603,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6588,
											"end": 6592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6584,
											"end": 6604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6581,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6569,
											"end": 6578,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6558,
											"end": 6605,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6622,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 6748,
											"end": 6752,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6622,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 6622,
											"end": 6753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6622,
											"end": 6753,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 6622,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6614,
											"end": 6753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6614,
											"end": 6753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6341,
											"end": 6760,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6341,
											"end": 6760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6341,
											"end": 6760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6341,
											"end": 6760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6766,
											"end": 6988,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 6766,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6859,
											"end": 6863,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6897,
											"end": 6899,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6882,
											"end": 6900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 6978,
											"end": 6979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6967,
											"end": 6976,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6963,
											"end": 6980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6954,
											"end": 6960,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6910,
											"end": 6981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6981,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 6910,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6766,
											"end": 6988,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6766,
											"end": 6988,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6766,
											"end": 6988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6766,
											"end": 6988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6766,
											"end": 6988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6994,
											"end": 7173,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 6994,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7134,
											"end": 7165,
											"name": "PUSH",
											"source": 4,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 7130,
											"end": 7131,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7128,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7118,
											"end": 7132,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7111,
											"end": 7166,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6994,
											"end": 7173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6994,
											"end": 7173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7179,
											"end": 7545,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 7179,
											"end": 7545,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7321,
											"end": 7324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 7406,
											"end": 7408,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 7401,
											"end": 7404,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7342,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 7342,
											"end": 7409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7342,
											"end": 7409,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 7342,
											"end": 7409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7335,
											"end": 7409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7335,
											"end": 7409,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7507,
											"end": 7510,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 7418,
											"end": 7511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7511,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7418,
											"end": 7511,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7538,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7531,
											"end": 7534,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7527,
											"end": 7539,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7520,
											"end": 7539,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7520,
											"end": 7539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7179,
											"end": 7545,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7179,
											"end": 7545,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7179,
											"end": 7545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7179,
											"end": 7545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7970,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 7551,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7717,
											"end": 7721,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7755,
											"end": 7757,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7744,
											"end": 7753,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7732,
											"end": 7758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7732,
											"end": 7758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7804,
											"end": 7813,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7798,
											"end": 7802,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7794,
											"end": 7814,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7790,
											"end": 7791,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7779,
											"end": 7788,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7775,
											"end": 7792,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7832,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 7958,
											"end": 7962,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7832,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 7832,
											"end": 7963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7832,
											"end": 7963,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 7832,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7824,
											"end": 7963,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7824,
											"end": 7963,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7970,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7970,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7551,
											"end": 7970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7976,
											"end": 8418,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 7976,
											"end": 8418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8125,
											"end": 8129,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8163,
											"end": 8165,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 8152,
											"end": 8161,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8140,
											"end": 8166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8140,
											"end": 8166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8176,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 8244,
											"end": 8245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8242,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8229,
											"end": 8246,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8220,
											"end": 8226,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8176,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 8176,
											"end": 8247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8176,
											"end": 8247,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 8176,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 8325,
											"end": 8327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8314,
											"end": 8323,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8328,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8301,
											"end": 8307,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 8257,
											"end": 8329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8329,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 8257,
											"end": 8329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8339,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8407,
											"end": 8409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8396,
											"end": 8405,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8392,
											"end": 8410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8383,
											"end": 8389,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8339,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 8339,
											"end": 8411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8339,
											"end": 8411,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8339,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7976,
											"end": 8418,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7976,
											"end": 8418,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7976,
											"end": 8418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7976,
											"end": 8418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7976,
											"end": 8418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7976,
											"end": 8418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7976,
											"end": 8418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8424,
											"end": 8604,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 8424,
											"end": 8604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8549,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8469,
											"end": 8470,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8462,
											"end": 8550,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8569,
											"end": 8573,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 8566,
											"end": 8567,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 8590,
											"end": 8591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8610,
											"end": 8801,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 8610,
											"end": 8801,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8650,
											"end": 8653,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8669,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8687,
											"end": 8688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8669,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 8669,
											"end": 8689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8669,
											"end": 8689,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8669,
											"end": 8689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8664,
											"end": 8689,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8664,
											"end": 8689,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 8723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8721,
											"end": 8722,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 8723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 8703,
											"end": 8723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 8723,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8703,
											"end": 8723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8698,
											"end": 8723,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8698,
											"end": 8723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8746,
											"end": 8747,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8743,
											"end": 8744,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8739,
											"end": 8748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8732,
											"end": 8748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8732,
											"end": 8748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8767,
											"end": 8770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8764,
											"end": 8765,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8761,
											"end": 8771,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8794,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 8758,
											"end": 8794,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8774,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8774,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 8774,
											"end": 8792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8774,
											"end": 8792,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8774,
											"end": 8792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8794,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 8758,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8610,
											"end": 8801,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8610,
											"end": 8801,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8610,
											"end": 8801,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8610,
											"end": 8801,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8610,
											"end": 8801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"Contrat_de_Stacking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getStakeDetails(address)": "f41322ac",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stake(uint256)": "a694fc3a",
							"stakes(address)": "16934fc4",
							"stakingToken()": "72f702f3",
							"transferOwnership(address)": "f2fde38b",
							"unstake()": "2def6620"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getStakeDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"tokenAddress\":\"The address of the ERC20 token contract\"}},\"getStakeDetails(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"amount\":\"The amount of tokens staked\",\"timestamp\":\"The timestamp when the stake started\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"stake(uint256)\":{\"params\":{\"amount\":\"The amount of tokens to stake\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Set the token to be used for staking\"},\"getStakeDetails(address)\":{\"notice\":\"Get the stake details for a user\"},\"stake(uint256)\":{\"notice\":\"Stake a specific amount of tokens\"},\"unstake()\":{\"notice\":\"Unstake all tokens that the user has staked\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contrat_de_Stacking.sol\":\"GenericStaking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"Contrat_de_Stacking.sol\":{\"keccak256\":\"0xdc5ca9ce189bdffc98efce227e0f170a237baee0fe600264da915666d50dd662\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ed4145426b7127bb5e50e7a223579a5cfdf9ef1ef5f39a6313d8300b15a3de7\",\"dweb:/ipfs/QmRoaw3PKYB6A3Bg1JgjfbmPg3CntvUgrr8Decct9hxega\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "Contrat_de_Stacking.sol:GenericStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 268,
								"contract": "Contrat_de_Stacking.sol:GenericStaking",
								"label": "stakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 278,
								"contract": "Contrat_de_Stacking.sol:GenericStaking",
								"label": "stakes",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(Stake)273_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)225": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stake)273_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct GenericStaking.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)273_storage"
							},
							"t_struct(Stake)273_storage": {
								"encoding": "inplace",
								"label": "struct GenericStaking.Stake",
								"members": [
									{
										"astId": 270,
										"contract": "Contrat_de_Stacking.sol:GenericStaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 272,
										"contract": "Contrat_de_Stacking.sol:GenericStaking",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Set the token to be used for staking"
							},
							"getStakeDetails(address)": {
								"notice": "Get the stake details for a user"
							},
							"stake(uint256)": {
								"notice": "Stake a specific amount of tokens"
							},
							"unstake()": {
								"notice": "Unstake all tokens that the user has staked"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 225,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 225,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 225,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 225,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 225,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 225,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"Contrat_de_Stacking.sol": {
				"ast": {
					"absolutePath": "Contrat_de_Stacking.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"GenericStaking": [
							447
						],
						"IERC20": [
							225
						],
						"Ownable": [
							147
						]
					},
					"id": 448,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 448,
							"sourceUnit": 226,
							"src": "61:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 448,
							"sourceUnit": 148,
							"src": "119:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"arguments": [
												{
													"id": 263,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "218:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GenericStaking_$447",
														"typeString": "contract GenericStaking"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_contract$_GenericStaking_$447",
														"typeString": "contract GenericStaking"
													}
												],
												"id": 262,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "210:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:3",
													"typeDescriptions": {}
												}
											},
											"id": 264,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "210:13:3",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 260,
										"name": "Ownable",
										"nameLocations": [
											"202:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "202:7:3"
									},
									"id": 265,
									"nodeType": "InheritanceSpecifier",
									"src": "202:22:3"
								}
							],
							"canonicalName": "GenericStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 447,
							"linearizedBaseContracts": [
								447,
								147,
								255
							],
							"name": "GenericStaking",
							"nameLocation": "184:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 268,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "246:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 447,
									"src": "232:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 267,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 266,
											"name": "IERC20",
											"nameLocations": [
												"232:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "232:6:3"
										},
										"referencedDeclaration": 225,
										"src": "232:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "GenericStaking.Stake",
									"id": 273,
									"members": [
										{
											"constant": false,
											"id": 270,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "299:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 273,
											"src": "291:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 269,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "291:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 272,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "351:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 273,
											"src": "343:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 271,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "343:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "274:5:3",
									"nodeType": "StructDefinition",
									"scope": 447,
									"src": "267:142:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 278,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "450:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 447,
									"src": "417:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$273_storage_$",
										"typeString": "mapping(address => struct GenericStaking.Stake)"
									},
									"typeName": {
										"id": 277,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 274,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "425:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "417:25:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$273_storage_$",
											"typeString": "mapping(address => struct GenericStaking.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 276,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 275,
												"name": "Stake",
												"nameLocations": [
													"436:5:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 273,
												"src": "436:5:3"
											},
											"referencedDeclaration": 273,
											"src": "436:5:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$273_storage_ptr",
												"typeString": "struct GenericStaking.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 284,
									"name": "Staked",
									"nameLocation": "471:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "494:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "478:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "508:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "500:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:38:3"
									},
									"src": "465:51:3"
								},
								{
									"anonymous": false,
									"eventSelector": "0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75",
									"id": 290,
									"name": "Unstaked",
									"nameLocation": "528:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "553:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "537:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "567:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "559:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "536:38:3"
									},
									"src": "522:53:3"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "740:132:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 297,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "759:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "783:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "775:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 298,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "775:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "775:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "759:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616464726573732063616e6e6f74206265207a65726f",
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "787:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
																"typeString": "literal_string \"Token address cannot be zero\""
															},
															"value": "Token address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
																"typeString": "literal_string \"Token address cannot be zero\""
															}
														],
														"id": 296,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "751:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "751:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "751:67:3"
											},
											{
												"expression": {
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "829:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 308,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "851:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 307,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "844:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "844:20:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "829:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "829:35:3"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "583:117:3",
										"text": "@notice Set the token to be used for staking\n @param tokenAddress The address of the ERC20 token contract"
									},
									"id": 313,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "726:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "718:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:22:3"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "740:0:3"
									},
									"scope": 447,
									"src": "706:166:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "1024:479:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 320,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "1043:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1052:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1043:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1055:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1035:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1035:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "1035:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 329,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1216:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1220:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1216:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 333,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1236:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_GenericStaking_$447",
																				"typeString": "contract GenericStaking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_GenericStaking_$447",
																				"typeString": "contract GenericStaking"
																			}
																		],
																		"id": 332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1228:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 331,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1228:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1228:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 335,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "1243:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 327,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "1190:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1203:12:3",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 224,
																"src": "1190:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1190:60:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1265:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1168:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1168:131:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "1168:131:3"
											},
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 340,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "1359:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$273_storage_$",
																	"typeString": "mapping(address => struct GenericStaking.Stake storage ref)"
																}
															},
															"id": 343,
															"indexExpression": {
																"expression": {
																	"id": 341,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1366:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1370:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1366:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1359:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$273_storage",
																"typeString": "struct GenericStaking.Stake storage ref"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1378:6:3",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 270,
														"src": "1359:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 345,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "1388:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1359:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "1359:35:3"
											},
											{
												"expression": {
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 348,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "1405:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$273_storage_$",
																	"typeString": "mapping(address => struct GenericStaking.Stake storage ref)"
																}
															},
															"id": 351,
															"indexExpression": {
																"expression": {
																	"id": 349,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1412:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1416:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1412:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1405:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$273_storage",
																"typeString": "struct GenericStaking.Stake storage ref"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1424:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 272,
														"src": "1405:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 353,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1436:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1442:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1436:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1405:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "1405:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 358,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1476:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1480:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1476:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "1488:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 357,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "1469:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1469:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "EmitStatement",
												"src": "1464:31:3"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "880:98:3",
										"text": "@notice Stake a specific amount of tokens\n @param amount The amount of tokens to stake"
									},
									"functionSelector": "a694fc3a",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1007:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "999:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:16:3"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1024:0:3"
									},
									"scope": 447,
									"src": "984:519:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "1600:540:3",
										"statements": [
											{
												"assignments": [
													370
												],
												"declarations": [
													{
														"constant": false,
														"id": 370,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "1624:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "1611:22:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$273_memory_ptr",
															"typeString": "struct GenericStaking.Stake"
														},
														"typeName": {
															"id": 369,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 368,
																"name": "Stake",
																"nameLocations": [
																	"1611:5:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 273,
																"src": "1611:5:3"
															},
															"referencedDeclaration": 273,
															"src": "1611:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$273_storage_ptr",
																"typeString": "struct GenericStaking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"baseExpression": {
														"id": 371,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "1636:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$273_storage_$",
															"typeString": "mapping(address => struct GenericStaking.Stake storage ref)"
														}
													},
													"id": 374,
													"indexExpression": {
														"expression": {
															"id": 372,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1643:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1647:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1643:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1636:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$273_storage",
														"typeString": "struct GenericStaking.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1611:43:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 377,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "1673:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$273_memory_ptr",
																		"typeString": "struct GenericStaking.Stake memory"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1683:6:3",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 270,
																"src": "1673:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1692:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1673:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f20756e7374616b65",
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1695:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346",
																"typeString": "literal_string \"No tokens to unstake\""
															},
															"value": "No tokens to unstake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346",
																"typeString": "literal_string \"No tokens to unstake\""
															}
														],
														"id": 376,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1665:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1665:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "1665:53:3"
											},
											{
												"assignments": [
													385
												],
												"declarations": [
													{
														"constant": false,
														"id": 385,
														"mutability": "mutable",
														"name": "amountToUnstake",
														"nameLocation": "1739:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "1731:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 384,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1731:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 388,
												"initialValue": {
													"expression": {
														"id": 386,
														"name": "userStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "1757:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$273_memory_ptr",
															"typeString": "struct GenericStaking.Stake memory"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1767:6:3",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 270,
													"src": "1757:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:42:3"
											},
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 389,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "1826:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$273_storage_$",
																	"typeString": "mapping(address => struct GenericStaking.Stake storage ref)"
																}
															},
															"id": 392,
															"indexExpression": {
																"expression": {
																	"id": 390,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1833:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1837:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1833:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1826:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$273_storage",
																"typeString": "struct GenericStaking.Stake storage ref"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1845:6:3",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 270,
														"src": "1826:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1854:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1826:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "1826:29:3"
											},
											{
												"expression": {
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 397,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "1866:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$273_storage_$",
																	"typeString": "mapping(address => struct GenericStaking.Stake storage ref)"
																}
															},
															"id": 400,
															"indexExpression": {
																"expression": {
																	"id": 398,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1873:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1877:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1873:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1866:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$273_storage",
																"typeString": "struct GenericStaking.Stake storage ref"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1885:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 272,
														"src": "1866:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1897:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1866:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "1866:32:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 408,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2000:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2004:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2000:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 410,
																	"name": "amountToUnstake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2012:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 406,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "1978:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1991:8:3",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 192,
																"src": "1978:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1978:50:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2043:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 405,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1956:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1956:121:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "1956:121:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 416,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2104:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2108:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2104:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "amountToUnstake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "2116:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 415,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2095:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2095:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "EmitStatement",
												"src": "2090:42:3"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "1511:55:3",
										"text": "@notice Unstake all tokens that the user has staked"
									},
									"functionSelector": "2def6620",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "1581:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1588:2:3"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1600:0:3"
									},
									"scope": 447,
									"src": "1572:568:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "2488:113:3",
										"statements": [
											{
												"assignments": [
													434
												],
												"declarations": [
													{
														"constant": false,
														"id": 434,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "2512:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "2499:22:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$273_memory_ptr",
															"typeString": "struct GenericStaking.Stake"
														},
														"typeName": {
															"id": 433,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 432,
																"name": "Stake",
																"nameLocations": [
																	"2499:5:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 273,
																"src": "2499:5:3"
															},
															"referencedDeclaration": 273,
															"src": "2499:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$273_storage_ptr",
																"typeString": "struct GenericStaking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"baseExpression": {
														"id": 435,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "2524:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$273_storage_$",
															"typeString": "mapping(address => struct GenericStaking.Stake storage ref)"
														}
													},
													"id": 437,
													"indexExpression": {
														"id": 436,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "2531:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2524:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$273_storage",
														"typeString": "struct GenericStaking.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:37:3"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 439,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "2555:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$273_memory_ptr",
																	"typeString": "struct GenericStaking.Stake memory"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2565:6:3",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 270,
															"src": "2555:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 441,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "2573:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$273_memory_ptr",
																	"typeString": "struct GenericStaking.Stake memory"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2583:9:3",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 272,
															"src": "2573:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 443,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2554:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 431,
												"id": 444,
												"nodeType": "Return",
												"src": "2547:46:3"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "2148:205:3",
										"text": "@notice Get the stake details for a user\n @param user The address of the user\n @return amount The amount of tokens staked\n @return timestamp The timestamp when the stake started"
									},
									"functionSelector": "f41322ac",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakeDetails",
									"nameLocation": "2368:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2392:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2384:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2384:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2383:14:3"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2456:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2448:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2472:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2464:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2464:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:35:3"
									},
									"scope": 447,
									"src": "2359:242:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 448,
							"src": "175:2429:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								284,
								290
							]
						}
					],
					"src": "33:2571:3"
				},
				"id": 3
			}
		}
	}
}