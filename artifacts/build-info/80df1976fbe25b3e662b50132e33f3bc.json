{
	"id": "80df1976fbe25b3e662b50132e33f3bc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contrat_de_Stacking_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: Contrat_de_Stacking.sol\n\n\npragma solidity ^0.8.28;\n\n\n\ncontract GenericStaking is Ownable(address(this)) {\n    IERC20 public stakingToken;\n\n    struct Stake {\n        uint256 amount; // Amount of tokens staked\n        uint256 timestamp; // Timestamp of when the staking started\n    }\n\n    mapping(address => Stake) public stakes;\n\n    event Staked(address indexed user, uint256 amount);\n    event Unstaked(address indexed user, uint256 amount);\n\n    /// @notice Set the token to be used for staking\n    /// @param tokenAddress The address of the ERC20 token contract\n    constructor(address tokenAddress) {\n        require(tokenAddress != address(0), \"Token address cannot be zero\");\n        stakingToken = IERC20(tokenAddress);\n    }\n\n    /// @notice Stake a specific amount of tokens\n    /// @param amount The amount of tokens to stake\n    function stake(uint256 amount) external {\n        require(amount > 0, \"Amount must be greater than 0\");\n\n        // Transfer tokens from the sender to the staking contract\n        require(\n            stakingToken.transferFrom(msg.sender, address(this), amount),\n            \"Token transfer failed\"\n        );\n\n        // Update the stake data for the user\n        stakes[msg.sender].amount += amount;\n        stakes[msg.sender].timestamp = block.timestamp;\n\n        emit Staked(msg.sender, amount);\n    }\n\n    /// @notice Unstake all tokens that the user has staked\n    function unstake() external {\n        Stake memory userStake = stakes[msg.sender];\n        require(userStake.amount > 0, \"No tokens to unstake\");\n\n        uint256 amountToUnstake = userStake.amount;\n\n        // Reset the user's stake data\n        stakes[msg.sender].amount = 0;\n        stakes[msg.sender].timestamp = 0;\n\n        // Transfer tokens back to the user\n        require(\n            stakingToken.transfer(msg.sender, amountToUnstake),\n            \"Token transfer failed\"\n        );\n\n        emit Unstaked(msg.sender, amountToUnstake);\n    }\n\n    /// @notice Get the stake details for a user\n    /// @param user The address of the user\n    /// @return amount The amount of tokens staked\n    /// @return timestamp The timestamp when the stake started\n    function getStakeDetails(address user)\n        external\n        view\n        returns (uint256 amount, uint256 timestamp)\n    {\n        Stake memory userStake = stakes[user];\n        return (userStake.amount, userStake.timestamp);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"Contrat_de_Stacking_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contrat_de_Stacking_flattened.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contrat_de_Stacking_flattened.sol\":{\"keccak256\":\"0xfca49531cfb18f1009ebab4abef8402c80a4189894a7ed436130f263ecbf96a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8a283fe6529fe7e7a28e9ff32282747f6cdbfcedb9875a84ec84285ab5cbab\",\"dweb:/ipfs/QmSvk2znsszZfqcHMWKY41sbucoyjbLzTeLK56MW2qbm1n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"GenericStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getStakeDetails",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"tokenAddress": "The address of the ERC20 token contract"
								}
							},
							"getStakeDetails(address)": {
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"amount": "The amount of tokens staked",
									"timestamp": "The timestamp when the stake started"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"stake(uint256)": {
								"params": {
									"amount": "The amount of tokens to stake"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contrat_de_Stacking_flattened.sol\":6966:9325  contract GenericStaking is Ownable(address(this)) {... */\n  mstore(0x40, 0x80)\n    /* \"Contrat_de_Stacking_flattened.sol\":7482:7645  constructor(address tokenAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Contrat_de_Stacking_flattened.sol\":7009:7013  this */\n  address\n    /* \"Contrat_de_Stacking_flattened.sol\":5097:5098  0 */\n  0x00\n    /* \"Contrat_de_Stacking_flattened.sol\":5073:5099  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Contrat_de_Stacking_flattened.sol\":5073:5085  initialOwner */\n  dup2\n    /* \"Contrat_de_Stacking_flattened.sol\":5073:5099  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Contrat_de_Stacking_flattened.sol\":5069:5164  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"Contrat_de_Stacking_flattened.sol\":5150:5151  0 */\n  0x00\n    /* \"Contrat_de_Stacking_flattened.sol\":5122:5153  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Contrat_de_Stacking_flattened.sol\":5069:5164  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"Contrat_de_Stacking_flattened.sol\":5173:5205  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"Contrat_de_Stacking_flattened.sol\":5192:5204  initialOwner */\n  dup2\n    /* \"Contrat_de_Stacking_flattened.sol\":5173:5191  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"Contrat_de_Stacking_flattened.sol\":5173:5205  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"Contrat_de_Stacking_flattened.sol\":5025:5212  constructor(address initialOwner) {... */\n  pop\n    /* \"Contrat_de_Stacking_flattened.sol\":7558:7559  0 */\n  0x00\n    /* \"Contrat_de_Stacking_flattened.sol\":7534:7560  tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Contrat_de_Stacking_flattened.sol\":7534:7546  tokenAddress */\n  dup2\n    /* \"Contrat_de_Stacking_flattened.sol\":7534:7560  tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Contrat_de_Stacking_flattened.sol\":7526:7593  require(tokenAddress != address(0), \"Token address cannot be zero\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"Contrat_de_Stacking_flattened.sol\":7625:7637  tokenAddress */\n  dup1\n    /* \"Contrat_de_Stacking_flattened.sol\":7603:7615  stakingToken */\n  0x01\n  0x00\n    /* \"Contrat_de_Stacking_flattened.sol\":7603:7638  stakingToken = IERC20(tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Contrat_de_Stacking_flattened.sol\":7482:7645  constructor(address tokenAddress) {... */\n  pop\n    /* \"Contrat_de_Stacking_flattened.sol\":6966:9325  contract GenericStaking is Ownable(address(this)) {... */\n  jump(tag_16)\n    /* \"Contrat_de_Stacking_flattened.sol\":6712:6899  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"Contrat_de_Stacking_flattened.sol\":6785:6801  address oldOwner */\n  0x00\n    /* \"Contrat_de_Stacking_flattened.sol\":6804:6810  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Contrat_de_Stacking_flattened.sol\":6785:6810  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Contrat_de_Stacking_flattened.sol\":6829:6837  newOwner */\n  dup2\n    /* \"Contrat_de_Stacking_flattened.sol\":6820:6826  _owner */\n  0x00\n  dup1\n    /* \"Contrat_de_Stacking_flattened.sol\":6820:6837  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Contrat_de_Stacking_flattened.sol\":6883:6891  newOwner */\n  dup2\n    /* \"Contrat_de_Stacking_flattened.sol\":6852:6892  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Contrat_de_Stacking_flattened.sol\":6873:6881  oldOwner */\n  dup2\n    /* \"Contrat_de_Stacking_flattened.sol\":6852:6892  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Contrat_de_Stacking_flattened.sol\":6775:6899  {... */\n  pop\n    /* \"Contrat_de_Stacking_flattened.sol\":6712:6899  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_35\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_37\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_38:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_40\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_43\n  tag_19\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":932:1051   */\ntag_42:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_44\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_24\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_25:\n    /* \"#utility.yul\":1289:1313   */\n  tag_46\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_22\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_9:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_48\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_25\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1554:1723   */\ntag_26:\n    /* \"#utility.yul\":1638:1649   */\n  0x00\n    /* \"#utility.yul\":1672:1678   */\n  dup3\n    /* \"#utility.yul\":1667:1670   */\n  dup3\n    /* \"#utility.yul\":1660:1679   */\n  mstore\n    /* \"#utility.yul\":1712:1716   */\n  0x20\n    /* \"#utility.yul\":1707:1710   */\n  dup3\n    /* \"#utility.yul\":1703:1717   */\n  add\n    /* \"#utility.yul\":1688:1717   */\n  swap1\n  pop\n    /* \"#utility.yul\":1554:1723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1729:1907   */\ntag_27:\n    /* \"#utility.yul\":1869:1899   */\n  0x546f6b656e20616464726573732063616e6e6f74206265207a65726f00000000\n    /* \"#utility.yul\":1865:1866   */\n  0x00\n    /* \"#utility.yul\":1857:1863   */\n  dup3\n    /* \"#utility.yul\":1853:1867   */\n  add\n    /* \"#utility.yul\":1846:1900   */\n  mstore\n    /* \"#utility.yul\":1729:1907   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1913:2279   */\ntag_28:\n    /* \"#utility.yul\":2055:2058   */\n  0x00\n    /* \"#utility.yul\":2076:2143   */\n  tag_52\n    /* \"#utility.yul\":2140:2142   */\n  0x1c\n    /* \"#utility.yul\":2135:2138   */\n  dup4\n    /* \"#utility.yul\":2076:2143   */\n  tag_26\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2069:2143   */\n  swap2\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  tag_53\n    /* \"#utility.yul\":2241:2244   */\n  dup3\n    /* \"#utility.yul\":2152:2245   */\n  tag_27\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2270:2272   */\n  0x20\n    /* \"#utility.yul\":2265:2268   */\n  dup3\n    /* \"#utility.yul\":2261:2273   */\n  add\n    /* \"#utility.yul\":2254:2273   */\n  swap1\n  pop\n    /* \"#utility.yul\":1913:2279   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2285:2704   */\ntag_15:\n    /* \"#utility.yul\":2451:2455   */\n  0x00\n    /* \"#utility.yul\":2489:2491   */\n  0x20\n    /* \"#utility.yul\":2478:2487   */\n  dup3\n    /* \"#utility.yul\":2474:2492   */\n  add\n    /* \"#utility.yul\":2466:2492   */\n  swap1\n  pop\n    /* \"#utility.yul\":2538:2547   */\n  dup2\n    /* \"#utility.yul\":2532:2536   */\n  dup2\n    /* \"#utility.yul\":2528:2548   */\n  sub\n    /* \"#utility.yul\":2524:2525   */\n  0x00\n    /* \"#utility.yul\":2513:2522   */\n  dup4\n    /* \"#utility.yul\":2509:2526   */\n  add\n    /* \"#utility.yul\":2502:2549   */\n  mstore\n    /* \"#utility.yul\":2566:2697   */\n  tag_55\n    /* \"#utility.yul\":2692:2696   */\n  dup2\n    /* \"#utility.yul\":2566:2697   */\n  tag_28\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2558:2697   */\n  swap1\n  pop\n    /* \"#utility.yul\":2285:2704   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Contrat_de_Stacking_flattened.sol\":6966:9325  contract GenericStaking is Ownable(address(this)) {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contrat_de_Stacking_flattened.sol\":6966:9325  contract GenericStaking is Ownable(address(this)) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf41322ac\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x16934fc4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2def6620\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contrat_de_Stacking_flattened.sol\":7200:7239  mapping(address => Stake) public stakes */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contrat_de_Stacking_flattened.sol\":8324:8875  function unstake() external {... */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"Contrat_de_Stacking_flattened.sol\":6093:6194  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"Contrat_de_Stacking_flattened.sol\":7022:7048  IERC20 public stakingToken */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contrat_de_Stacking_flattened.sol\":5438:5523  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contrat_de_Stacking_flattened.sol\":7753:8258  function stake(uint256 amount) external {... */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"Contrat_de_Stacking_flattened.sol\":6343:6558  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \"Contrat_de_Stacking_flattened.sol\":9088:9323  function getStakeDetails(address user)... */\n    tag_10:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contrat_de_Stacking_flattened.sol\":7200:7239  mapping(address => Stake) public stakes */\n    tag_15:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"Contrat_de_Stacking_flattened.sol\":8324:8875  function unstake() external {... */\n    tag_19:\n        /* \"Contrat_de_Stacking_flattened.sol\":8362:8384  Stake memory userStake */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":8387:8393  stakes */\n      0x02\n        /* \"Contrat_de_Stacking_flattened.sol\":8387:8405  stakes[msg.sender] */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":8394:8404  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking_flattened.sol\":8387:8405  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Contrat_de_Stacking_flattened.sol\":8362:8405  Stake memory userStake = stakes[msg.sender] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Contrat_de_Stacking_flattened.sol\":8442:8443  0 */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":8423:8432  userStake */\n      dup2\n        /* \"Contrat_de_Stacking_flattened.sol\":8423:8439  userStake.amount */\n      0x00\n      add\n      mload\n        /* \"Contrat_de_Stacking_flattened.sol\":8423:8443  userStake.amount > 0 */\n      gt\n        /* \"Contrat_de_Stacking_flattened.sol\":8415:8468  require(userStake.amount > 0, \"No tokens to unstake\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"Contrat_de_Stacking_flattened.sol\":8479:8502  uint256 amountToUnstake */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":8505:8514  userStake */\n      dup2\n        /* \"Contrat_de_Stacking_flattened.sol\":8505:8521  userStake.amount */\n      0x00\n      add\n      mload\n        /* \"Contrat_de_Stacking_flattened.sol\":8479:8521  uint256 amountToUnstake = userStake.amount */\n      swap1\n      pop\n        /* \"Contrat_de_Stacking_flattened.sol\":8599:8600  0 */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":8571:8577  stakes */\n      0x02\n        /* \"Contrat_de_Stacking_flattened.sol\":8571:8589  stakes[msg.sender] */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":8578:8588  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking_flattened.sol\":8571:8589  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Contrat_de_Stacking_flattened.sol\":8571:8596  stakes[msg.sender].amount */\n      0x00\n      add\n        /* \"Contrat_de_Stacking_flattened.sol\":8571:8600  stakes[msg.sender].amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contrat_de_Stacking_flattened.sol\":8641:8642  0 */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":8610:8616  stakes */\n      0x02\n        /* \"Contrat_de_Stacking_flattened.sol\":8610:8628  stakes[msg.sender] */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":8617:8627  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking_flattened.sol\":8610:8628  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Contrat_de_Stacking_flattened.sol\":8610:8638  stakes[msg.sender].timestamp */\n      0x01\n      add\n        /* \"Contrat_de_Stacking_flattened.sol\":8610:8642  stakes[msg.sender].timestamp = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contrat_de_Stacking_flattened.sol\":8718:8730  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contrat_de_Stacking_flattened.sol\":8718:8739  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Contrat_de_Stacking_flattened.sol\":8740:8750  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking_flattened.sol\":8752:8767  amountToUnstake */\n      dup4\n        /* \"Contrat_de_Stacking_flattened.sol\":8718:8768  stakingToken.transfer(msg.sender, amountToUnstake) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"Contrat_de_Stacking_flattened.sol\":8697:8815  require(... */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"Contrat_de_Stacking_flattened.sol\":8840:8850  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking_flattened.sol\":8831:8868  Unstaked(msg.sender, amountToUnstake) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75\n        /* \"Contrat_de_Stacking_flattened.sol\":8852:8867  amountToUnstake */\n      dup3\n        /* \"Contrat_de_Stacking_flattened.sol\":8831:8868  Unstaked(msg.sender, amountToUnstake) */\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Contrat_de_Stacking_flattened.sol\":8352:8875  {... */\n      pop\n      pop\n        /* \"Contrat_de_Stacking_flattened.sol\":8324:8875  function unstake() external {... */\n      jump\t// out\n        /* \"Contrat_de_Stacking_flattened.sol\":6093:6194  function renounceOwnership() public virtual onlyOwner {... */\n    tag_21:\n        /* \"Contrat_de_Stacking_flattened.sol\":5331:5344  _checkOwner() */\n      tag_57\n        /* \"Contrat_de_Stacking_flattened.sol\":5331:5342  _checkOwner */\n      tag_58\n        /* \"Contrat_de_Stacking_flattened.sol\":5331:5344  _checkOwner() */\n      jump\t// in\n    tag_57:\n        /* \"Contrat_de_Stacking_flattened.sol\":6157:6187  _transferOwnership(address(0)) */\n      tag_60\n        /* \"Contrat_de_Stacking_flattened.sol\":6184:6185  0 */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":6157:6175  _transferOwnership */\n      tag_61\n        /* \"Contrat_de_Stacking_flattened.sol\":6157:6187  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_60:\n        /* \"Contrat_de_Stacking_flattened.sol\":6093:6194  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Contrat_de_Stacking_flattened.sol\":7022:7048  IERC20 public stakingToken */\n    tag_23:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Contrat_de_Stacking_flattened.sol\":5438:5523  function owner() public view virtual returns (address) {... */\n    tag_27:\n        /* \"Contrat_de_Stacking_flattened.sol\":5484:5491  address */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":5510:5516  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contrat_de_Stacking_flattened.sol\":5503:5516  return _owner */\n      swap1\n      pop\n        /* \"Contrat_de_Stacking_flattened.sol\":5438:5523  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Contrat_de_Stacking_flattened.sol\":7753:8258  function stake(uint256 amount) external {... */\n    tag_33:\n        /* \"Contrat_de_Stacking_flattened.sol\":7820:7821  0 */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":7811:7817  amount */\n      dup2\n        /* \"Contrat_de_Stacking_flattened.sol\":7811:7821  amount > 0 */\n      gt\n        /* \"Contrat_de_Stacking_flattened.sol\":7803:7855  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"Contrat_de_Stacking_flattened.sol\":7954:7966  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contrat_de_Stacking_flattened.sol\":7954:7979  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Contrat_de_Stacking_flattened.sol\":7980:7990  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking_flattened.sol\":8000:8004  this */\n      address\n        /* \"Contrat_de_Stacking_flattened.sol\":8007:8013  amount */\n      dup5\n        /* \"Contrat_de_Stacking_flattened.sol\":7954:8014  stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_71:\n        /* \"Contrat_de_Stacking_flattened.sol\":7933:8061  require(... */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_53\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"Contrat_de_Stacking_flattened.sol\":8147:8153  amount */\n      dup1\n        /* \"Contrat_de_Stacking_flattened.sol\":8118:8124  stakes */\n      0x02\n        /* \"Contrat_de_Stacking_flattened.sol\":8118:8136  stakes[msg.sender] */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":8125:8135  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking_flattened.sol\":8118:8136  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Contrat_de_Stacking_flattened.sol\":8118:8143  stakes[msg.sender].amount */\n      0x00\n      add\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":8118:8153  stakes[msg.sender].amount += amount */\n      dup3\n      dup3\n      sload\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contrat_de_Stacking_flattened.sol\":8194:8209  block.timestamp */\n      timestamp\n        /* \"Contrat_de_Stacking_flattened.sol\":8163:8169  stakes */\n      0x02\n        /* \"Contrat_de_Stacking_flattened.sol\":8163:8181  stakes[msg.sender] */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":8170:8180  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking_flattened.sol\":8163:8181  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Contrat_de_Stacking_flattened.sol\":8163:8191  stakes[msg.sender].timestamp */\n      0x01\n      add\n        /* \"Contrat_de_Stacking_flattened.sol\":8163:8209  stakes[msg.sender].timestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Contrat_de_Stacking_flattened.sol\":8232:8242  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking_flattened.sol\":8225:8251  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"Contrat_de_Stacking_flattened.sol\":8244:8250  amount */\n      dup3\n        /* \"Contrat_de_Stacking_flattened.sol\":8225:8251  Staked(msg.sender, amount) */\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Contrat_de_Stacking_flattened.sol\":7753:8258  function stake(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"Contrat_de_Stacking_flattened.sol\":6343:6558  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_36:\n        /* \"Contrat_de_Stacking_flattened.sol\":5331:5344  _checkOwner() */\n      tag_78\n        /* \"Contrat_de_Stacking_flattened.sol\":5331:5342  _checkOwner */\n      tag_58\n        /* \"Contrat_de_Stacking_flattened.sol\":5331:5344  _checkOwner() */\n      jump\t// in\n    tag_78:\n        /* \"Contrat_de_Stacking_flattened.sol\":6447:6448  0 */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":6427:6449  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contrat_de_Stacking_flattened.sol\":6427:6435  newOwner */\n      dup2\n        /* \"Contrat_de_Stacking_flattened.sol\":6427:6449  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Contrat_de_Stacking_flattened.sol\":6423:6514  if (newOwner == address(0)) {... */\n      tag_80\n      jumpi\n        /* \"Contrat_de_Stacking_flattened.sol\":6500:6501  0 */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":6472:6503  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Contrat_de_Stacking_flattened.sol\":6423:6514  if (newOwner == address(0)) {... */\n    tag_80:\n        /* \"Contrat_de_Stacking_flattened.sol\":6523:6551  _transferOwnership(newOwner) */\n      tag_82\n        /* \"Contrat_de_Stacking_flattened.sol\":6542:6550  newOwner */\n      dup2\n        /* \"Contrat_de_Stacking_flattened.sol\":6523:6541  _transferOwnership */\n      tag_61\n        /* \"Contrat_de_Stacking_flattened.sol\":6523:6551  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_82:\n        /* \"Contrat_de_Stacking_flattened.sol\":6343:6558  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Contrat_de_Stacking_flattened.sol\":9088:9323  function getStakeDetails(address user)... */\n    tag_39:\n        /* \"Contrat_de_Stacking_flattened.sol\":9174:9188  uint256 amount */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":9190:9207  uint256 timestamp */\n      dup1\n        /* \"Contrat_de_Stacking_flattened.sol\":9223:9245  Stake memory userStake */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":9248:9254  stakes */\n      0x02\n        /* \"Contrat_de_Stacking_flattened.sol\":9248:9260  stakes[user] */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":9255:9259  user */\n      dup6\n        /* \"Contrat_de_Stacking_flattened.sol\":9248:9260  stakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Contrat_de_Stacking_flattened.sol\":9223:9260  Stake memory userStake = stakes[user] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Contrat_de_Stacking_flattened.sol\":9278:9287  userStake */\n      dup1\n        /* \"Contrat_de_Stacking_flattened.sol\":9278:9294  userStake.amount */\n      0x00\n      add\n      mload\n        /* \"Contrat_de_Stacking_flattened.sol\":9296:9305  userStake */\n      dup2\n        /* \"Contrat_de_Stacking_flattened.sol\":9296:9315  userStake.timestamp */\n      0x20\n      add\n      mload\n        /* \"Contrat_de_Stacking_flattened.sol\":9270:9316  return (userStake.amount, userStake.timestamp) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"Contrat_de_Stacking_flattened.sol\":9088:9323  function getStakeDetails(address user)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"Contrat_de_Stacking_flattened.sol\":5596:5758  function _checkOwner() internal view virtual {... */\n    tag_58:\n        /* \"Contrat_de_Stacking_flattened.sol\":5666:5678  _msgSender() */\n      tag_85\n        /* \"Contrat_de_Stacking_flattened.sol\":5666:5676  _msgSender */\n      tag_86\n        /* \"Contrat_de_Stacking_flattened.sol\":5666:5678  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"Contrat_de_Stacking_flattened.sol\":5655:5678  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contrat_de_Stacking_flattened.sol\":5655:5662  owner() */\n      tag_87\n        /* \"Contrat_de_Stacking_flattened.sol\":5655:5660  owner */\n      tag_27\n        /* \"Contrat_de_Stacking_flattened.sol\":5655:5662  owner() */\n      jump\t// in\n    tag_87:\n        /* \"Contrat_de_Stacking_flattened.sol\":5655:5678  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contrat_de_Stacking_flattened.sol\":5651:5752  if (owner() != _msgSender()) {... */\n      tag_88\n      jumpi\n        /* \"Contrat_de_Stacking_flattened.sol\":5728:5740  _msgSender() */\n      tag_89\n        /* \"Contrat_de_Stacking_flattened.sol\":5728:5738  _msgSender */\n      tag_86\n        /* \"Contrat_de_Stacking_flattened.sol\":5728:5740  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"Contrat_de_Stacking_flattened.sol\":5701:5741  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Contrat_de_Stacking_flattened.sol\":5651:5752  if (owner() != _msgSender()) {... */\n    tag_88:\n        /* \"Contrat_de_Stacking_flattened.sol\":5596:5758  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"Contrat_de_Stacking_flattened.sol\":6712:6899  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_61:\n        /* \"Contrat_de_Stacking_flattened.sol\":6785:6801  address oldOwner */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":6804:6810  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contrat_de_Stacking_flattened.sol\":6785:6810  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"Contrat_de_Stacking_flattened.sol\":6829:6837  newOwner */\n      dup2\n        /* \"Contrat_de_Stacking_flattened.sol\":6820:6826  _owner */\n      0x00\n      dup1\n        /* \"Contrat_de_Stacking_flattened.sol\":6820:6837  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contrat_de_Stacking_flattened.sol\":6883:6891  newOwner */\n      dup2\n        /* \"Contrat_de_Stacking_flattened.sol\":6852:6892  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contrat_de_Stacking_flattened.sol\":6873:6881  oldOwner */\n      dup2\n        /* \"Contrat_de_Stacking_flattened.sol\":6852:6892  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Contrat_de_Stacking_flattened.sol\":6775:6899  {... */\n      pop\n        /* \"Contrat_de_Stacking_flattened.sol\":6712:6899  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"Contrat_de_Stacking_flattened.sol\":3516:3612  function _msgSender() internal view virtual returns (address) {... */\n    tag_86:\n        /* \"Contrat_de_Stacking_flattened.sol\":3569:3576  address */\n      0x00\n        /* \"Contrat_de_Stacking_flattened.sol\":3595:3605  msg.sender */\n      caller\n        /* \"Contrat_de_Stacking_flattened.sol\":3588:3605  return msg.sender */\n      swap1\n      pop\n        /* \"Contrat_de_Stacking_flattened.sol\":3516:3612  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_94:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_96:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_97:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_127\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_96\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_98:\n        /* \"#utility.yul\":641:665   */\n      tag_129\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_97\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_130\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_130:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_99:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_132\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_98\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_14:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_135\n      tag_94\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":917:1036   */\n    tag_134:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_136\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_99\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_100:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_101:\n        /* \"#utility.yul\":1346:1370   */\n      tag_139\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_100\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1715   */\n    tag_17:\n        /* \"#utility.yul\":1504:1508   */\n      0x00\n        /* \"#utility.yul\":1542:1544   */\n      0x40\n        /* \"#utility.yul\":1531:1540   */\n      dup3\n        /* \"#utility.yul\":1527:1545   */\n      add\n        /* \"#utility.yul\":1519:1545   */\n      swap1\n      pop\n        /* \"#utility.yul\":1555:1626   */\n      tag_141\n        /* \"#utility.yul\":1623:1624   */\n      0x00\n        /* \"#utility.yul\":1612:1621   */\n      dup4\n        /* \"#utility.yul\":1608:1625   */\n      add\n        /* \"#utility.yul\":1599:1605   */\n      dup6\n        /* \"#utility.yul\":1555:1626   */\n      tag_101\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1636:1708   */\n      tag_142\n        /* \"#utility.yul\":1704:1706   */\n      0x20\n        /* \"#utility.yul\":1693:1702   */\n      dup4\n        /* \"#utility.yul\":1689:1707   */\n      add\n        /* \"#utility.yul\":1680:1686   */\n      dup5\n        /* \"#utility.yul\":1636:1708   */\n      tag_101\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1383:1715   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1721:1781   */\n    tag_102:\n        /* \"#utility.yul\":1749:1752   */\n      0x00\n        /* \"#utility.yul\":1770:1775   */\n      dup2\n        /* \"#utility.yul\":1763:1775   */\n      swap1\n      pop\n        /* \"#utility.yul\":1721:1781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1787:1929   */\n    tag_103:\n        /* \"#utility.yul\":1837:1846   */\n      0x00\n        /* \"#utility.yul\":1870:1923   */\n      tag_145\n        /* \"#utility.yul\":1888:1922   */\n      tag_146\n        /* \"#utility.yul\":1897:1921   */\n      tag_147\n        /* \"#utility.yul\":1915:1920   */\n      dup5\n        /* \"#utility.yul\":1897:1921   */\n      tag_96\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":1888:1922   */\n      tag_102\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1870:1923   */\n      tag_96\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1857:1923   */\n      swap1\n      pop\n        /* \"#utility.yul\":1787:1929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1935:2061   */\n    tag_104:\n        /* \"#utility.yul\":1985:1994   */\n      0x00\n        /* \"#utility.yul\":2018:2055   */\n      tag_149\n        /* \"#utility.yul\":2049:2054   */\n      dup3\n        /* \"#utility.yul\":2018:2055   */\n      tag_103\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2005:2055   */\n      swap1\n      pop\n        /* \"#utility.yul\":1935:2061   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2067:2206   */\n    tag_105:\n        /* \"#utility.yul\":2130:2139   */\n      0x00\n        /* \"#utility.yul\":2163:2200   */\n      tag_151\n        /* \"#utility.yul\":2194:2199   */\n      dup3\n        /* \"#utility.yul\":2163:2200   */\n      tag_104\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2150:2200   */\n      swap1\n      pop\n        /* \"#utility.yul\":2067:2206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2212:2369   */\n    tag_106:\n        /* \"#utility.yul\":2312:2362   */\n      tag_153\n        /* \"#utility.yul\":2356:2361   */\n      dup2\n        /* \"#utility.yul\":2312:2362   */\n      tag_105\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2307:2310   */\n      dup3\n        /* \"#utility.yul\":2300:2363   */\n      mstore\n        /* \"#utility.yul\":2212:2369   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2375:2623   */\n    tag_25:\n        /* \"#utility.yul\":2481:2485   */\n      0x00\n        /* \"#utility.yul\":2519:2521   */\n      0x20\n        /* \"#utility.yul\":2508:2517   */\n      dup3\n        /* \"#utility.yul\":2504:2522   */\n      add\n        /* \"#utility.yul\":2496:2522   */\n      swap1\n      pop\n        /* \"#utility.yul\":2532:2616   */\n      tag_155\n        /* \"#utility.yul\":2613:2614   */\n      0x00\n        /* \"#utility.yul\":2602:2611   */\n      dup4\n        /* \"#utility.yul\":2598:2615   */\n      add\n        /* \"#utility.yul\":2589:2595   */\n      dup5\n        /* \"#utility.yul\":2532:2616   */\n      tag_106\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2375:2623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2629:2747   */\n    tag_107:\n        /* \"#utility.yul\":2716:2740   */\n      tag_157\n        /* \"#utility.yul\":2734:2739   */\n      dup2\n        /* \"#utility.yul\":2716:2740   */\n      tag_97\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2711:2714   */\n      dup3\n        /* \"#utility.yul\":2704:2741   */\n      mstore\n        /* \"#utility.yul\":2629:2747   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2975   */\n    tag_29:\n        /* \"#utility.yul\":2846:2850   */\n      0x00\n        /* \"#utility.yul\":2884:2886   */\n      0x20\n        /* \"#utility.yul\":2873:2882   */\n      dup3\n        /* \"#utility.yul\":2869:2887   */\n      add\n        /* \"#utility.yul\":2861:2887   */\n      swap1\n      pop\n        /* \"#utility.yul\":2897:2968   */\n      tag_159\n        /* \"#utility.yul\":2965:2966   */\n      0x00\n        /* \"#utility.yul\":2954:2963   */\n      dup4\n        /* \"#utility.yul\":2950:2967   */\n      add\n        /* \"#utility.yul\":2941:2947   */\n      dup5\n        /* \"#utility.yul\":2897:2968   */\n      tag_107\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2753:2975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2981:3103   */\n    tag_108:\n        /* \"#utility.yul\":3054:3078   */\n      tag_161\n        /* \"#utility.yul\":3072:3077   */\n      dup2\n        /* \"#utility.yul\":3054:3078   */\n      tag_100\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3047:3052   */\n      dup2\n        /* \"#utility.yul\":3044:3079   */\n      eq\n        /* \"#utility.yul\":3034:3097   */\n      tag_162\n      jumpi\n        /* \"#utility.yul\":3093:3094   */\n      0x00\n        /* \"#utility.yul\":3090:3091   */\n      dup1\n        /* \"#utility.yul\":3083:3095   */\n      revert\n        /* \"#utility.yul\":3034:3097   */\n    tag_162:\n        /* \"#utility.yul\":2981:3103   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3248   */\n    tag_109:\n        /* \"#utility.yul\":3155:3160   */\n      0x00\n        /* \"#utility.yul\":3193:3199   */\n      dup2\n        /* \"#utility.yul\":3180:3200   */\n      calldataload\n        /* \"#utility.yul\":3171:3200   */\n      swap1\n      pop\n        /* \"#utility.yul\":3209:3242   */\n      tag_164\n        /* \"#utility.yul\":3236:3241   */\n      dup2\n        /* \"#utility.yul\":3209:3242   */\n      tag_108\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":3109:3248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3254:3583   */\n    tag_32:\n        /* \"#utility.yul\":3313:3319   */\n      0x00\n        /* \"#utility.yul\":3362:3364   */\n      0x20\n        /* \"#utility.yul\":3350:3359   */\n      dup3\n        /* \"#utility.yul\":3341:3348   */\n      dup5\n        /* \"#utility.yul\":3337:3360   */\n      sub\n        /* \"#utility.yul\":3333:3365   */\n      slt\n        /* \"#utility.yul\":3330:3449   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":3368:3447   */\n      tag_167\n      tag_94\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3330:3449   */\n    tag_166:\n        /* \"#utility.yul\":3488:3489   */\n      0x00\n        /* \"#utility.yul\":3513:3566   */\n      tag_168\n        /* \"#utility.yul\":3558:3565   */\n      dup5\n        /* \"#utility.yul\":3549:3555   */\n      dup3\n        /* \"#utility.yul\":3538:3547   */\n      dup6\n        /* \"#utility.yul\":3534:3556   */\n      add\n        /* \"#utility.yul\":3513:3566   */\n      tag_109\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":3503:3566   */\n      swap2\n      pop\n        /* \"#utility.yul\":3459:3576   */\n      pop\n        /* \"#utility.yul\":3254:3583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3589:3758   */\n    tag_110:\n        /* \"#utility.yul\":3673:3684   */\n      0x00\n        /* \"#utility.yul\":3707:3713   */\n      dup3\n        /* \"#utility.yul\":3702:3705   */\n      dup3\n        /* \"#utility.yul\":3695:3714   */\n      mstore\n        /* \"#utility.yul\":3747:3751   */\n      0x20\n        /* \"#utility.yul\":3742:3745   */\n      dup3\n        /* \"#utility.yul\":3738:3752   */\n      add\n        /* \"#utility.yul\":3723:3752   */\n      swap1\n      pop\n        /* \"#utility.yul\":3589:3758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3764:3934   */\n    tag_111:\n        /* \"#utility.yul\":3904:3926   */\n      0x4e6f20746f6b656e7320746f20756e7374616b65000000000000000000000000\n        /* \"#utility.yul\":3900:3901   */\n      0x00\n        /* \"#utility.yul\":3892:3898   */\n      dup3\n        /* \"#utility.yul\":3888:3902   */\n      add\n        /* \"#utility.yul\":3881:3927   */\n      mstore\n        /* \"#utility.yul\":3764:3934   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3940:4306   */\n    tag_112:\n        /* \"#utility.yul\":4082:4085   */\n      0x00\n        /* \"#utility.yul\":4103:4170   */\n      tag_172\n        /* \"#utility.yul\":4167:4169   */\n      0x14\n        /* \"#utility.yul\":4162:4165   */\n      dup4\n        /* \"#utility.yul\":4103:4170   */\n      tag_110\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4096:4170   */\n      swap2\n      pop\n        /* \"#utility.yul\":4179:4272   */\n      tag_173\n        /* \"#utility.yul\":4268:4271   */\n      dup3\n        /* \"#utility.yul\":4179:4272   */\n      tag_111\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4297:4299   */\n      0x20\n        /* \"#utility.yul\":4292:4295   */\n      dup3\n        /* \"#utility.yul\":4288:4300   */\n      add\n        /* \"#utility.yul\":4281:4300   */\n      swap1\n      pop\n        /* \"#utility.yul\":3940:4306   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4312:4731   */\n    tag_44:\n        /* \"#utility.yul\":4478:4482   */\n      0x00\n        /* \"#utility.yul\":4516:4518   */\n      0x20\n        /* \"#utility.yul\":4505:4514   */\n      dup3\n        /* \"#utility.yul\":4501:4519   */\n      add\n        /* \"#utility.yul\":4493:4519   */\n      swap1\n      pop\n        /* \"#utility.yul\":4565:4574   */\n      dup2\n        /* \"#utility.yul\":4559:4563   */\n      dup2\n        /* \"#utility.yul\":4555:4575   */\n      sub\n        /* \"#utility.yul\":4551:4552   */\n      0x00\n        /* \"#utility.yul\":4540:4549   */\n      dup4\n        /* \"#utility.yul\":4536:4553   */\n      add\n        /* \"#utility.yul\":4529:4576   */\n      mstore\n        /* \"#utility.yul\":4593:4724   */\n      tag_175\n        /* \"#utility.yul\":4719:4723   */\n      dup2\n        /* \"#utility.yul\":4593:4724   */\n      tag_112\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4585:4724   */\n      swap1\n      pop\n        /* \"#utility.yul\":4312:4731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4737:5069   */\n    tag_46:\n        /* \"#utility.yul\":4858:4862   */\n      0x00\n        /* \"#utility.yul\":4896:4898   */\n      0x40\n        /* \"#utility.yul\":4885:4894   */\n      dup3\n        /* \"#utility.yul\":4881:4899   */\n      add\n        /* \"#utility.yul\":4873:4899   */\n      swap1\n      pop\n        /* \"#utility.yul\":4909:4980   */\n      tag_177\n        /* \"#utility.yul\":4977:4978   */\n      0x00\n        /* \"#utility.yul\":4966:4975   */\n      dup4\n        /* \"#utility.yul\":4962:4979   */\n      add\n        /* \"#utility.yul\":4953:4959   */\n      dup6\n        /* \"#utility.yul\":4909:4980   */\n      tag_107\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":4990:5062   */\n      tag_178\n        /* \"#utility.yul\":5058:5060   */\n      0x20\n        /* \"#utility.yul\":5047:5056   */\n      dup4\n        /* \"#utility.yul\":5043:5061   */\n      add\n        /* \"#utility.yul\":5034:5040   */\n      dup5\n        /* \"#utility.yul\":4990:5062   */\n      tag_101\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":4737:5069   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5075:5165   */\n    tag_113:\n        /* \"#utility.yul\":5109:5116   */\n      0x00\n        /* \"#utility.yul\":5152:5157   */\n      dup2\n        /* \"#utility.yul\":5145:5158   */\n      iszero\n        /* \"#utility.yul\":5138:5159   */\n      iszero\n        /* \"#utility.yul\":5127:5159   */\n      swap1\n      pop\n        /* \"#utility.yul\":5075:5165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5171:5287   */\n    tag_114:\n        /* \"#utility.yul\":5241:5262   */\n      tag_181\n        /* \"#utility.yul\":5256:5261   */\n      dup2\n        /* \"#utility.yul\":5241:5262   */\n      tag_113\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5234:5239   */\n      dup2\n        /* \"#utility.yul\":5231:5263   */\n      eq\n        /* \"#utility.yul\":5221:5281   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":5277:5278   */\n      0x00\n        /* \"#utility.yul\":5274:5275   */\n      dup1\n        /* \"#utility.yul\":5267:5279   */\n      revert\n        /* \"#utility.yul\":5221:5281   */\n    tag_182:\n        /* \"#utility.yul\":5171:5287   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5293:5430   */\n    tag_115:\n        /* \"#utility.yul\":5347:5352   */\n      0x00\n        /* \"#utility.yul\":5378:5384   */\n      dup2\n        /* \"#utility.yul\":5372:5385   */\n      mload\n        /* \"#utility.yul\":5363:5385   */\n      swap1\n      pop\n        /* \"#utility.yul\":5394:5424   */\n      tag_184\n        /* \"#utility.yul\":5418:5423   */\n      dup2\n        /* \"#utility.yul\":5394:5424   */\n      tag_114\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5293:5430   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5436:5781   */\n    tag_50:\n        /* \"#utility.yul\":5503:5509   */\n      0x00\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"#utility.yul\":5540:5549   */\n      dup3\n        /* \"#utility.yul\":5531:5538   */\n      dup5\n        /* \"#utility.yul\":5527:5550   */\n      sub\n        /* \"#utility.yul\":5523:5555   */\n      slt\n        /* \"#utility.yul\":5520:5639   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":5558:5637   */\n      tag_187\n      tag_94\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":5520:5639   */\n    tag_186:\n        /* \"#utility.yul\":5678:5679   */\n      0x00\n        /* \"#utility.yul\":5703:5764   */\n      tag_188\n        /* \"#utility.yul\":5756:5763   */\n      dup5\n        /* \"#utility.yul\":5747:5753   */\n      dup3\n        /* \"#utility.yul\":5736:5745   */\n      dup6\n        /* \"#utility.yul\":5732:5754   */\n      add\n        /* \"#utility.yul\":5703:5764   */\n      tag_115\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":5693:5764   */\n      swap2\n      pop\n        /* \"#utility.yul\":5649:5774   */\n      pop\n        /* \"#utility.yul\":5436:5781   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5787:5958   */\n    tag_116:\n        /* \"#utility.yul\":5927:5950   */\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":5923:5924   */\n      0x00\n        /* \"#utility.yul\":5915:5921   */\n      dup3\n        /* \"#utility.yul\":5911:5925   */\n      add\n        /* \"#utility.yul\":5904:5951   */\n      mstore\n        /* \"#utility.yul\":5787:5958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5964:6330   */\n    tag_117:\n        /* \"#utility.yul\":6106:6109   */\n      0x00\n        /* \"#utility.yul\":6127:6194   */\n      tag_191\n        /* \"#utility.yul\":6191:6193   */\n      0x15\n        /* \"#utility.yul\":6186:6189   */\n      dup4\n        /* \"#utility.yul\":6127:6194   */\n      tag_110\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":6120:6194   */\n      swap2\n      pop\n        /* \"#utility.yul\":6203:6296   */\n      tag_192\n        /* \"#utility.yul\":6292:6295   */\n      dup3\n        /* \"#utility.yul\":6203:6296   */\n      tag_116\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6321:6323   */\n      0x20\n        /* \"#utility.yul\":6316:6319   */\n      dup3\n        /* \"#utility.yul\":6312:6324   */\n      add\n        /* \"#utility.yul\":6305:6324   */\n      swap1\n      pop\n        /* \"#utility.yul\":5964:6330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6336:6755   */\n    tag_53:\n        /* \"#utility.yul\":6502:6506   */\n      0x00\n        /* \"#utility.yul\":6540:6542   */\n      0x20\n        /* \"#utility.yul\":6529:6538   */\n      dup3\n        /* \"#utility.yul\":6525:6543   */\n      add\n        /* \"#utility.yul\":6517:6543   */\n      swap1\n      pop\n        /* \"#utility.yul\":6589:6598   */\n      dup2\n        /* \"#utility.yul\":6583:6587   */\n      dup2\n        /* \"#utility.yul\":6579:6599   */\n      sub\n        /* \"#utility.yul\":6575:6576   */\n      0x00\n        /* \"#utility.yul\":6564:6573   */\n      dup4\n        /* \"#utility.yul\":6560:6577   */\n      add\n        /* \"#utility.yul\":6553:6600   */\n      mstore\n        /* \"#utility.yul\":6617:6748   */\n      tag_194\n        /* \"#utility.yul\":6743:6747   */\n      dup2\n        /* \"#utility.yul\":6617:6748   */\n      tag_117\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":6609:6748   */\n      swap1\n      pop\n        /* \"#utility.yul\":6336:6755   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6761:6983   */\n    tag_55:\n        /* \"#utility.yul\":6854:6858   */\n      0x00\n        /* \"#utility.yul\":6892:6894   */\n      0x20\n        /* \"#utility.yul\":6881:6890   */\n      dup3\n        /* \"#utility.yul\":6877:6895   */\n      add\n        /* \"#utility.yul\":6869:6895   */\n      swap1\n      pop\n        /* \"#utility.yul\":6905:6976   */\n      tag_196\n        /* \"#utility.yul\":6973:6974   */\n      0x00\n        /* \"#utility.yul\":6962:6971   */\n      dup4\n        /* \"#utility.yul\":6958:6975   */\n      add\n        /* \"#utility.yul\":6949:6955   */\n      dup5\n        /* \"#utility.yul\":6905:6976   */\n      tag_101\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":6761:6983   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6989:7168   */\n    tag_118:\n        /* \"#utility.yul\":7129:7160   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":7125:7126   */\n      0x00\n        /* \"#utility.yul\":7117:7123   */\n      dup3\n        /* \"#utility.yul\":7113:7127   */\n      add\n        /* \"#utility.yul\":7106:7161   */\n      mstore\n        /* \"#utility.yul\":6989:7168   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7174:7540   */\n    tag_119:\n        /* \"#utility.yul\":7316:7319   */\n      0x00\n        /* \"#utility.yul\":7337:7404   */\n      tag_199\n        /* \"#utility.yul\":7401:7403   */\n      0x1d\n        /* \"#utility.yul\":7396:7399   */\n      dup4\n        /* \"#utility.yul\":7337:7404   */\n      tag_110\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":7330:7404   */\n      swap2\n      pop\n        /* \"#utility.yul\":7413:7506   */\n      tag_200\n        /* \"#utility.yul\":7502:7505   */\n      dup3\n        /* \"#utility.yul\":7413:7506   */\n      tag_118\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":7531:7533   */\n      0x20\n        /* \"#utility.yul\":7526:7529   */\n      dup3\n        /* \"#utility.yul\":7522:7534   */\n      add\n        /* \"#utility.yul\":7515:7534   */\n      swap1\n      pop\n        /* \"#utility.yul\":7174:7540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7546:7965   */\n    tag_66:\n        /* \"#utility.yul\":7712:7716   */\n      0x00\n        /* \"#utility.yul\":7750:7752   */\n      0x20\n        /* \"#utility.yul\":7739:7748   */\n      dup3\n        /* \"#utility.yul\":7735:7753   */\n      add\n        /* \"#utility.yul\":7727:7753   */\n      swap1\n      pop\n        /* \"#utility.yul\":7799:7808   */\n      dup2\n        /* \"#utility.yul\":7793:7797   */\n      dup2\n        /* \"#utility.yul\":7789:7809   */\n      sub\n        /* \"#utility.yul\":7785:7786   */\n      0x00\n        /* \"#utility.yul\":7774:7783   */\n      dup4\n        /* \"#utility.yul\":7770:7787   */\n      add\n        /* \"#utility.yul\":7763:7810   */\n      mstore\n        /* \"#utility.yul\":7827:7958   */\n      tag_202\n        /* \"#utility.yul\":7953:7957   */\n      dup2\n        /* \"#utility.yul\":7827:7958   */\n      tag_119\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":7819:7958   */\n      swap1\n      pop\n        /* \"#utility.yul\":7546:7965   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7971:8413   */\n    tag_68:\n        /* \"#utility.yul\":8120:8124   */\n      0x00\n        /* \"#utility.yul\":8158:8160   */\n      0x60\n        /* \"#utility.yul\":8147:8156   */\n      dup3\n        /* \"#utility.yul\":8143:8161   */\n      add\n        /* \"#utility.yul\":8135:8161   */\n      swap1\n      pop\n        /* \"#utility.yul\":8171:8242   */\n      tag_204\n        /* \"#utility.yul\":8239:8240   */\n      0x00\n        /* \"#utility.yul\":8228:8237   */\n      dup4\n        /* \"#utility.yul\":8224:8241   */\n      add\n        /* \"#utility.yul\":8215:8221   */\n      dup7\n        /* \"#utility.yul\":8171:8242   */\n      tag_107\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":8252:8324   */\n      tag_205\n        /* \"#utility.yul\":8320:8322   */\n      0x20\n        /* \"#utility.yul\":8309:8318   */\n      dup4\n        /* \"#utility.yul\":8305:8323   */\n      add\n        /* \"#utility.yul\":8296:8302   */\n      dup6\n        /* \"#utility.yul\":8252:8324   */\n      tag_107\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":8334:8406   */\n      tag_206\n        /* \"#utility.yul\":8402:8404   */\n      0x40\n        /* \"#utility.yul\":8391:8400   */\n      dup4\n        /* \"#utility.yul\":8387:8405   */\n      add\n        /* \"#utility.yul\":8378:8384   */\n      dup5\n        /* \"#utility.yul\":8334:8406   */\n      tag_101\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":7971:8413   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8419:8599   */\n    tag_120:\n        /* \"#utility.yul\":8467:8544   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8464:8465   */\n      0x00\n        /* \"#utility.yul\":8457:8545   */\n      mstore\n        /* \"#utility.yul\":8564:8568   */\n      0x11\n        /* \"#utility.yul\":8561:8562   */\n      0x04\n        /* \"#utility.yul\":8554:8569   */\n      mstore\n        /* \"#utility.yul\":8588:8592   */\n      0x24\n        /* \"#utility.yul\":8585:8586   */\n      0x00\n        /* \"#utility.yul\":8578:8593   */\n      revert\n        /* \"#utility.yul\":8605:8796   */\n    tag_75:\n        /* \"#utility.yul\":8645:8648   */\n      0x00\n        /* \"#utility.yul\":8664:8684   */\n      tag_209\n        /* \"#utility.yul\":8682:8683   */\n      dup3\n        /* \"#utility.yul\":8664:8684   */\n      tag_100\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":8659:8684   */\n      swap2\n      pop\n        /* \"#utility.yul\":8698:8718   */\n      tag_210\n        /* \"#utility.yul\":8716:8717   */\n      dup4\n        /* \"#utility.yul\":8698:8718   */\n      tag_100\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":8693:8718   */\n      swap3\n      pop\n        /* \"#utility.yul\":8741:8742   */\n      dup3\n        /* \"#utility.yul\":8738:8739   */\n      dup3\n        /* \"#utility.yul\":8734:8743   */\n      add\n        /* \"#utility.yul\":8727:8743   */\n      swap1\n      pop\n        /* \"#utility.yul\":8762:8765   */\n      dup1\n        /* \"#utility.yul\":8759:8760   */\n      dup3\n        /* \"#utility.yul\":8756:8766   */\n      gt\n        /* \"#utility.yul\":8753:8789   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":8769:8787   */\n      tag_212\n      tag_120\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":8753:8789   */\n    tag_211:\n        /* \"#utility.yul\":8605:8796   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f9b7b1002c23ef71d56e4586f824e7d478fe11041ea67dbc2720bbb99835657e64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_154": {
									"entryPoint": null,
									"id": 154,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_306": {
									"entryPoint": null,
									"id": 306,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_250": {
									"entryPoint": 363,
									"id": 250,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2707:1",
										"nodeType": "YulBlock",
										"src": "0:2707:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "922:274:1",
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:1",
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nativeSrc": "970:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nativeSrc": "970:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nativeSrc": "939:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nativeSrc": "935:32:1",
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nativeSrc": "932:119:1",
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nativeSrc": "1061:128:1",
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nativeSrc": "1076:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nativeSrc": "1147:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nativeSrc": "1115:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:1",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:1",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:1",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											},
											{
												"body": {
													"nativeSrc": "1267:53:1",
													"nodeType": "YulBlock",
													"src": "1267:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:1"
																		},
																		"nativeSrc": "1289:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:1"
																},
																"nativeSrc": "1277:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:1"
															},
															"nativeSrc": "1277:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:1",
														"nodeType": "YulTypedName",
														"src": "1255:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:1",
														"nodeType": "YulTypedName",
														"src": "1262:3:1",
														"type": ""
													}
												],
												"src": "1202:118:1"
											},
											{
												"body": {
													"nativeSrc": "1424:124:1",
													"nodeType": "YulBlock",
													"src": "1424:124:1",
													"statements": [
														{
															"nativeSrc": "1434:26:1",
															"nodeType": "YulAssignment",
															"src": "1434:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:1"
																},
																"nativeSrc": "1442:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:1"
																		},
																		"nativeSrc": "1523:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:1"
																},
																"nativeSrc": "1470:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:1"
															},
															"nativeSrc": "1470:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:1",
														"nodeType": "YulTypedName",
														"src": "1396:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:1",
														"nodeType": "YulTypedName",
														"src": "1408:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:1",
														"nodeType": "YulTypedName",
														"src": "1419:4:1",
														"type": ""
													}
												],
												"src": "1326:222:1"
											},
											{
												"body": {
													"nativeSrc": "1650:73:1",
													"nodeType": "YulBlock",
													"src": "1650:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1667:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1667:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1672:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1660:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:1"
																},
																"nativeSrc": "1660:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1660:19:1"
															},
															"nativeSrc": "1660:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1660:19:1"
														},
														{
															"nativeSrc": "1688:29:1",
															"nodeType": "YulAssignment",
															"src": "1688:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1707:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1707:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1712:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1712:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1703:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:1"
																},
																"nativeSrc": "1703:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1703:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1688:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1688:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1554:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1622:3:1",
														"nodeType": "YulTypedName",
														"src": "1622:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1627:6:1",
														"nodeType": "YulTypedName",
														"src": "1627:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1638:11:1",
														"nodeType": "YulTypedName",
														"src": "1638:11:1",
														"type": ""
													}
												],
												"src": "1554:169:1"
											},
											{
												"body": {
													"nativeSrc": "1835:72:1",
													"nodeType": "YulBlock",
													"src": "1835:72:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1857:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1857:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1865:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1865:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1853:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1853:3:1"
																		},
																		"nativeSrc": "1853:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1853:14:1"
																	},
																	{
																		"hexValue": "546f6b656e20616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "1869:30:1",
																		"nodeType": "YulLiteral",
																		"src": "1869:30:1",
																		"type": "",
																		"value": "Token address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1846:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1846:6:1"
																},
																"nativeSrc": "1846:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1846:54:1"
															},
															"nativeSrc": "1846:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "1846:54:1"
														}
													]
												},
												"name": "store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
												"nativeSrc": "1729:178:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1827:6:1",
														"nodeType": "YulTypedName",
														"src": "1827:6:1",
														"type": ""
													}
												],
												"src": "1729:178:1"
											},
											{
												"body": {
													"nativeSrc": "2059:220:1",
													"nodeType": "YulBlock",
													"src": "2059:220:1",
													"statements": [
														{
															"nativeSrc": "2069:74:1",
															"nodeType": "YulAssignment",
															"src": "2069:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2135:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2135:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2140:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2140:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2076:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2076:58:1"
																},
																"nativeSrc": "2076:67:1",
																"nodeType": "YulFunctionCall",
																"src": "2076:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2069:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2069:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2241:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2241:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
																	"nativeSrc": "2152:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "2152:88:1"
																},
																"nativeSrc": "2152:93:1",
																"nodeType": "YulFunctionCall",
																"src": "2152:93:1"
															},
															"nativeSrc": "2152:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "2152:93:1"
														},
														{
															"nativeSrc": "2254:19:1",
															"nodeType": "YulAssignment",
															"src": "2254:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2265:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2265:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2270:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2270:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:1"
																},
																"nativeSrc": "2261:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2261:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2254:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2254:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1913:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2047:3:1",
														"nodeType": "YulTypedName",
														"src": "2047:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2055:3:1",
														"nodeType": "YulTypedName",
														"src": "2055:3:1",
														"type": ""
													}
												],
												"src": "1913:366:1"
											},
											{
												"body": {
													"nativeSrc": "2456:248:1",
													"nodeType": "YulBlock",
													"src": "2456:248:1",
													"statements": [
														{
															"nativeSrc": "2466:26:1",
															"nodeType": "YulAssignment",
															"src": "2466:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2478:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2478:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2489:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2489:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2474:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2474:3:1"
																},
																"nativeSrc": "2474:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2474:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2466:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2466:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2513:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2513:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2524:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2524:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2509:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2509:3:1"
																		},
																		"nativeSrc": "2509:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2509:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2532:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2532:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2538:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2528:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2528:3:1"
																		},
																		"nativeSrc": "2528:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2528:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2502:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:1"
																},
																"nativeSrc": "2502:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2502:47:1"
															},
															"nativeSrc": "2502:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2502:47:1"
														},
														{
															"nativeSrc": "2558:139:1",
															"nodeType": "YulAssignment",
															"src": "2558:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2692:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2692:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2566:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "2566:124:1"
																},
																"nativeSrc": "2566:131:1",
																"nodeType": "YulFunctionCall",
																"src": "2566:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2558:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2558:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2285:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2436:9:1",
														"nodeType": "YulTypedName",
														"src": "2436:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2451:4:1",
														"nodeType": "YulTypedName",
														"src": "2451:4:1",
														"type": ""
													}
												],
												"src": "2285:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token address cannot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516110ea3803806110ea83398181016040528101906100329190610292565b30600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c91906102ce565b60405180910390fd5b6100b48161016b60201b60201c565b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610124576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011b90610346565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610366565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061025f82610234565b9050919050565b61026f81610254565b811461027a57600080fd5b50565b60008151905061028c81610266565b92915050565b6000602082840312156102a8576102a761022f565b5b60006102b68482850161027d565b91505092915050565b6102c881610254565b82525050565b60006020820190506102e360008301846102bf565b92915050565b600082825260208201905092915050565b7f546f6b656e20616464726573732063616e6e6f74206265207a65726f00000000600082015250565b6000610330601c836102e9565b915061033b826102fa565b602082019050919050565b6000602082019050818103600083015261035f81610323565b9050919050565b610d75806103756000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f0578063a694fc3a1461010e578063f2fde38b1461012a578063f41322ac1461014657610088565b806316934fc41461008d5780632def6620146100be578063715018a6146100c857806372f702f3146100d2575b600080fd5b6100a760048036038101906100a2919061093b565b610177565b6040516100b5929190610981565b60405180910390f35b6100c661019b565b005b6100d061040e565b005b6100da610422565b6040516100e79190610a09565b60405180910390f35b6100f8610448565b6040516101059190610a33565b60405180910390f35b61012860048036038101906101239190610a7a565b610471565b005b610144600480360381019061013f919061093b565b610686565b005b610160600480360381019061015b919061093b565b61070c565b60405161016e929190610981565b60405180910390f35b60026020528060005260406000206000915090508060000154908060010154905082565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000816000015111610244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023b90610b04565b60405180910390fd5b6000816000015190506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161033a929190610b24565b6020604051808303816000875af1158015610359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037d9190610b85565b6103bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b390610bfe565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75826040516104029190610c1e565b60405180910390a25050565b610416610785565b610420600061080c565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081116104b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ab90610c85565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161051393929190610ca5565b6020604051808303816000875af1158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190610b85565b610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c90610bfe565b60405180910390fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546105e79190610d0b565b9250508190555042600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8260405161067b9190610c1e565b60405180910390a250565b61068e610785565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107005760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106f79190610a33565b60405180910390fd5b6107098161080c565b50565b6000806000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050806000015181602001519250925050915091565b61078d6108d0565b73ffffffffffffffffffffffffffffffffffffffff166107ab610448565b73ffffffffffffffffffffffffffffffffffffffff161461080a576107ce6108d0565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108019190610a33565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610908826108dd565b9050919050565b610918816108fd565b811461092357600080fd5b50565b6000813590506109358161090f565b92915050565b600060208284031215610951576109506108d8565b5b600061095f84828501610926565b91505092915050565b6000819050919050565b61097b81610968565b82525050565b60006040820190506109966000830185610972565b6109a36020830184610972565b9392505050565b6000819050919050565b60006109cf6109ca6109c5846108dd565b6109aa565b6108dd565b9050919050565b60006109e1826109b4565b9050919050565b60006109f3826109d6565b9050919050565b610a03816109e8565b82525050565b6000602082019050610a1e60008301846109fa565b92915050565b610a2d816108fd565b82525050565b6000602082019050610a486000830184610a24565b92915050565b610a5781610968565b8114610a6257600080fd5b50565b600081359050610a7481610a4e565b92915050565b600060208284031215610a9057610a8f6108d8565b5b6000610a9e84828501610a65565b91505092915050565b600082825260208201905092915050565b7f4e6f20746f6b656e7320746f20756e7374616b65000000000000000000000000600082015250565b6000610aee601483610aa7565b9150610af982610ab8565b602082019050919050565b60006020820190508181036000830152610b1d81610ae1565b9050919050565b6000604082019050610b396000830185610a24565b610b466020830184610972565b9392505050565b60008115159050919050565b610b6281610b4d565b8114610b6d57600080fd5b50565b600081519050610b7f81610b59565b92915050565b600060208284031215610b9b57610b9a6108d8565b5b6000610ba984828501610b70565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b6000610be8601583610aa7565b9150610bf382610bb2565b602082019050919050565b60006020820190508181036000830152610c1781610bdb565b9050919050565b6000602082019050610c336000830184610972565b92915050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b6000610c6f601d83610aa7565b9150610c7a82610c39565b602082019050919050565b60006020820190508181036000830152610c9e81610c62565b9050919050565b6000606082019050610cba6000830186610a24565b610cc76020830185610a24565b610cd46040830184610972565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d1682610968565b9150610d2183610968565b9250828201905080821115610d3957610d38610cdc565b5b9291505056fea2646970667358221220f9b7b1002c23ef71d56e4586f824e7d478fe11041ea67dbc2720bbb99835657e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x10EA CODESIZE SUB DUP1 PUSH2 0x10EA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x292 JUMP JUMPDEST ADDRESS PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB4 DUP2 PUSH2 0x16B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x124 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B SWAP1 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x366 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25F DUP3 PUSH2 0x234 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F DUP2 PUSH2 0x254 JUMP JUMPDEST DUP2 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x28C DUP2 PUSH2 0x266 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x2A7 PUSH2 0x22F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B6 DUP5 DUP3 DUP6 ADD PUSH2 0x27D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C8 DUP2 PUSH2 0x254 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20616464726573732063616E6E6F74206265207A65726F00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x330 PUSH1 0x1C DUP4 PUSH2 0x2E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x33B DUP3 PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35F DUP2 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD75 DUP1 PUSH2 0x375 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xF41322AC EQ PUSH2 0x146 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0xD2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP3 SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x19B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD0 PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDA PUSH2 0x422 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP3 SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x244 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23B SWAP1 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33A SWAP3 SWAP2 SWAP1 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x359 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B3 SWAP1 PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP3 PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x416 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x420 PUSH1 0x0 PUSH2 0x80C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AB SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x513 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP1 PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5E7 SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x67B SWAP2 SWAP1 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x68E PUSH2 0x785 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x700 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x709 DUP2 PUSH2 0x80C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x78D PUSH2 0x8D0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7AB PUSH2 0x448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x80A JUMPI PUSH2 0x7CE PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x801 SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x908 DUP3 PUSH2 0x8DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x918 DUP2 PUSH2 0x8FD JUMP JUMPDEST DUP2 EQ PUSH2 0x923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x935 DUP2 PUSH2 0x90F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x951 JUMPI PUSH2 0x950 PUSH2 0x8D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x95F DUP5 DUP3 DUP6 ADD PUSH2 0x926 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x97B DUP2 PUSH2 0x968 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x996 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x972 JUMP JUMPDEST PUSH2 0x9A3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CF PUSH2 0x9CA PUSH2 0x9C5 DUP5 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x8DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E1 DUP3 PUSH2 0x9B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F3 DUP3 PUSH2 0x9D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA03 DUP2 PUSH2 0x9E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA1E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA2D DUP2 PUSH2 0x8FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA48 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA57 DUP2 PUSH2 0x968 JUMP JUMPDEST DUP2 EQ PUSH2 0xA62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA74 DUP2 PUSH2 0xA4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA90 JUMPI PUSH2 0xA8F PUSH2 0x8D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA9E DUP5 DUP3 DUP6 ADD PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F20756E7374616B65000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEE PUSH1 0x14 DUP4 PUSH2 0xAA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xAF9 DUP3 PUSH2 0xAB8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB1D DUP2 PUSH2 0xAE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB39 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xB46 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB62 DUP2 PUSH2 0xB4D JUMP JUMPDEST DUP2 EQ PUSH2 0xB6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB7F DUP2 PUSH2 0xB59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB9A PUSH2 0x8D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBA9 DUP5 DUP3 DUP6 ADD PUSH2 0xB70 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE8 PUSH1 0x15 DUP4 PUSH2 0xAA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xBF3 DUP3 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC17 DUP2 PUSH2 0xBDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC33 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6F PUSH1 0x1D DUP4 PUSH2 0xAA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xC7A DUP3 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC9E DUP2 PUSH2 0xC62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCBA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xCC7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xCD4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD16 DUP3 PUSH2 0x968 JUMP JUMPDEST SWAP2 POP PUSH2 0xD21 DUP4 PUSH2 0x968 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD39 JUMPI PUSH2 0xD38 PUSH2 0xCDC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xB7 0xB1 STOP 0x2C 0x23 0xEF PUSH18 0xD56E4586F824E7D478FE11041EA67DBC2720 0xBB 0xB9 SWAP9 CALLDATALOAD PUSH6 0x7E64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "6966:2359:0:-:0;;;7482:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7009:4;5097:1;5073:26;;:12;:26;;;5069:95;;5150:1;5122:31;;;;;;;;;;;:::i;:::-;;;;;;;;5069:95;5173:32;5192:12;5173:18;;;:32;;:::i;:::-;5025:187;7558:1;7534:26;;:12;:26;;;7526:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;7625:12;7603;;:35;;;;;;;;;;;;;;;;;;7482:163;6966:2359;;6712:187;6785:16;6804:6;;;;;;;;;;;6785:25;;6829:8;6820:6;;:17;;;;;;;;;;;;;;;;;;6883:8;6852:40;;6873:8;6852:40;;;;;;;;;;;;6775:124;6712:187;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:169::-;1638:11;1672:6;1667:3;1660:19;1712:4;1707:3;1703:14;1688:29;;1554:169;;;;:::o;1729:178::-;1869:30;1865:1;1857:6;1853:14;1846:54;1729:178;:::o;1913:366::-;2055:3;2076:67;2140:2;2135:3;2076:67;:::i;:::-;2069:74;;2152:93;2241:3;2152:93;:::i;:::-;2270:2;2265:3;2261:12;2254:19;;1913:366;;;:::o;2285:419::-;2451:4;2489:2;2478:9;2474:18;2466:26;;2538:9;2532:4;2528:20;2524:1;2513:9;2509:17;2502:47;2566:131;2692:4;2566:131;:::i;:::-;2558:139;;2285:419;;;:::o;6966:2359:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_188": {
									"entryPoint": 1925,
									"id": 188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_88": {
									"entryPoint": 2256,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_250": {
									"entryPoint": 2060,
									"id": 250,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getStakeDetails_439": {
									"entryPoint": 1804,
									"id": 439,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@owner_171": {
									"entryPoint": 1096,
									"id": 171,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_202": {
									"entryPoint": 1038,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_357": {
									"entryPoint": 1137,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_271": {
									"entryPoint": 375,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingToken_261": {
									"entryPoint": 1058,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_230": {
									"entryPoint": 1670,
									"id": 230,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_415": {
									"entryPoint": 411,
									"id": 415,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 2554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3237,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2852,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 2569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 2536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2264,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 3129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4": {
									"entryPoint": 2994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346": {
									"entryPoint": 2744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8799:1",
										"nodeType": "YulBlock",
										"src": "0:8799:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "748:87:1",
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nativeSrc": "758:29:1",
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nativeSrc": "767:20:1",
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nativeSrc": "796:33:1",
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nativeSrc": "796:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:1",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:1",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:1",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nativeSrc": "907:263:1",
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:1",
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nativeSrc": "955:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nativeSrc": "955:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nativeSrc": "924:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:1",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nativeSrc": "920:32:1",
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nativeSrc": "917:119:1",
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nativeSrc": "1046:117:1",
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nativeSrc": "1061:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nativeSrc": "1121:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nativeSrc": "1100:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:1",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:1",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:1",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nativeSrc": "1221:32:1",
													"nodeType": "YulBlock",
													"src": "1221:32:1",
													"statements": [
														{
															"nativeSrc": "1231:16:1",
															"nodeType": "YulAssignment",
															"src": "1231:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:1",
																"nodeType": "YulIdentifier",
																"src": "1242:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:1",
														"nodeType": "YulTypedName",
														"src": "1203:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:1",
														"nodeType": "YulTypedName",
														"src": "1213:7:1",
														"type": ""
													}
												],
												"src": "1176:77:1"
											},
											{
												"body": {
													"nativeSrc": "1324:53:1",
													"nodeType": "YulBlock",
													"src": "1324:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:1"
																		},
																		"nativeSrc": "1346:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:1"
																},
																"nativeSrc": "1334:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:1"
															},
															"nativeSrc": "1334:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:1",
														"nodeType": "YulTypedName",
														"src": "1312:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:1",
														"nodeType": "YulTypedName",
														"src": "1319:3:1",
														"type": ""
													}
												],
												"src": "1259:118:1"
											},
											{
												"body": {
													"nativeSrc": "1509:206:1",
													"nodeType": "YulBlock",
													"src": "1509:206:1",
													"statements": [
														{
															"nativeSrc": "1519:26:1",
															"nodeType": "YulAssignment",
															"src": "1519:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1531:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1531:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1542:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1542:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1527:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1527:3:1"
																},
																"nativeSrc": "1527:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1527:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1519:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1599:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1599:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1612:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1612:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1623:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1623:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1608:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1608:3:1"
																		},
																		"nativeSrc": "1608:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1608:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1555:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:1"
																},
																"nativeSrc": "1555:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1555:71:1"
															},
															"nativeSrc": "1555:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1555:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1680:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1680:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1693:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1693:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1704:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1704:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1689:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1689:3:1"
																		},
																		"nativeSrc": "1689:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1689:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1636:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1636:43:1"
																},
																"nativeSrc": "1636:72:1",
																"nodeType": "YulFunctionCall",
																"src": "1636:72:1"
															},
															"nativeSrc": "1636:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "1636:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1473:9:1",
														"nodeType": "YulTypedName",
														"src": "1473:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1485:6:1",
														"nodeType": "YulTypedName",
														"src": "1485:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1493:6:1",
														"nodeType": "YulTypedName",
														"src": "1493:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1504:4:1",
														"nodeType": "YulTypedName",
														"src": "1504:4:1",
														"type": ""
													}
												],
												"src": "1383:332:1"
											},
											{
												"body": {
													"nativeSrc": "1753:28:1",
													"nodeType": "YulBlock",
													"src": "1753:28:1",
													"statements": [
														{
															"nativeSrc": "1763:12:1",
															"nodeType": "YulAssignment",
															"src": "1763:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1770:5:1",
																"nodeType": "YulIdentifier",
																"src": "1770:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1763:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1763:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1721:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1739:5:1",
														"nodeType": "YulTypedName",
														"src": "1739:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1749:3:1",
														"nodeType": "YulTypedName",
														"src": "1749:3:1",
														"type": ""
													}
												],
												"src": "1721:60:1"
											},
											{
												"body": {
													"nativeSrc": "1847:82:1",
													"nodeType": "YulBlock",
													"src": "1847:82:1",
													"statements": [
														{
															"nativeSrc": "1857:66:1",
															"nodeType": "YulAssignment",
															"src": "1857:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1915:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1915:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1897:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1897:17:1"
																				},
																				"nativeSrc": "1897:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1897:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1888:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "1888:8:1"
																		},
																		"nativeSrc": "1888:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1888:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1870:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1870:17:1"
																},
																"nativeSrc": "1870:53:1",
																"nodeType": "YulFunctionCall",
																"src": "1870:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1857:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1857:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1787:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1827:5:1",
														"nodeType": "YulTypedName",
														"src": "1827:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1837:9:1",
														"nodeType": "YulTypedName",
														"src": "1837:9:1",
														"type": ""
													}
												],
												"src": "1787:142:1"
											},
											{
												"body": {
													"nativeSrc": "1995:66:1",
													"nodeType": "YulBlock",
													"src": "1995:66:1",
													"statements": [
														{
															"nativeSrc": "2005:50:1",
															"nodeType": "YulAssignment",
															"src": "2005:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2049:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2049:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2018:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2018:30:1"
																},
																"nativeSrc": "2018:37:1",
																"nodeType": "YulFunctionCall",
																"src": "2018:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2005:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2005:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1935:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1975:5:1",
														"nodeType": "YulTypedName",
														"src": "1975:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1985:9:1",
														"nodeType": "YulTypedName",
														"src": "1985:9:1",
														"type": ""
													}
												],
												"src": "1935:126:1"
											},
											{
												"body": {
													"nativeSrc": "2140:66:1",
													"nodeType": "YulBlock",
													"src": "2140:66:1",
													"statements": [
														{
															"nativeSrc": "2150:50:1",
															"nodeType": "YulAssignment",
															"src": "2150:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2194:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2194:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2163:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2163:30:1"
																},
																"nativeSrc": "2163:37:1",
																"nodeType": "YulFunctionCall",
																"src": "2163:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2150:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2150:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nativeSrc": "2067:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2120:5:1",
														"nodeType": "YulTypedName",
														"src": "2120:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2130:9:1",
														"nodeType": "YulTypedName",
														"src": "2130:9:1",
														"type": ""
													}
												],
												"src": "2067:139:1"
											},
											{
												"body": {
													"nativeSrc": "2290:79:1",
													"nodeType": "YulBlock",
													"src": "2290:79:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2307:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2307:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2356:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2356:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nativeSrc": "2312:43:1",
																			"nodeType": "YulIdentifier",
																			"src": "2312:43:1"
																		},
																		"nativeSrc": "2312:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2312:50:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2300:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2300:6:1"
																},
																"nativeSrc": "2300:63:1",
																"nodeType": "YulFunctionCall",
																"src": "2300:63:1"
															},
															"nativeSrc": "2300:63:1",
															"nodeType": "YulExpressionStatement",
															"src": "2300:63:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nativeSrc": "2212:157:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2278:5:1",
														"nodeType": "YulTypedName",
														"src": "2278:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2285:3:1",
														"nodeType": "YulTypedName",
														"src": "2285:3:1",
														"type": ""
													}
												],
												"src": "2212:157:1"
											},
											{
												"body": {
													"nativeSrc": "2486:137:1",
													"nodeType": "YulBlock",
													"src": "2486:137:1",
													"statements": [
														{
															"nativeSrc": "2496:26:1",
															"nodeType": "YulAssignment",
															"src": "2496:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2508:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2508:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2519:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2519:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2504:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2504:3:1"
																},
																"nativeSrc": "2504:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2504:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2496:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2496:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2589:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2589:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2602:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2602:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2613:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2613:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2598:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2598:3:1"
																		},
																		"nativeSrc": "2598:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2598:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nativeSrc": "2532:56:1",
																	"nodeType": "YulIdentifier",
																	"src": "2532:56:1"
																},
																"nativeSrc": "2532:84:1",
																"nodeType": "YulFunctionCall",
																"src": "2532:84:1"
															},
															"nativeSrc": "2532:84:1",
															"nodeType": "YulExpressionStatement",
															"src": "2532:84:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nativeSrc": "2375:248:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2458:9:1",
														"nodeType": "YulTypedName",
														"src": "2458:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2470:6:1",
														"nodeType": "YulTypedName",
														"src": "2470:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2481:4:1",
														"nodeType": "YulTypedName",
														"src": "2481:4:1",
														"type": ""
													}
												],
												"src": "2375:248:1"
											},
											{
												"body": {
													"nativeSrc": "2694:53:1",
													"nodeType": "YulBlock",
													"src": "2694:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2711:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2711:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2734:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2734:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2716:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "2716:17:1"
																		},
																		"nativeSrc": "2716:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2716:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2704:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2704:6:1"
																},
																"nativeSrc": "2704:37:1",
																"nodeType": "YulFunctionCall",
																"src": "2704:37:1"
															},
															"nativeSrc": "2704:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "2704:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2629:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2682:5:1",
														"nodeType": "YulTypedName",
														"src": "2682:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2689:3:1",
														"nodeType": "YulTypedName",
														"src": "2689:3:1",
														"type": ""
													}
												],
												"src": "2629:118:1"
											},
											{
												"body": {
													"nativeSrc": "2851:124:1",
													"nodeType": "YulBlock",
													"src": "2851:124:1",
													"statements": [
														{
															"nativeSrc": "2861:26:1",
															"nodeType": "YulAssignment",
															"src": "2861:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2873:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2873:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2884:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2884:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2869:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2869:3:1"
																},
																"nativeSrc": "2869:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2869:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2861:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2861:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2941:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2941:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2954:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2954:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2965:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2965:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2950:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2950:3:1"
																		},
																		"nativeSrc": "2950:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2950:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2897:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2897:43:1"
																},
																"nativeSrc": "2897:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2897:71:1"
															},
															"nativeSrc": "2897:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "2897:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2753:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2823:9:1",
														"nodeType": "YulTypedName",
														"src": "2823:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2835:6:1",
														"nodeType": "YulTypedName",
														"src": "2835:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2846:4:1",
														"nodeType": "YulTypedName",
														"src": "2846:4:1",
														"type": ""
													}
												],
												"src": "2753:222:1"
											},
											{
												"body": {
													"nativeSrc": "3024:79:1",
													"nodeType": "YulBlock",
													"src": "3024:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3081:16:1",
																"nodeType": "YulBlock",
																"src": "3081:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3090:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3090:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3093:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3093:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3083:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3083:6:1"
																			},
																			"nativeSrc": "3083:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3083:12:1"
																		},
																		"nativeSrc": "3083:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3083:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3047:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3047:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3072:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3072:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3054:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3054:17:1"
																				},
																				"nativeSrc": "3054:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3054:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3044:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3044:2:1"
																		},
																		"nativeSrc": "3044:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3044:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3037:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3037:6:1"
																},
																"nativeSrc": "3037:43:1",
																"nodeType": "YulFunctionCall",
																"src": "3037:43:1"
															},
															"nativeSrc": "3034:63:1",
															"nodeType": "YulIf",
															"src": "3034:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2981:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3017:5:1",
														"nodeType": "YulTypedName",
														"src": "3017:5:1",
														"type": ""
													}
												],
												"src": "2981:122:1"
											},
											{
												"body": {
													"nativeSrc": "3161:87:1",
													"nodeType": "YulBlock",
													"src": "3161:87:1",
													"statements": [
														{
															"nativeSrc": "3171:29:1",
															"nodeType": "YulAssignment",
															"src": "3171:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3193:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3193:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3180:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3180:12:1"
																},
																"nativeSrc": "3180:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3180:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3171:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3171:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3236:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3236:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3209:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "3209:26:1"
																},
																"nativeSrc": "3209:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3209:33:1"
															},
															"nativeSrc": "3209:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "3209:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3109:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3139:6:1",
														"nodeType": "YulTypedName",
														"src": "3139:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3147:3:1",
														"nodeType": "YulTypedName",
														"src": "3147:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3155:5:1",
														"nodeType": "YulTypedName",
														"src": "3155:5:1",
														"type": ""
													}
												],
												"src": "3109:139:1"
											},
											{
												"body": {
													"nativeSrc": "3320:263:1",
													"nodeType": "YulBlock",
													"src": "3320:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3366:83:1",
																"nodeType": "YulBlock",
																"src": "3366:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3368:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3368:77:1"
																			},
																			"nativeSrc": "3368:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3368:79:1"
																		},
																		"nativeSrc": "3368:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3368:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3341:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3341:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3350:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3350:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3337:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3337:3:1"
																		},
																		"nativeSrc": "3337:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3337:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3362:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3362:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3333:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3333:3:1"
																},
																"nativeSrc": "3333:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3333:32:1"
															},
															"nativeSrc": "3330:119:1",
															"nodeType": "YulIf",
															"src": "3330:119:1"
														},
														{
															"nativeSrc": "3459:117:1",
															"nodeType": "YulBlock",
															"src": "3459:117:1",
															"statements": [
																{
																	"nativeSrc": "3474:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3474:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3488:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3488:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3478:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3478:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3503:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3503:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3538:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3538:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3549:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3549:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3534:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3534:3:1"
																				},
																				"nativeSrc": "3534:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3534:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3558:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3558:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3513:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3513:20:1"
																		},
																		"nativeSrc": "3513:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3513:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3503:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3503:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3254:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3290:9:1",
														"nodeType": "YulTypedName",
														"src": "3290:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3301:7:1",
														"nodeType": "YulTypedName",
														"src": "3301:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3313:6:1",
														"nodeType": "YulTypedName",
														"src": "3313:6:1",
														"type": ""
													}
												],
												"src": "3254:329:1"
											},
											{
												"body": {
													"nativeSrc": "3685:73:1",
													"nodeType": "YulBlock",
													"src": "3685:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3702:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3702:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3707:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3707:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3695:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3695:6:1"
																},
																"nativeSrc": "3695:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3695:19:1"
															},
															"nativeSrc": "3695:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "3695:19:1"
														},
														{
															"nativeSrc": "3723:29:1",
															"nodeType": "YulAssignment",
															"src": "3723:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3742:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3742:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3747:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3747:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3738:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3738:3:1"
																},
																"nativeSrc": "3738:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3738:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3723:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "3723:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3589:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3657:3:1",
														"nodeType": "YulTypedName",
														"src": "3657:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3662:6:1",
														"nodeType": "YulTypedName",
														"src": "3662:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3673:11:1",
														"nodeType": "YulTypedName",
														"src": "3673:11:1",
														"type": ""
													}
												],
												"src": "3589:169:1"
											},
											{
												"body": {
													"nativeSrc": "3870:64:1",
													"nodeType": "YulBlock",
													"src": "3870:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3892:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3892:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3900:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3900:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3888:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3888:3:1"
																		},
																		"nativeSrc": "3888:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3888:14:1"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f20756e7374616b65",
																		"kind": "string",
																		"nativeSrc": "3904:22:1",
																		"nodeType": "YulLiteral",
																		"src": "3904:22:1",
																		"type": "",
																		"value": "No tokens to unstake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3881:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3881:6:1"
																},
																"nativeSrc": "3881:46:1",
																"nodeType": "YulFunctionCall",
																"src": "3881:46:1"
															},
															"nativeSrc": "3881:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "3881:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346",
												"nativeSrc": "3764:170:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3862:6:1",
														"nodeType": "YulTypedName",
														"src": "3862:6:1",
														"type": ""
													}
												],
												"src": "3764:170:1"
											},
											{
												"body": {
													"nativeSrc": "4086:220:1",
													"nodeType": "YulBlock",
													"src": "4086:220:1",
													"statements": [
														{
															"nativeSrc": "4096:74:1",
															"nodeType": "YulAssignment",
															"src": "4096:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4162:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4162:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4167:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4167:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4103:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "4103:58:1"
																},
																"nativeSrc": "4103:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4103:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4096:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4096:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4268:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4268:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346",
																	"nativeSrc": "4179:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "4179:88:1"
																},
																"nativeSrc": "4179:93:1",
																"nodeType": "YulFunctionCall",
																"src": "4179:93:1"
															},
															"nativeSrc": "4179:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "4179:93:1"
														},
														{
															"nativeSrc": "4281:19:1",
															"nodeType": "YulAssignment",
															"src": "4281:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4292:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4292:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4297:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4297:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4288:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4288:3:1"
																},
																"nativeSrc": "4288:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4288:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4281:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4281:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3940:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4074:3:1",
														"nodeType": "YulTypedName",
														"src": "4074:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4082:3:1",
														"nodeType": "YulTypedName",
														"src": "4082:3:1",
														"type": ""
													}
												],
												"src": "3940:366:1"
											},
											{
												"body": {
													"nativeSrc": "4483:248:1",
													"nodeType": "YulBlock",
													"src": "4483:248:1",
													"statements": [
														{
															"nativeSrc": "4493:26:1",
															"nodeType": "YulAssignment",
															"src": "4493:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4505:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4505:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4516:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4516:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4501:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4501:3:1"
																},
																"nativeSrc": "4501:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4501:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4493:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4493:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4540:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4540:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4551:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4551:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4536:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4536:3:1"
																		},
																		"nativeSrc": "4536:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4536:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4559:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4559:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4565:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4565:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4555:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4555:3:1"
																		},
																		"nativeSrc": "4555:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4555:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4529:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:1"
																},
																"nativeSrc": "4529:47:1",
																"nodeType": "YulFunctionCall",
																"src": "4529:47:1"
															},
															"nativeSrc": "4529:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "4529:47:1"
														},
														{
															"nativeSrc": "4585:139:1",
															"nodeType": "YulAssignment",
															"src": "4585:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4719:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4719:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4593:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "4593:124:1"
																},
																"nativeSrc": "4593:131:1",
																"nodeType": "YulFunctionCall",
																"src": "4593:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4585:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4585:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4312:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4463:9:1",
														"nodeType": "YulTypedName",
														"src": "4463:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4478:4:1",
														"nodeType": "YulTypedName",
														"src": "4478:4:1",
														"type": ""
													}
												],
												"src": "4312:419:1"
											},
											{
												"body": {
													"nativeSrc": "4863:206:1",
													"nodeType": "YulBlock",
													"src": "4863:206:1",
													"statements": [
														{
															"nativeSrc": "4873:26:1",
															"nodeType": "YulAssignment",
															"src": "4873:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4885:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4885:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4896:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4896:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4881:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4881:3:1"
																},
																"nativeSrc": "4881:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4881:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4873:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4873:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4953:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4953:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4966:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4966:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4977:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4977:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4962:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4962:3:1"
																		},
																		"nativeSrc": "4962:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4962:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4909:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "4909:43:1"
																},
																"nativeSrc": "4909:71:1",
																"nodeType": "YulFunctionCall",
																"src": "4909:71:1"
															},
															"nativeSrc": "4909:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "4909:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5034:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5034:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5047:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5047:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5058:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5058:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5043:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5043:3:1"
																		},
																		"nativeSrc": "5043:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5043:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4990:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "4990:43:1"
																},
																"nativeSrc": "4990:72:1",
																"nodeType": "YulFunctionCall",
																"src": "4990:72:1"
															},
															"nativeSrc": "4990:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "4990:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4737:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4827:9:1",
														"nodeType": "YulTypedName",
														"src": "4827:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4839:6:1",
														"nodeType": "YulTypedName",
														"src": "4839:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4847:6:1",
														"nodeType": "YulTypedName",
														"src": "4847:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4858:4:1",
														"nodeType": "YulTypedName",
														"src": "4858:4:1",
														"type": ""
													}
												],
												"src": "4737:332:1"
											},
											{
												"body": {
													"nativeSrc": "5117:48:1",
													"nodeType": "YulBlock",
													"src": "5117:48:1",
													"statements": [
														{
															"nativeSrc": "5127:32:1",
															"nodeType": "YulAssignment",
															"src": "5127:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5152:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5152:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5145:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5145:6:1"
																		},
																		"nativeSrc": "5145:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5145:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5138:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5138:6:1"
																},
																"nativeSrc": "5138:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5138:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5127:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5127:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5075:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5099:5:1",
														"nodeType": "YulTypedName",
														"src": "5099:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5109:7:1",
														"nodeType": "YulTypedName",
														"src": "5109:7:1",
														"type": ""
													}
												],
												"src": "5075:90:1"
											},
											{
												"body": {
													"nativeSrc": "5211:76:1",
													"nodeType": "YulBlock",
													"src": "5211:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5265:16:1",
																"nodeType": "YulBlock",
																"src": "5265:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5274:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5274:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5277:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5277:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5267:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5267:6:1"
																			},
																			"nativeSrc": "5267:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5267:12:1"
																		},
																		"nativeSrc": "5267:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5267:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5234:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5234:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5256:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5256:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5241:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "5241:14:1"
																				},
																				"nativeSrc": "5241:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5241:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5231:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5231:2:1"
																		},
																		"nativeSrc": "5231:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5231:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5224:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5224:6:1"
																},
																"nativeSrc": "5224:40:1",
																"nodeType": "YulFunctionCall",
																"src": "5224:40:1"
															},
															"nativeSrc": "5221:60:1",
															"nodeType": "YulIf",
															"src": "5221:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5171:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5204:5:1",
														"nodeType": "YulTypedName",
														"src": "5204:5:1",
														"type": ""
													}
												],
												"src": "5171:116:1"
											},
											{
												"body": {
													"nativeSrc": "5353:77:1",
													"nodeType": "YulBlock",
													"src": "5353:77:1",
													"statements": [
														{
															"nativeSrc": "5363:22:1",
															"nodeType": "YulAssignment",
															"src": "5363:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5378:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5378:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5372:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5372:5:1"
																},
																"nativeSrc": "5372:13:1",
																"nodeType": "YulFunctionCall",
																"src": "5372:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5363:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5363:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5418:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5418:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5394:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "5394:23:1"
																},
																"nativeSrc": "5394:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5394:30:1"
															},
															"nativeSrc": "5394:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5394:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "5293:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5331:6:1",
														"nodeType": "YulTypedName",
														"src": "5331:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5339:3:1",
														"nodeType": "YulTypedName",
														"src": "5339:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5347:5:1",
														"nodeType": "YulTypedName",
														"src": "5347:5:1",
														"type": ""
													}
												],
												"src": "5293:137:1"
											},
											{
												"body": {
													"nativeSrc": "5510:271:1",
													"nodeType": "YulBlock",
													"src": "5510:271:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5556:83:1",
																"nodeType": "YulBlock",
																"src": "5556:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5558:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5558:77:1"
																			},
																			"nativeSrc": "5558:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5558:79:1"
																		},
																		"nativeSrc": "5558:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5558:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5531:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5531:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5540:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5540:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5527:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5527:3:1"
																		},
																		"nativeSrc": "5527:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5527:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5552:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5523:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5523:3:1"
																},
																"nativeSrc": "5523:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5523:32:1"
															},
															"nativeSrc": "5520:119:1",
															"nodeType": "YulIf",
															"src": "5520:119:1"
														},
														{
															"nativeSrc": "5649:125:1",
															"nodeType": "YulBlock",
															"src": "5649:125:1",
															"statements": [
																{
																	"nativeSrc": "5664:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5664:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5678:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5678:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5668:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5668:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5693:71:1",
																	"nodeType": "YulAssignment",
																	"src": "5693:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5736:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5736:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5747:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5747:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5732:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5732:3:1"
																				},
																				"nativeSrc": "5732:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5732:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5756:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5756:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "5703:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "5703:28:1"
																		},
																		"nativeSrc": "5703:61:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5703:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5693:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5693:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5436:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5480:9:1",
														"nodeType": "YulTypedName",
														"src": "5480:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5491:7:1",
														"nodeType": "YulTypedName",
														"src": "5491:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5503:6:1",
														"nodeType": "YulTypedName",
														"src": "5503:6:1",
														"type": ""
													}
												],
												"src": "5436:345:1"
											},
											{
												"body": {
													"nativeSrc": "5893:65:1",
													"nodeType": "YulBlock",
													"src": "5893:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5915:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5923:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5923:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5911:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5911:3:1"
																		},
																		"nativeSrc": "5911:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5911:14:1"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "5927:23:1",
																		"nodeType": "YulLiteral",
																		"src": "5927:23:1",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5904:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5904:6:1"
																},
																"nativeSrc": "5904:47:1",
																"nodeType": "YulFunctionCall",
																"src": "5904:47:1"
															},
															"nativeSrc": "5904:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "5904:47:1"
														}
													]
												},
												"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
												"nativeSrc": "5787:171:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5885:6:1",
														"nodeType": "YulTypedName",
														"src": "5885:6:1",
														"type": ""
													}
												],
												"src": "5787:171:1"
											},
											{
												"body": {
													"nativeSrc": "6110:220:1",
													"nodeType": "YulBlock",
													"src": "6110:220:1",
													"statements": [
														{
															"nativeSrc": "6120:74:1",
															"nodeType": "YulAssignment",
															"src": "6120:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6186:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6186:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6191:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6191:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6127:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "6127:58:1"
																},
																"nativeSrc": "6127:67:1",
																"nodeType": "YulFunctionCall",
																"src": "6127:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6120:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6120:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6292:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6292:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																	"nativeSrc": "6203:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "6203:88:1"
																},
																"nativeSrc": "6203:93:1",
																"nodeType": "YulFunctionCall",
																"src": "6203:93:1"
															},
															"nativeSrc": "6203:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "6203:93:1"
														},
														{
															"nativeSrc": "6305:19:1",
															"nodeType": "YulAssignment",
															"src": "6305:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6316:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6316:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6321:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6321:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6312:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6312:3:1"
																},
																"nativeSrc": "6312:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6312:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6305:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6305:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5964:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6098:3:1",
														"nodeType": "YulTypedName",
														"src": "6098:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6106:3:1",
														"nodeType": "YulTypedName",
														"src": "6106:3:1",
														"type": ""
													}
												],
												"src": "5964:366:1"
											},
											{
												"body": {
													"nativeSrc": "6507:248:1",
													"nodeType": "YulBlock",
													"src": "6507:248:1",
													"statements": [
														{
															"nativeSrc": "6517:26:1",
															"nodeType": "YulAssignment",
															"src": "6517:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6529:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6529:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6540:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6540:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6525:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6525:3:1"
																},
																"nativeSrc": "6525:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6525:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6517:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6517:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6564:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6564:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6575:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6575:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6560:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:1"
																		},
																		"nativeSrc": "6560:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6583:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6583:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6589:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6589:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6579:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6579:3:1"
																		},
																		"nativeSrc": "6579:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6579:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6553:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6553:6:1"
																},
																"nativeSrc": "6553:47:1",
																"nodeType": "YulFunctionCall",
																"src": "6553:47:1"
															},
															"nativeSrc": "6553:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "6553:47:1"
														},
														{
															"nativeSrc": "6609:139:1",
															"nodeType": "YulAssignment",
															"src": "6609:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6743:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6743:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6617:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "6617:124:1"
																},
																"nativeSrc": "6617:131:1",
																"nodeType": "YulFunctionCall",
																"src": "6617:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6609:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6609:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6336:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6487:9:1",
														"nodeType": "YulTypedName",
														"src": "6487:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6502:4:1",
														"nodeType": "YulTypedName",
														"src": "6502:4:1",
														"type": ""
													}
												],
												"src": "6336:419:1"
											},
											{
												"body": {
													"nativeSrc": "6859:124:1",
													"nodeType": "YulBlock",
													"src": "6859:124:1",
													"statements": [
														{
															"nativeSrc": "6869:26:1",
															"nodeType": "YulAssignment",
															"src": "6869:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6881:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6881:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6892:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6892:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6877:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6877:3:1"
																},
																"nativeSrc": "6877:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6877:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6869:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6869:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6949:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6949:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6962:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6962:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6973:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6973:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6958:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6958:3:1"
																		},
																		"nativeSrc": "6958:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6958:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6905:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6905:43:1"
																},
																"nativeSrc": "6905:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6905:71:1"
															},
															"nativeSrc": "6905:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6905:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6761:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6831:9:1",
														"nodeType": "YulTypedName",
														"src": "6831:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6843:6:1",
														"nodeType": "YulTypedName",
														"src": "6843:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6854:4:1",
														"nodeType": "YulTypedName",
														"src": "6854:4:1",
														"type": ""
													}
												],
												"src": "6761:222:1"
											},
											{
												"body": {
													"nativeSrc": "7095:73:1",
													"nodeType": "YulBlock",
													"src": "7095:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7117:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7117:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7125:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7125:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7113:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7113:3:1"
																		},
																		"nativeSrc": "7113:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7113:14:1"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "7129:31:1",
																		"nodeType": "YulLiteral",
																		"src": "7129:31:1",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7106:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7106:6:1"
																},
																"nativeSrc": "7106:55:1",
																"nodeType": "YulFunctionCall",
																"src": "7106:55:1"
															},
															"nativeSrc": "7106:55:1",
															"nodeType": "YulExpressionStatement",
															"src": "7106:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nativeSrc": "6989:179:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7087:6:1",
														"nodeType": "YulTypedName",
														"src": "7087:6:1",
														"type": ""
													}
												],
												"src": "6989:179:1"
											},
											{
												"body": {
													"nativeSrc": "7320:220:1",
													"nodeType": "YulBlock",
													"src": "7320:220:1",
													"statements": [
														{
															"nativeSrc": "7330:74:1",
															"nodeType": "YulAssignment",
															"src": "7330:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7396:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7396:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7401:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7401:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7337:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "7337:58:1"
																},
																"nativeSrc": "7337:67:1",
																"nodeType": "YulFunctionCall",
																"src": "7337:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7330:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7502:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7502:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nativeSrc": "7413:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "7413:88:1"
																},
																"nativeSrc": "7413:93:1",
																"nodeType": "YulFunctionCall",
																"src": "7413:93:1"
															},
															"nativeSrc": "7413:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "7413:93:1"
														},
														{
															"nativeSrc": "7515:19:1",
															"nodeType": "YulAssignment",
															"src": "7515:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7526:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7526:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7531:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7531:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7522:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7522:3:1"
																},
																"nativeSrc": "7522:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7522:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7515:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7515:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7174:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7308:3:1",
														"nodeType": "YulTypedName",
														"src": "7308:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7316:3:1",
														"nodeType": "YulTypedName",
														"src": "7316:3:1",
														"type": ""
													}
												],
												"src": "7174:366:1"
											},
											{
												"body": {
													"nativeSrc": "7717:248:1",
													"nodeType": "YulBlock",
													"src": "7717:248:1",
													"statements": [
														{
															"nativeSrc": "7727:26:1",
															"nodeType": "YulAssignment",
															"src": "7727:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7739:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7739:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7750:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7750:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7735:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7735:3:1"
																},
																"nativeSrc": "7735:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7735:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7727:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7727:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7774:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7774:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7785:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7785:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7770:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7770:3:1"
																		},
																		"nativeSrc": "7770:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7770:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7793:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7793:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7799:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7799:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7789:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7789:3:1"
																		},
																		"nativeSrc": "7789:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7789:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7763:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7763:6:1"
																},
																"nativeSrc": "7763:47:1",
																"nodeType": "YulFunctionCall",
																"src": "7763:47:1"
															},
															"nativeSrc": "7763:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "7763:47:1"
														},
														{
															"nativeSrc": "7819:139:1",
															"nodeType": "YulAssignment",
															"src": "7819:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7953:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7953:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7827:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "7827:124:1"
																},
																"nativeSrc": "7827:131:1",
																"nodeType": "YulFunctionCall",
																"src": "7827:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7819:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7819:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7546:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7697:9:1",
														"nodeType": "YulTypedName",
														"src": "7697:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7712:4:1",
														"nodeType": "YulTypedName",
														"src": "7712:4:1",
														"type": ""
													}
												],
												"src": "7546:419:1"
											},
											{
												"body": {
													"nativeSrc": "8125:288:1",
													"nodeType": "YulBlock",
													"src": "8125:288:1",
													"statements": [
														{
															"nativeSrc": "8135:26:1",
															"nodeType": "YulAssignment",
															"src": "8135:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8147:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8147:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8158:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8158:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8143:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8143:3:1"
																},
																"nativeSrc": "8143:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8143:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8135:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8135:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8215:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8215:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8228:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8228:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8239:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8239:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8224:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:1"
																		},
																		"nativeSrc": "8224:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8224:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8171:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8171:43:1"
																},
																"nativeSrc": "8171:71:1",
																"nodeType": "YulFunctionCall",
																"src": "8171:71:1"
															},
															"nativeSrc": "8171:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "8171:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8296:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8296:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8309:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8309:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8320:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8320:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8305:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8305:3:1"
																		},
																		"nativeSrc": "8305:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8305:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8252:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8252:43:1"
																},
																"nativeSrc": "8252:72:1",
																"nodeType": "YulFunctionCall",
																"src": "8252:72:1"
															},
															"nativeSrc": "8252:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "8252:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8378:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8378:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8391:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8391:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8402:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8402:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8387:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8387:3:1"
																		},
																		"nativeSrc": "8387:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8387:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8334:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8334:43:1"
																},
																"nativeSrc": "8334:72:1",
																"nodeType": "YulFunctionCall",
																"src": "8334:72:1"
															},
															"nativeSrc": "8334:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "8334:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7971:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8081:9:1",
														"nodeType": "YulTypedName",
														"src": "8081:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8093:6:1",
														"nodeType": "YulTypedName",
														"src": "8093:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8101:6:1",
														"nodeType": "YulTypedName",
														"src": "8101:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8109:6:1",
														"nodeType": "YulTypedName",
														"src": "8109:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8120:4:1",
														"nodeType": "YulTypedName",
														"src": "8120:4:1",
														"type": ""
													}
												],
												"src": "7971:442:1"
											},
											{
												"body": {
													"nativeSrc": "8447:152:1",
													"nodeType": "YulBlock",
													"src": "8447:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8464:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8464:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8467:77:1",
																		"nodeType": "YulLiteral",
																		"src": "8467:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8457:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8457:6:1"
																},
																"nativeSrc": "8457:88:1",
																"nodeType": "YulFunctionCall",
																"src": "8457:88:1"
															},
															"nativeSrc": "8457:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "8457:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8561:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8561:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8564:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8564:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8554:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8554:6:1"
																},
																"nativeSrc": "8554:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8554:15:1"
															},
															"nativeSrc": "8554:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8554:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8585:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8585:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8588:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8588:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8578:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8578:6:1"
																},
																"nativeSrc": "8578:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8578:15:1"
															},
															"nativeSrc": "8578:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8578:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8419:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "8419:180:1"
											},
											{
												"body": {
													"nativeSrc": "8649:147:1",
													"nodeType": "YulBlock",
													"src": "8649:147:1",
													"statements": [
														{
															"nativeSrc": "8659:25:1",
															"nodeType": "YulAssignment",
															"src": "8659:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8682:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8682:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8664:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8664:17:1"
																},
																"nativeSrc": "8664:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8664:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8659:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8659:1:1"
																}
															]
														},
														{
															"nativeSrc": "8693:25:1",
															"nodeType": "YulAssignment",
															"src": "8693:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8716:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8716:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8698:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8698:17:1"
																},
																"nativeSrc": "8698:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8698:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8693:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8693:1:1"
																}
															]
														},
														{
															"nativeSrc": "8727:16:1",
															"nodeType": "YulAssignment",
															"src": "8727:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8738:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8738:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8741:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8741:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8734:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8734:3:1"
																},
																"nativeSrc": "8734:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8734:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8727:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8727:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8767:22:1",
																"nodeType": "YulBlock",
																"src": "8767:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8769:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8769:16:1"
																			},
																			"nativeSrc": "8769:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8769:18:1"
																		},
																		"nativeSrc": "8769:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8769:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8759:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8759:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8762:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8762:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8756:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8756:2:1"
																},
																"nativeSrc": "8756:10:1",
																"nodeType": "YulFunctionCall",
																"src": "8756:10:1"
															},
															"nativeSrc": "8753:36:1",
															"nodeType": "YulIf",
															"src": "8753:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8605:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8636:1:1",
														"nodeType": "YulTypedName",
														"src": "8636:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8639:1:1",
														"nodeType": "YulTypedName",
														"src": "8639:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8645:3:1",
														"nodeType": "YulTypedName",
														"src": "8645:3:1",
														"type": ""
													}
												],
												"src": "8605:191:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to unstake\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f0578063a694fc3a1461010e578063f2fde38b1461012a578063f41322ac1461014657610088565b806316934fc41461008d5780632def6620146100be578063715018a6146100c857806372f702f3146100d2575b600080fd5b6100a760048036038101906100a2919061093b565b610177565b6040516100b5929190610981565b60405180910390f35b6100c661019b565b005b6100d061040e565b005b6100da610422565b6040516100e79190610a09565b60405180910390f35b6100f8610448565b6040516101059190610a33565b60405180910390f35b61012860048036038101906101239190610a7a565b610471565b005b610144600480360381019061013f919061093b565b610686565b005b610160600480360381019061015b919061093b565b61070c565b60405161016e929190610981565b60405180910390f35b60026020528060005260406000206000915090508060000154908060010154905082565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000816000015111610244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023b90610b04565b60405180910390fd5b6000816000015190506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161033a929190610b24565b6020604051808303816000875af1158015610359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037d9190610b85565b6103bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b390610bfe565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75826040516104029190610c1e565b60405180910390a25050565b610416610785565b610420600061080c565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081116104b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ab90610c85565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161051393929190610ca5565b6020604051808303816000875af1158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190610b85565b610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c90610bfe565b60405180910390fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546105e79190610d0b565b9250508190555042600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8260405161067b9190610c1e565b60405180910390a250565b61068e610785565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107005760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106f79190610a33565b60405180910390fd5b6107098161080c565b50565b6000806000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050806000015181602001519250925050915091565b61078d6108d0565b73ffffffffffffffffffffffffffffffffffffffff166107ab610448565b73ffffffffffffffffffffffffffffffffffffffff161461080a576107ce6108d0565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108019190610a33565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610908826108dd565b9050919050565b610918816108fd565b811461092357600080fd5b50565b6000813590506109358161090f565b92915050565b600060208284031215610951576109506108d8565b5b600061095f84828501610926565b91505092915050565b6000819050919050565b61097b81610968565b82525050565b60006040820190506109966000830185610972565b6109a36020830184610972565b9392505050565b6000819050919050565b60006109cf6109ca6109c5846108dd565b6109aa565b6108dd565b9050919050565b60006109e1826109b4565b9050919050565b60006109f3826109d6565b9050919050565b610a03816109e8565b82525050565b6000602082019050610a1e60008301846109fa565b92915050565b610a2d816108fd565b82525050565b6000602082019050610a486000830184610a24565b92915050565b610a5781610968565b8114610a6257600080fd5b50565b600081359050610a7481610a4e565b92915050565b600060208284031215610a9057610a8f6108d8565b5b6000610a9e84828501610a65565b91505092915050565b600082825260208201905092915050565b7f4e6f20746f6b656e7320746f20756e7374616b65000000000000000000000000600082015250565b6000610aee601483610aa7565b9150610af982610ab8565b602082019050919050565b60006020820190508181036000830152610b1d81610ae1565b9050919050565b6000604082019050610b396000830185610a24565b610b466020830184610972565b9392505050565b60008115159050919050565b610b6281610b4d565b8114610b6d57600080fd5b50565b600081519050610b7f81610b59565b92915050565b600060208284031215610b9b57610b9a6108d8565b5b6000610ba984828501610b70565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b6000610be8601583610aa7565b9150610bf382610bb2565b602082019050919050565b60006020820190508181036000830152610c1781610bdb565b9050919050565b6000602082019050610c336000830184610972565b92915050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b6000610c6f601d83610aa7565b9150610c7a82610c39565b602082019050919050565b60006020820190508181036000830152610c9e81610c62565b9050919050565b6000606082019050610cba6000830186610a24565b610cc76020830185610a24565b610cd46040830184610972565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d1682610968565b9150610d2183610968565b9250828201905080821115610d3957610d38610cdc565b5b9291505056fea2646970667358221220f9b7b1002c23ef71d56e4586f824e7d478fe11041ea67dbc2720bbb99835657e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xF41322AC EQ PUSH2 0x146 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0xD2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP3 SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x19B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD0 PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDA PUSH2 0x422 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP3 SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x244 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23B SWAP1 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33A SWAP3 SWAP2 SWAP1 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x359 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37D SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B3 SWAP1 PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP3 PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x416 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x420 PUSH1 0x0 PUSH2 0x80C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AB SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x513 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP1 PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5E7 SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x67B SWAP2 SWAP1 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x68E PUSH2 0x785 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x700 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x709 DUP2 PUSH2 0x80C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x78D PUSH2 0x8D0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7AB PUSH2 0x448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x80A JUMPI PUSH2 0x7CE PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x801 SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x908 DUP3 PUSH2 0x8DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x918 DUP2 PUSH2 0x8FD JUMP JUMPDEST DUP2 EQ PUSH2 0x923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x935 DUP2 PUSH2 0x90F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x951 JUMPI PUSH2 0x950 PUSH2 0x8D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x95F DUP5 DUP3 DUP6 ADD PUSH2 0x926 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x97B DUP2 PUSH2 0x968 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x996 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x972 JUMP JUMPDEST PUSH2 0x9A3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CF PUSH2 0x9CA PUSH2 0x9C5 DUP5 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x8DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E1 DUP3 PUSH2 0x9B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F3 DUP3 PUSH2 0x9D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA03 DUP2 PUSH2 0x9E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA1E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA2D DUP2 PUSH2 0x8FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA48 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA57 DUP2 PUSH2 0x968 JUMP JUMPDEST DUP2 EQ PUSH2 0xA62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA74 DUP2 PUSH2 0xA4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA90 JUMPI PUSH2 0xA8F PUSH2 0x8D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA9E DUP5 DUP3 DUP6 ADD PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F20756E7374616B65000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEE PUSH1 0x14 DUP4 PUSH2 0xAA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xAF9 DUP3 PUSH2 0xAB8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB1D DUP2 PUSH2 0xAE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB39 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xB46 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB62 DUP2 PUSH2 0xB4D JUMP JUMPDEST DUP2 EQ PUSH2 0xB6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB7F DUP2 PUSH2 0xB59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB9A PUSH2 0x8D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBA9 DUP5 DUP3 DUP6 ADD PUSH2 0xB70 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE8 PUSH1 0x15 DUP4 PUSH2 0xAA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xBF3 DUP3 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC17 DUP2 PUSH2 0xBDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC33 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6F PUSH1 0x1D DUP4 PUSH2 0xAA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xC7A DUP3 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC9E DUP2 PUSH2 0xC62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCBA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xCC7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0xCD4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x972 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD16 DUP3 PUSH2 0x968 JUMP JUMPDEST SWAP2 POP PUSH2 0xD21 DUP4 PUSH2 0x968 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD39 JUMPI PUSH2 0xD38 PUSH2 0xCDC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xB7 0xB1 STOP 0x2C 0x23 0xEF PUSH18 0xD56E4586F824E7D478FE11041EA67DBC2720 0xBB 0xB9 SWAP9 CALLDATALOAD PUSH6 0x7E64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "6966:2359:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7200:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;8324:551;;;:::i;:::-;;6093:101;;;:::i;:::-;;7022:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5438:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7753:505;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6343:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9088:235;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;7200:39;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8324:551::-;8362:22;8387:6;:18;8394:10;8387:18;;;;;;;;;;;;;;;8362:43;;;;;;;;;;;;;;;;;;;;;;;;;;;8442:1;8423:9;:16;;;:20;8415:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;8479:23;8505:9;:16;;;8479:42;;8599:1;8571:6;:18;8578:10;8571:18;;;;;;;;;;;;;;;:25;;:29;;;;8641:1;8610:6;:18;8617:10;8610:18;;;;;;;;;;;;;;;:28;;:32;;;;8718:12;;;;;;;;;;;:21;;;8740:10;8752:15;8718:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8697:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;8840:10;8831:37;;;8852:15;8831:37;;;;;;:::i;:::-;;;;;;;;8352:523;;8324:551::o;6093:101::-;5331:13;:11;:13::i;:::-;6157:30:::1;6184:1;6157:18;:30::i;:::-;6093:101::o:0;7022:26::-;;;;;;;;;;;;;:::o;5438:85::-;5484:7;5510:6;;;;;;;;;;;5503:13;;5438:85;:::o;7753:505::-;7820:1;7811:6;:10;7803:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;7954:12;;;;;;;;;;;:25;;;7980:10;8000:4;8007:6;7954:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7933:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;8147:6;8118;:18;8125:10;8118:18;;;;;;;;;;;;;;;:25;;;:35;;;;;;;:::i;:::-;;;;;;;;8194:15;8163:6;:18;8170:10;8163:18;;;;;;;;;;;;;;;:28;;:46;;;;8232:10;8225:26;;;8244:6;8225:26;;;;;;:::i;:::-;;;;;;;;7753:505;:::o;6343:215::-;5331:13;:11;:13::i;:::-;6447:1:::1;6427:22;;:8;:22;;::::0;6423:91:::1;;6500:1;6472:31;;;;;;;;;;;:::i;:::-;;;;;;;;6423:91;6523:28;6542:8;6523:18;:28::i;:::-;6343:215:::0;:::o;9088:235::-;9174:14;9190:17;9223:22;9248:6;:12;9255:4;9248:12;;;;;;;;;;;;;;;9223:37;;;;;;;;;;;;;;;;;;;;;;;;;;;9278:9;:16;;;9296:9;:19;;;9270:46;;;;;9088:235;;;:::o;5596:162::-;5666:12;:10;:12::i;:::-;5655:23;;:7;:5;:7::i;:::-;:23;;;5651:101;;5728:12;:10;:12::i;:::-;5701:40;;;;;;;;;;;:::i;:::-;;;;;;;;5651:101;5596:162::o;6712:187::-;6785:16;6804:6;;;;;;;;;;;6785:25;;6829:8;6820:6;;:17;;;;;;;;;;;;;;;;;;6883:8;6852:40;;6873:8;6852:40;;;;;;;;;;;;6775:124;6712:187;:::o;3516:96::-;3569:7;3595:10;3588:17;;3516:96;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:332::-;1504:4;1542:2;1531:9;1527:18;1519:26;;1555:71;1623:1;1612:9;1608:17;1599:6;1555:71;:::i;:::-;1636:72;1704:2;1693:9;1689:18;1680:6;1636:72;:::i;:::-;1383:332;;;;;:::o;1721:60::-;1749:3;1770:5;1763:12;;1721:60;;;:::o;1787:142::-;1837:9;1870:53;1888:34;1897:24;1915:5;1897:24;:::i;:::-;1888:34;:::i;:::-;1870:53;:::i;:::-;1857:66;;1787:142;;;:::o;1935:126::-;1985:9;2018:37;2049:5;2018:37;:::i;:::-;2005:50;;1935:126;;;:::o;2067:139::-;2130:9;2163:37;2194:5;2163:37;:::i;:::-;2150:50;;2067:139;;;:::o;2212:157::-;2312:50;2356:5;2312:50;:::i;:::-;2307:3;2300:63;2212:157;;:::o;2375:248::-;2481:4;2519:2;2508:9;2504:18;2496:26;;2532:84;2613:1;2602:9;2598:17;2589:6;2532:84;:::i;:::-;2375:248;;;;:::o;2629:118::-;2716:24;2734:5;2716:24;:::i;:::-;2711:3;2704:37;2629:118;;:::o;2753:222::-;2846:4;2884:2;2873:9;2869:18;2861:26;;2897:71;2965:1;2954:9;2950:17;2941:6;2897:71;:::i;:::-;2753:222;;;;:::o;2981:122::-;3054:24;3072:5;3054:24;:::i;:::-;3047:5;3044:35;3034:63;;3093:1;3090;3083:12;3034:63;2981:122;:::o;3109:139::-;3155:5;3193:6;3180:20;3171:29;;3209:33;3236:5;3209:33;:::i;:::-;3109:139;;;;:::o;3254:329::-;3313:6;3362:2;3350:9;3341:7;3337:23;3333:32;3330:119;;;3368:79;;:::i;:::-;3330:119;3488:1;3513:53;3558:7;3549:6;3538:9;3534:22;3513:53;:::i;:::-;3503:63;;3459:117;3254:329;;;;:::o;3589:169::-;3673:11;3707:6;3702:3;3695:19;3747:4;3742:3;3738:14;3723:29;;3589:169;;;;:::o;3764:170::-;3904:22;3900:1;3892:6;3888:14;3881:46;3764:170;:::o;3940:366::-;4082:3;4103:67;4167:2;4162:3;4103:67;:::i;:::-;4096:74;;4179:93;4268:3;4179:93;:::i;:::-;4297:2;4292:3;4288:12;4281:19;;3940:366;;;:::o;4312:419::-;4478:4;4516:2;4505:9;4501:18;4493:26;;4565:9;4559:4;4555:20;4551:1;4540:9;4536:17;4529:47;4593:131;4719:4;4593:131;:::i;:::-;4585:139;;4312:419;;;:::o;4737:332::-;4858:4;4896:2;4885:9;4881:18;4873:26;;4909:71;4977:1;4966:9;4962:17;4953:6;4909:71;:::i;:::-;4990:72;5058:2;5047:9;5043:18;5034:6;4990:72;:::i;:::-;4737:332;;;;;:::o;5075:90::-;5109:7;5152:5;5145:13;5138:21;5127:32;;5075:90;;;:::o;5171:116::-;5241:21;5256:5;5241:21;:::i;:::-;5234:5;5231:32;5221:60;;5277:1;5274;5267:12;5221:60;5171:116;:::o;5293:137::-;5347:5;5378:6;5372:13;5363:22;;5394:30;5418:5;5394:30;:::i;:::-;5293:137;;;;:::o;5436:345::-;5503:6;5552:2;5540:9;5531:7;5527:23;5523:32;5520:119;;;5558:79;;:::i;:::-;5520:119;5678:1;5703:61;5756:7;5747:6;5736:9;5732:22;5703:61;:::i;:::-;5693:71;;5649:125;5436:345;;;;:::o;5787:171::-;5927:23;5923:1;5915:6;5911:14;5904:47;5787:171;:::o;5964:366::-;6106:3;6127:67;6191:2;6186:3;6127:67;:::i;:::-;6120:74;;6203:93;6292:3;6203:93;:::i;:::-;6321:2;6316:3;6312:12;6305:19;;5964:366;;;:::o;6336:419::-;6502:4;6540:2;6529:9;6525:18;6517:26;;6589:9;6583:4;6579:20;6575:1;6564:9;6560:17;6553:47;6617:131;6743:4;6617:131;:::i;:::-;6609:139;;6336:419;;;:::o;6761:222::-;6854:4;6892:2;6881:9;6877:18;6869:26;;6905:71;6973:1;6962:9;6958:17;6949:6;6905:71;:::i;:::-;6761:222;;;;:::o;6989:179::-;7129:31;7125:1;7117:6;7113:14;7106:55;6989:179;:::o;7174:366::-;7316:3;7337:67;7401:2;7396:3;7337:67;:::i;:::-;7330:74;;7413:93;7502:3;7413:93;:::i;:::-;7531:2;7526:3;7522:12;7515:19;;7174:366;;;:::o;7546:419::-;7712:4;7750:2;7739:9;7735:18;7727:26;;7799:9;7793:4;7789:20;7785:1;7774:9;7770:17;7763:47;7827:131;7953:4;7827:131;:::i;:::-;7819:139;;7546:419;;;:::o;7971:442::-;8120:4;8158:2;8147:9;8143:18;8135:26;;8171:71;8239:1;8228:9;8224:17;8215:6;8171:71;:::i;:::-;8252:72;8320:2;8309:9;8305:18;8296:6;8252:72;:::i;:::-;8334;8402:2;8391:9;8387:18;8378:6;8334:72;:::i;:::-;7971:442;;;;;;:::o;8419:180::-;8467:77;8464:1;8457:88;8564:4;8561:1;8554:15;8588:4;8585:1;8578:15;8605:191;8645:3;8664:20;8682:1;8664:20;:::i;:::-;8659:25;;8698:20;8716:1;8698:20;:::i;:::-;8693:25;;8741:1;8738;8734:9;8727:16;;8762:3;8759:1;8756:10;8753:36;;;8769:18;;:::i;:::-;8753:36;8605:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "689000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getStakeDetails(address)": "infinite",
								"owner()": "2522",
								"renounceOwnership()": "infinite",
								"stake(uint256)": "infinite",
								"stakes(address)": "infinite",
								"stakingToken()": "infinite",
								"transferOwnership(address)": "infinite",
								"unstake()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6966,
									"end": 9325,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 6966,
									"end": 9325,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6966,
									"end": 9325,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 7482,
									"end": 7645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7013,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 5097,
									"end": 5098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5073,
									"end": 5099,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5073,
									"end": 5099,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5073,
									"end": 5085,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5073,
									"end": 5099,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5073,
									"end": 5099,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5073,
									"end": 5099,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5069,
									"end": 5164,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5069,
									"end": 5164,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5150,
									"end": 5151,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 5122,
									"end": 5153,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5122,
									"end": 5153,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5069,
									"end": 5164,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5069,
									"end": 5164,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5173,
									"end": 5205,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5192,
									"end": 5204,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5173,
									"end": 5191,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 5173,
									"end": 5191,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5173,
									"end": 5191,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 5173,
									"end": 5205,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5173,
									"end": 5205,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 5173,
									"end": 5205,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5173,
									"end": 5205,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5173,
									"end": 5205,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5025,
									"end": 5212,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7558,
									"end": 7559,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7534,
									"end": 7560,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7534,
									"end": 7560,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7534,
									"end": 7546,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7534,
									"end": 7560,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7534,
									"end": 7560,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7534,
									"end": 7560,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 7526,
									"end": 7593,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 7526,
									"end": 7593,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7625,
									"end": 7637,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7603,
									"end": 7615,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7603,
									"end": 7615,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7603,
									"end": 7638,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7482,
									"end": 7645,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6966,
									"end": 9325,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6966,
									"end": 9325,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6712,
									"end": 6899,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6712,
									"end": 6899,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6785,
									"end": 6801,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6804,
									"end": 6810,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6804,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6804,
									"end": 6810,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6804,
									"end": 6810,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6804,
									"end": 6810,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6804,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6804,
									"end": 6810,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6804,
									"end": 6810,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6804,
									"end": 6810,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 6804,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6804,
									"end": 6810,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6785,
									"end": 6810,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6785,
									"end": 6810,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6829,
									"end": 6837,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6820,
									"end": 6826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6820,
									"end": 6826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6820,
									"end": 6837,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6883,
									"end": 6891,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 6892,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6852,
									"end": 6892,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6873,
									"end": 6881,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 6892,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6852,
									"end": 6892,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 6892,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 6852,
									"end": 6892,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6852,
									"end": 6892,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 6892,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6852,
									"end": 6892,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 6892,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 6892,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 6892,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 6892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6852,
									"end": 6892,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 6775,
									"end": 6899,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6712,
									"end": 6899,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6712,
									"end": 6899,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1649,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1670,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1660,
									"end": 1679,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1716,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1710,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1703,
									"end": 1717,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1717,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1729,
									"end": 1907,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1729,
									"end": 1907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1869,
									"end": 1899,
									"name": "PUSH",
									"source": 1,
									"value": "546F6B656E20616464726573732063616E6E6F74206265207A65726F00000000"
								},
								{
									"begin": 1865,
									"end": 1866,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1857,
									"end": 1863,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1853,
									"end": 1867,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1900,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1729,
									"end": 1907,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1729,
									"end": 1907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1913,
									"end": 2279,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1913,
									"end": 2279,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2055,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2076,
									"end": 2143,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2140,
									"end": 2142,
									"name": "PUSH",
									"source": 1,
									"value": "1C"
								},
								{
									"begin": 2135,
									"end": 2138,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2076,
									"end": 2143,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 2076,
									"end": 2143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2076,
									"end": 2143,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2076,
									"end": 2143,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2143,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2143,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2241,
									"end": 2244,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2272,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2265,
									"end": 2268,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2261,
									"end": 2273,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2254,
									"end": 2273,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2254,
									"end": 2273,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1913,
									"end": 2279,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1913,
									"end": 2279,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1913,
									"end": 2279,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1913,
									"end": 2279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2285,
									"end": 2704,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2285,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2451,
									"end": 2455,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2489,
									"end": 2491,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2478,
									"end": 2487,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2474,
									"end": 2492,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2466,
									"end": 2492,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2466,
									"end": 2492,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2538,
									"end": 2547,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2532,
									"end": 2536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2528,
									"end": 2548,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2524,
									"end": 2525,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2513,
									"end": 2522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2509,
									"end": 2526,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2502,
									"end": 2549,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2697,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2692,
									"end": 2696,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2697,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 2566,
									"end": 2697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2697,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2566,
									"end": 2697,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2558,
									"end": 2697,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2558,
									"end": 2697,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2285,
									"end": 2704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2285,
									"end": 2704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2285,
									"end": 2704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2285,
									"end": 2704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6966,
									"end": 9325,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6966,
									"end": 9325,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6966,
									"end": 9325,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6966,
									"end": 9325,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6966,
									"end": 9325,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6966,
									"end": 9325,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6966,
									"end": 9325,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6966,
									"end": 9325,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6966,
									"end": 9325,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9b7b1002c23ef71d56e4586f824e7d478fe11041ea67dbc2720bbb99835657e64736f6c634300081c0033",
									".code": [
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH",
											"source": 0,
											"value": "F41322AC"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH",
											"source": 0,
											"value": "16934FC4"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH",
											"source": 0,
											"value": "2DEF6620"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH",
											"source": 0,
											"value": "72F702F3"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 9325,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7200,
											"end": 7239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7200,
											"end": 7239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7200,
											"end": 7239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8324,
											"end": 8875,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8324,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8324,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8324,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8324,
											"end": 8875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8324,
											"end": 8875,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8324,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8324,
											"end": 8875,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6194,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6093,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6093,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6194,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6194,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7022,
											"end": 7048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7022,
											"end": 7048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5438,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5438,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7753,
											"end": 8258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7753,
											"end": 8258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6343,
											"end": 6558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6343,
											"end": 6558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9088,
											"end": 9323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9088,
											"end": 9323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9088,
											"end": 9323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8324,
											"end": 8875,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8324,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8387,
											"end": 8393,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8394,
											"end": 8404,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8423,
											"end": 8432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8423,
											"end": 8443,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8415,
											"end": 8468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 8415,
											"end": 8468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8479,
											"end": 8502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8505,
											"end": 8514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8505,
											"end": 8521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8505,
											"end": 8521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8505,
											"end": 8521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8479,
											"end": 8521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8479,
											"end": 8521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8599,
											"end": 8600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8571,
											"end": 8577,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8588,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8571,
											"end": 8596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8600,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8571,
											"end": 8600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8610,
											"end": 8616,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8617,
											"end": 8627,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8638,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8610,
											"end": 8638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8642,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8730,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8718,
											"end": 8730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8718,
											"end": 8730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8730,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8718,
											"end": 8730,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8730,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8718,
											"end": 8730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8739,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8718,
											"end": 8739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8739,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 8740,
											"end": 8750,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8752,
											"end": 8767,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8718,
											"end": 8768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8718,
											"end": 8768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8718,
											"end": 8768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 8697,
											"end": 8815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 8697,
											"end": 8815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8840,
											"end": 8850,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "PUSH",
											"source": 0,
											"value": "F5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75"
										},
										{
											"begin": 8852,
											"end": 8867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8831,
											"end": 8868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8868,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8324,
											"end": 8875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6194,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6093,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5331,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5331,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5331,
											"end": 5344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5331,
											"end": 5344,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5331,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6157,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6184,
											"end": 6185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6157,
											"end": 6175,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6157,
											"end": 6187,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6157,
											"end": 6187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6157,
											"end": 6187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5510,
											"end": 5516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5510,
											"end": 5516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5516,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5510,
											"end": 5516,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5516,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5510,
											"end": 5516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7820,
											"end": 7821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7811,
											"end": 7817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7811,
											"end": 7821,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7803,
											"end": 7855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7803,
											"end": 7855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7954,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7954,
											"end": 7966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 7966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 7966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7954,
											"end": 7966,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 7966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 7966,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7954,
											"end": 7966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 7979,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7954,
											"end": 7979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 7979,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 7980,
											"end": 7990,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8000,
											"end": 8004,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8007,
											"end": 8013,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 7954,
											"end": 8014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 7954,
											"end": 8014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 7954,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7933,
											"end": 8061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7933,
											"end": 8061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8147,
											"end": 8153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8125,
											"end": 8135,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8153,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8118,
											"end": 8153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8118,
											"end": 8153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8153,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8118,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8153,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8153,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8194,
											"end": 8209,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8169,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8170,
											"end": 8180,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8163,
											"end": 8181,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8191,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8163,
											"end": 8191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8209,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8232,
											"end": 8242,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "PUSH",
											"source": 0,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 8244,
											"end": 8250,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8225,
											"end": 8251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8225,
											"end": 8251,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5331,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5331,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5331,
											"end": 5344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5331,
											"end": 5344,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5331,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6447,
											"end": 6448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6427,
											"end": 6449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6427,
											"end": 6449,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 6435,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 6449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6427,
											"end": 6449,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6427,
											"end": 6449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6423,
											"end": 6514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6423,
											"end": 6514,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6500,
											"end": 6501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6472,
											"end": 6503,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6472,
											"end": 6503,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6423,
											"end": 6514,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6423,
											"end": 6514,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6542,
											"end": 6550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6523,
											"end": 6541,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6523,
											"end": 6551,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6523,
											"end": 6551,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6343,
											"end": 6558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9174,
											"end": 9188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9190,
											"end": 9207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9248,
											"end": 9254,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9248,
											"end": 9260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9255,
											"end": 9259,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9248,
											"end": 9260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9248,
											"end": 9260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9248,
											"end": 9260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9248,
											"end": 9260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9248,
											"end": 9260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9248,
											"end": 9260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9248,
											"end": 9260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9248,
											"end": 9260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9248,
											"end": 9260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9248,
											"end": 9260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9248,
											"end": 9260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9248,
											"end": 9260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9248,
											"end": 9260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9248,
											"end": 9260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9248,
											"end": 9260,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9278,
											"end": 9287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9278,
											"end": 9294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9278,
											"end": 9294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9278,
											"end": 9294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9296,
											"end": 9305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9296,
											"end": 9315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9296,
											"end": 9315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9296,
											"end": 9315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9270,
											"end": 9316,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9270,
											"end": 9316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9270,
											"end": 9316,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9270,
											"end": 9316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9270,
											"end": 9316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9088,
											"end": 9323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5758,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5596,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5666,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5666,
											"end": 5678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5655,
											"end": 5678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5655,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5655,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5655,
											"end": 5662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5655,
											"end": 5662,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5655,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5655,
											"end": 5678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5655,
											"end": 5678,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5651,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5651,
											"end": 5752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5728,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5728,
											"end": 5738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5728,
											"end": 5740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5728,
											"end": 5740,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5728,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5701,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 5741,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5651,
											"end": 5752,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5651,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6899,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6712,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6785,
											"end": 6801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6804,
											"end": 6810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6804,
											"end": 6810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6804,
											"end": 6810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6804,
											"end": 6810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6804,
											"end": 6810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6804,
											"end": 6810,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6804,
											"end": 6810,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6804,
											"end": 6810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6804,
											"end": 6810,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6804,
											"end": 6810,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6804,
											"end": 6810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6785,
											"end": 6810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6785,
											"end": 6810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6883,
											"end": 6891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6852,
											"end": 6892,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6852,
											"end": 6892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6873,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6852,
											"end": 6892,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6852,
											"end": 6892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6852,
											"end": 6892,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 6852,
											"end": 6892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6852,
											"end": 6892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6852,
											"end": 6892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6852,
											"end": 6892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6852,
											"end": 6892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6852,
											"end": 6892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6852,
											"end": 6892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6852,
											"end": 6892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6852,
											"end": 6892,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6775,
											"end": 6899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3516,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3516,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3605,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3516,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3516,
											"end": 3612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1544,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1540,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1623,
											"end": 1624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1621,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1605,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1555,
											"end": 1626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1626,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1555,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1636,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1704,
											"end": 1706,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1702,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1636,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1636,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1636,
											"end": 1708,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1636,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1781,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1721,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1929,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1787,
											"end": 1929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1888,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1897,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1915,
											"end": 1920,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1897,
											"end": 1921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1921,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1897,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1888,
											"end": 1922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1922,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1888,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1870,
											"end": 1923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1923,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1870,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1857,
											"end": 1923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1857,
											"end": 1923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 2061,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1935,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 1994,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2018,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2018,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2018,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2005,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2005,
											"end": 2055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 2061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 2061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 2061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 2061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2206,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2067,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2139,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2194,
											"end": 2199,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2163,
											"end": 2200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2200,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2163,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2212,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2356,
											"end": 2361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2312,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2312,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2375,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2521,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2508,
											"end": 2517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2613,
											"end": 2614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2611,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2532,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2616,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2532,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2623,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2747,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2629,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2734,
											"end": 2739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2716,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2740,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2716,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2975,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2753,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2886,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2873,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2869,
											"end": 2887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2965,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2963,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 2967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2947,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2897,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2968,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2897,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2975,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2975,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3103,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2981,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 3072,
											"end": 3077,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3054,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 3054,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3079,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3034,
											"end": 3097,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3095,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3097,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3034,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3248,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3109,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3160,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3200,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3209,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 3236,
											"end": 3241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3209,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3209,
											"end": 3242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3209,
											"end": 3242,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 3209,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3248,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3583,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3254,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3362,
											"end": 3364,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3350,
											"end": 3359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3341,
											"end": 3348,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3360,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3333,
											"end": 3365,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3449,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 3330,
											"end": 3449,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3368,
											"end": 3447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3368,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3449,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 3330,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3558,
											"end": 3565,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3547,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3513,
											"end": 3566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3566,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3513,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3583,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3583,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3758,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3589,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3673,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3702,
											"end": 3705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3742,
											"end": 3745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3758,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3934,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3764,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3904,
											"end": 3926,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F20746F6B656E7320746F20756E7374616B65000000000000000000000000"
										},
										{
											"begin": 3900,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3898,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3881,
											"end": 3927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3940,
											"end": 4306,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3940,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4167,
											"end": 4169,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4162,
											"end": 4165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4103,
											"end": 4170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4170,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4103,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4268,
											"end": 4271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4179,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4272,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4179,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4292,
											"end": 4295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 4300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 4300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3940,
											"end": 4306,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3940,
											"end": 4306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3940,
											"end": 4306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3940,
											"end": 4306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4731,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4312,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4516,
											"end": 4518,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4505,
											"end": 4514,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 4575,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4540,
											"end": 4549,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4529,
											"end": 4576,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 4719,
											"end": 4723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4593,
											"end": 4724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4724,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 4593,
											"end": 4724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 5069,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4737,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4885,
											"end": 4894,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4881,
											"end": 4899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 4977,
											"end": 4978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4962,
											"end": 4979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 4959,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4909,
											"end": 4980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4980,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 4909,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 5058,
											"end": 5060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5047,
											"end": 5056,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5040,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4990,
											"end": 5062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5062,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 4990,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 5069,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 5069,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 5069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 5069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 5069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 5069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5075,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5157,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5145,
											"end": 5158,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5159,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5127,
											"end": 5159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5127,
											"end": 5159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5287,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5171,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 5256,
											"end": 5261,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5241,
											"end": 5262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5262,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 5241,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5234,
											"end": 5239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5231,
											"end": 5263,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5221,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 5221,
											"end": 5281,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5274,
											"end": 5275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5267,
											"end": 5279,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5221,
											"end": 5281,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 5221,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5293,
											"end": 5430,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5293,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5352,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5394,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 5418,
											"end": 5423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5394,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5394,
											"end": 5424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5394,
											"end": 5424,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 5394,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5293,
											"end": 5430,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5293,
											"end": 5430,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5293,
											"end": 5430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5293,
											"end": 5430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5293,
											"end": 5430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5436,
											"end": 5781,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5436,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5503,
											"end": 5509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5540,
											"end": 5549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5531,
											"end": 5538,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5527,
											"end": 5550,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5555,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5558,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 5558,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5558,
											"end": 5637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5558,
											"end": 5637,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 5558,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 5756,
											"end": 5763,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 5753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5745,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5732,
											"end": 5754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5703,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5703,
											"end": 5764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5703,
											"end": 5764,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 5703,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5649,
											"end": 5774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5436,
											"end": 5781,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5436,
											"end": 5781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5436,
											"end": 5781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5436,
											"end": 5781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5436,
											"end": 5781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5958,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5787,
											"end": 5958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5927,
											"end": 5950,
											"name": "PUSH",
											"source": 1,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 5923,
											"end": 5924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5911,
											"end": 5925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5904,
											"end": 5951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 6330,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5964,
											"end": 6330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6106,
											"end": 6109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6127,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6191,
											"end": 6193,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 6186,
											"end": 6189,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6127,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 6127,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6127,
											"end": 6194,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6127,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6203,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6292,
											"end": 6295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6203,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6203,
											"end": 6296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6203,
											"end": 6296,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6203,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6323,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6316,
											"end": 6319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 6330,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 6330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 6330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 6330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6755,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6336,
											"end": 6755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6540,
											"end": 6542,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6529,
											"end": 6538,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6525,
											"end": 6543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6517,
											"end": 6543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6517,
											"end": 6543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6598,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6587,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 6576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6564,
											"end": 6573,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6560,
											"end": 6577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6743,
											"end": 6747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6617,
											"end": 6748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6748,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6617,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6609,
											"end": 6748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6609,
											"end": 6748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6755,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6755,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6983,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6761,
											"end": 6983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6854,
											"end": 6858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6892,
											"end": 6894,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6877,
											"end": 6895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6869,
											"end": 6895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6869,
											"end": 6895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6973,
											"end": 6974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6962,
											"end": 6971,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6958,
											"end": 6975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6955,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6905,
											"end": 6976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6976,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6905,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6983,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6983,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6989,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7129,
											"end": 7160,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 7125,
											"end": 7126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7117,
											"end": 7123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7113,
											"end": 7127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7106,
											"end": 7161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7540,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 7174,
											"end": 7540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7316,
											"end": 7319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7337,
											"end": 7404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 7401,
											"end": 7403,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 7396,
											"end": 7399,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 7337,
											"end": 7404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7404,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 7337,
											"end": 7404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7413,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 7502,
											"end": 7505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7413,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 7413,
											"end": 7506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7413,
											"end": 7506,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 7413,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7526,
											"end": 7529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7522,
											"end": 7534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7515,
											"end": 7534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7515,
											"end": 7534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7965,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 7546,
											"end": 7965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7712,
											"end": 7716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7750,
											"end": 7752,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7739,
											"end": 7748,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7735,
											"end": 7753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7727,
											"end": 7753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7727,
											"end": 7753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7789,
											"end": 7809,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7785,
											"end": 7786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7770,
											"end": 7787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7763,
											"end": 7810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 7953,
											"end": 7957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 7827,
											"end": 7958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 7958,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 7827,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7819,
											"end": 7958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7819,
											"end": 7958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7965,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7971,
											"end": 8413,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 7971,
											"end": 8413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8120,
											"end": 8124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8160,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8147,
											"end": 8156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8143,
											"end": 8161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8135,
											"end": 8161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8135,
											"end": 8161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8171,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 8239,
											"end": 8240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8228,
											"end": 8237,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8215,
											"end": 8221,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8171,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 8171,
											"end": 8242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8171,
											"end": 8242,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 8171,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 8320,
											"end": 8322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8305,
											"end": 8323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8296,
											"end": 8302,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 8252,
											"end": 8324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8324,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 8252,
											"end": 8324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8334,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 8402,
											"end": 8404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8391,
											"end": 8400,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8378,
											"end": 8384,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8334,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8334,
											"end": 8406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8334,
											"end": 8406,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 8334,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7971,
											"end": 8413,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7971,
											"end": 8413,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7971,
											"end": 8413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7971,
											"end": 8413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7971,
											"end": 8413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7971,
											"end": 8413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7971,
											"end": 8413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8599,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 8419,
											"end": 8599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8467,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8464,
											"end": 8465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8457,
											"end": 8545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8564,
											"end": 8568,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8561,
											"end": 8562,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8554,
											"end": 8569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8588,
											"end": 8592,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8585,
											"end": 8586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8593,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8605,
											"end": 8796,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 8605,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8645,
											"end": 8648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 8682,
											"end": 8683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8664,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8664,
											"end": 8684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8664,
											"end": 8684,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 8664,
											"end": 8684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 8716,
											"end": 8717,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8698,
											"end": 8718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8718,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 8698,
											"end": 8718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 8718,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 8718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 8742,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8738,
											"end": 8739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8734,
											"end": 8743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8727,
											"end": 8743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8727,
											"end": 8743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8762,
											"end": 8765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8756,
											"end": 8766,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8789,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 8753,
											"end": 8789,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 8769,
											"end": 8787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8789,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 8753,
											"end": 8789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8605,
											"end": 8796,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8605,
											"end": 8796,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8605,
											"end": 8796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8605,
											"end": 8796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8605,
											"end": 8796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Contrat_de_Stacking_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getStakeDetails(address)": "f41322ac",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stake(uint256)": "a694fc3a",
							"stakes(address)": "16934fc4",
							"stakingToken()": "72f702f3",
							"transferOwnership(address)": "f2fde38b",
							"unstake()": "2def6620"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getStakeDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"tokenAddress\":\"The address of the ERC20 token contract\"}},\"getStakeDetails(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"amount\":\"The amount of tokens staked\",\"timestamp\":\"The timestamp when the stake started\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"stake(uint256)\":{\"params\":{\"amount\":\"The amount of tokens to stake\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Set the token to be used for staking\"},\"getStakeDetails(address)\":{\"notice\":\"Get the stake details for a user\"},\"stake(uint256)\":{\"notice\":\"Stake a specific amount of tokens\"},\"unstake()\":{\"notice\":\"Unstake all tokens that the user has staked\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contrat_de_Stacking_flattened.sol\":\"GenericStaking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contrat_de_Stacking_flattened.sol\":{\"keccak256\":\"0xfca49531cfb18f1009ebab4abef8402c80a4189894a7ed436130f263ecbf96a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8a283fe6529fe7e7a28e9ff32282747f6cdbfcedb9875a84ec84285ab5cbab\",\"dweb:/ipfs/QmSvk2znsszZfqcHMWKY41sbucoyjbLzTeLK56MW2qbm1n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 112,
								"contract": "Contrat_de_Stacking_flattened.sol:GenericStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 261,
								"contract": "Contrat_de_Stacking_flattened.sol:GenericStaking",
								"label": "stakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 271,
								"contract": "Contrat_de_Stacking_flattened.sol:GenericStaking",
								"label": "stakes",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(Stake)266_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stake)266_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct GenericStaking.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)266_storage"
							},
							"t_struct(Stake)266_storage": {
								"encoding": "inplace",
								"label": "struct GenericStaking.Stake",
								"members": [
									{
										"astId": 263,
										"contract": "Contrat_de_Stacking_flattened.sol:GenericStaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 265,
										"contract": "Contrat_de_Stacking_flattened.sol:GenericStaking",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Set the token to be used for staking"
							},
							"getStakeDetails(address)": {
								"notice": "Get the stake details for a user"
							},
							"stake(uint256)": {
								"notice": "Stake a specific amount of tokens"
							},
							"unstake()": {
								"notice": "Unstake all tokens that the user has staked"
							}
						},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contrat_de_Stacking_flattened.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contrat_de_Stacking_flattened.sol\":{\"keccak256\":\"0xfca49531cfb18f1009ebab4abef8402c80a4189894a7ed436130f263ecbf96a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8a283fe6529fe7e7a28e9ff32282747f6cdbfcedb9875a84ec84285ab5cbab\",\"dweb:/ipfs/QmSvk2znsszZfqcHMWKY41sbucoyjbLzTeLK56MW2qbm1n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contrat_de_Stacking_flattened.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contrat_de_Stacking_flattened.sol\":{\"keccak256\":\"0xfca49531cfb18f1009ebab4abef8402c80a4189894a7ed436130f263ecbf96a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8a283fe6529fe7e7a28e9ff32282747f6cdbfcedb9875a84ec84285ab5cbab\",\"dweb:/ipfs/QmSvk2znsszZfqcHMWKY41sbucoyjbLzTeLK56MW2qbm1n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 112,
								"contract": "Contrat_de_Stacking_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Contrat_de_Stacking_flattened.sol": {
				"ast": {
					"absolutePath": "Contrat_de_Stacking_flattened.sol",
					"exportedSymbols": {
						"Context": [
							106
						],
						"GenericStaking": [
							440
						],
						"IERC20": [
							77
						],
						"Ownable": [
							251
						]
					},
					"id": 441,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "164:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "190:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "272:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "285:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "454:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "479:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "463:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "501:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "485:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "505:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:57:0"
									},
									"src": "448:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "526:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "685:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "710:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "694:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "733:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "717:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "750:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "742:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:63:0"
									},
									"src": "679:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "763:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "842:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "853:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "879:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:9:0"
									},
									"scope": 77,
									"src": "833:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "894:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "997:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "989:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1029:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:9:0"
									},
									"scope": 77,
									"src": "970:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1044:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1271:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1288:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1280:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1300:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1325:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:6:0"
									},
									"scope": 77,
									"src": "1262:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1337:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1615:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1633:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1625:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1648:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1640:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1624:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1680:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1679:9:0"
									},
									"scope": 77,
									"src": "1606:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1695:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2376:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2392:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2384:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2409:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2401:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2383:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2434:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2434:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2433:6:0"
									},
									"scope": 77,
									"src": "2367:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2446:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2757:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2778:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2792:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2784:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2804:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2796:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2829:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2829:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2828:6:0"
									},
									"scope": 77,
									"src": "2748:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 441,
							"src": "262:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "2961:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "2987:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 106,
							"linearizedBaseContracts": [
								106
							],
							"name": "Context",
							"nameLocation": "3502:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "3578:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 84,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3595:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3599:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3595:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 83,
												"id": 86,
												"nodeType": "Return",
												"src": "3588:17:0"
											}
										]
									},
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "3525:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:2:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3569:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3569:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3568:9:0"
									},
									"scope": 106,
									"src": "3516:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "3685:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 93,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3702:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3706:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "3702:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 92,
												"id": 95,
												"nodeType": "Return",
												"src": "3695:15:0"
											}
										]
									},
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "3627:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3635:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3669:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 90,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3669:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3668:16:0"
									},
									"scope": 106,
									"src": "3618:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "3795:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3812:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 101,
												"id": 103,
												"nodeType": "Return",
												"src": "3805:8:0"
											}
										]
									},
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "3732:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3752:2:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "3786:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3785:9:0"
									},
									"scope": 106,
									"src": "3723:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 441,
							"src": "3484:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 107,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3948:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 109,
										"name": "Context",
										"nameLocations": [
											"4492:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 106,
										"src": "4492:7:0"
									},
									"id": 110,
									"nodeType": "InheritanceSpecifier",
									"src": "4492:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 108,
								"nodeType": "StructuredDocumentation",
								"src": "3975:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 251,
							"linearizedBaseContracts": [
								251,
								106
							],
							"name": "Ownable",
							"nameLocation": "4481:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 112,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "4522:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 251,
									"src": "4506:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 111,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4506:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "4535:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 117,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "4631:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4666:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "4658:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4657:17:0"
									},
									"src": "4625:50:0"
								},
								{
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "4681:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 122,
									"name": "OwnableInvalidOwner",
									"nameLocation": "4774:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4802:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "4794:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4794:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4793:15:0"
									},
									"src": "4768:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 128,
									"name": "OwnershipTransferred",
									"nameLocation": "4821:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "4858:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4842:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4889:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4873:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4841:57:0"
									},
									"src": "4815:84:0"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5059:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 134,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "5073:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5097:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5089:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 135,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5089:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5089:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5073:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "IfStatement",
												"src": "5069:95:0",
												"trueBody": {
													"id": 147,
													"nodeType": "Block",
													"src": "5101:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5150:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5142:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 141,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5142:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5142:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 140,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "5122:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5122:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 146,
															"nodeType": "RevertStatement",
															"src": "5115:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 150,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "5192:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 149,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "5173:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5173:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "5173:32:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "4905:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 154,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "5045:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5037:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5036:22:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:0:0"
									},
									"scope": 251,
									"src": "5025:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "5321:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "5331:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5331:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "5331:13:0"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "5354:1:0"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "5218:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 162,
									"name": "onlyOwner",
									"nameLocation": "5309:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5318:2:0"
									},
									"src": "5300:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "5493:30:0",
										"statements": [
											{
												"expression": {
													"id": 168,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "5510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 167,
												"id": 169,
												"nodeType": "Return",
												"src": "5503:13:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "5368:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "5447:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5452:2:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "5484:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5483:9:0"
									},
									"scope": 251,
									"src": "5438:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "5641:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5655:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5655:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 177,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "5666:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5666:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5655:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 186,
												"nodeType": "IfStatement",
												"src": "5651:101:0",
												"trueBody": {
													"id": 185,
													"nodeType": "Block",
													"src": "5680:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 181,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 88,
																			"src": "5728:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5728:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 180,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 117,
																	"src": "5701:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5701:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 184,
															"nodeType": "RevertStatement",
															"src": "5694:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "5529:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "5605:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5616:2:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5641:0:0"
									},
									"scope": 251,
									"src": "5596:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "6147:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6184:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6176:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 195,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6176:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6176:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 194,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "6157:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6157:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "6157:30:0"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "5764:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 192,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 191,
												"name": "onlyOwner",
												"nameLocations": [
													"6137:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "6137:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6137:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "6102:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6119:2:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6147:0:0"
									},
									"scope": 251,
									"src": "6093:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "6413:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 210,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "6427:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6447:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6439:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 211,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6439:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6439:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6427:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 224,
												"nodeType": "IfStatement",
												"src": "6423:91:0",
												"trueBody": {
													"id": 223,
													"nodeType": "Block",
													"src": "6451:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6500:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6492:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 217,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6492:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6492:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 216,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "6472:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6472:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 222,
															"nodeType": "RevertStatement",
															"src": "6465:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6542:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 225,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "6523:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6523:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "6523:28:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "6200:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 208,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 207,
												"name": "onlyOwner",
												"nameLocations": [
													"6403:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "6403:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6403:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "6352:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "6378:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "6370:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6369:18:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6413:0:0"
									},
									"scope": 251,
									"src": "6343:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "6775:124:0",
										"statements": [
											{
												"assignments": [
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "6793:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 249,
														"src": "6785:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 236,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6785:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 239,
												"initialValue": {
													"id": 238,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "6804:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6785:25:0"
											},
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 240,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "6820:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 241,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "6829:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6820:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "6820:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 245,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "6873:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "6883:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 244,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "6852:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6852:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "EmitStatement",
												"src": "6847:45:0"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "6564:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "6721:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "6748:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "6740:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6740:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6739:18:0"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6775:0:0"
									},
									"scope": 251,
									"src": "6712:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 441,
							"src": "4463:2438:0",
							"usedErrors": [
								117,
								122
							],
							"usedEvents": [
								128
							]
						},
						{
							"id": 252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "6938:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"arguments": [
												{
													"id": 256,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "7009:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GenericStaking_$440",
														"typeString": "contract GenericStaking"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_contract$_GenericStaking_$440",
														"typeString": "contract GenericStaking"
													}
												],
												"id": 255,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "7001:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7001:7:0",
													"typeDescriptions": {}
												}
											},
											"id": 257,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "7001:13:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 253,
										"name": "Ownable",
										"nameLocations": [
											"6993:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 251,
										"src": "6993:7:0"
									},
									"id": 258,
									"nodeType": "InheritanceSpecifier",
									"src": "6993:22:0"
								}
							],
							"canonicalName": "GenericStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 440,
							"linearizedBaseContracts": [
								440,
								251,
								106
							],
							"name": "GenericStaking",
							"nameLocation": "6975:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 261,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "7036:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 440,
									"src": "7022:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 260,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 259,
											"name": "IERC20",
											"nameLocations": [
												"7022:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "7022:6:0"
										},
										"referencedDeclaration": 77,
										"src": "7022:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "GenericStaking.Stake",
									"id": 266,
									"members": [
										{
											"constant": false,
											"id": 263,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "7086:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 266,
											"src": "7078:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 262,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7078:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 265,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "7137:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 266,
											"src": "7129:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 264,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7129:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "7062:5:0",
									"nodeType": "StructDefinition",
									"scope": 440,
									"src": "7055:139:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 271,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "7233:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 440,
									"src": "7200:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$266_storage_$",
										"typeString": "mapping(address => struct GenericStaking.Stake)"
									},
									"typeName": {
										"id": 270,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 267,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7208:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7200:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$266_storage_$",
											"typeString": "mapping(address => struct GenericStaking.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 269,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 268,
												"name": "Stake",
												"nameLocations": [
													"7219:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 266,
												"src": "7219:5:0"
											},
											"referencedDeclaration": 266,
											"src": "7219:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$266_storage_ptr",
												"typeString": "struct GenericStaking.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 277,
									"name": "Staked",
									"nameLocation": "7252:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7275:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7259:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7289:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7281:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7281:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7258:38:0"
									},
									"src": "7246:51:0"
								},
								{
									"anonymous": false,
									"eventSelector": "0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75",
									"id": 283,
									"name": "Unstaked",
									"nameLocation": "7308:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7333:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7317:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7317:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7347:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7339:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7339:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7316:38:0"
									},
									"src": "7302:53:0"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "7516:129:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "7534:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7558:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7550:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7550:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7550:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7534:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616464726573732063616e6e6f74206265207a65726f",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7562:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
																"typeString": "literal_string \"Token address cannot be zero\""
															},
															"value": "Token address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
																"typeString": "literal_string \"Token address cannot be zero\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7526:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7526:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7526:67:0"
											},
											{
												"expression": {
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "7603:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 301,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "7625:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 300,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "7618:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7618:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "7603:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7603:35:0"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "7361:116:0",
										"text": "@notice Set the token to be used for staking\n @param tokenAddress The address of the ERC20 token contract"
									},
									"id": 306,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "7502:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "7494:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7493:22:0"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7516:0:0"
									},
									"scope": 440,
									"src": "7482:163:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "7793:465:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "7811:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7820:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7811:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7823:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 312,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7803:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7803:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "7803:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 322,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7980:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7984:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7980:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 326,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8000:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_GenericStaking_$440",
																				"typeString": "contract GenericStaking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_GenericStaking_$440",
																				"typeString": "contract GenericStaking"
																			}
																		],
																		"id": 325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7992:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 324,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7992:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7992:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 328,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "8007:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 320,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "7954:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7967:12:0",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 76,
																"src": "7954:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7954:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8028:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7933:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7933:128:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "7933:128:0"
											},
											{
												"expression": {
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 333,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "8118:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$266_storage_$",
																	"typeString": "mapping(address => struct GenericStaking.Stake storage ref)"
																}
															},
															"id": 336,
															"indexExpression": {
																"expression": {
																	"id": 334,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8125:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8129:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8125:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8118:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$266_storage",
																"typeString": "struct GenericStaking.Stake storage ref"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8137:6:0",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 263,
														"src": "8118:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 338,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "8147:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8118:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "8118:35:0"
											},
											{
												"expression": {
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 341,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "8163:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$266_storage_$",
																	"typeString": "mapping(address => struct GenericStaking.Stake storage ref)"
																}
															},
															"id": 344,
															"indexExpression": {
																"expression": {
																	"id": 342,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8170:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8174:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8170:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8163:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$266_storage",
																"typeString": "struct GenericStaking.Stake storage ref"
															}
														},
														"id": 345,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8182:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 265,
														"src": "8163:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 346,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8194:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8200:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8194:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8163:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "8163:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 351,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8232:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8236:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8232:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "8244:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "8225:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8225:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "EmitStatement",
												"src": "8220:31:0"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "7651:97:0",
										"text": "@notice Stake a specific amount of tokens\n @param amount The amount of tokens to stake"
									},
									"functionSelector": "a694fc3a",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "7762:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7776:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "7768:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7767:16:0"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7793:0:0"
									},
									"scope": 440,
									"src": "7753:505:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "8352:523:0",
										"statements": [
											{
												"assignments": [
													363
												],
												"declarations": [
													{
														"constant": false,
														"id": 363,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "8375:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 414,
														"src": "8362:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$266_memory_ptr",
															"typeString": "struct GenericStaking.Stake"
														},
														"typeName": {
															"id": 362,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 361,
																"name": "Stake",
																"nameLocations": [
																	"8362:5:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 266,
																"src": "8362:5:0"
															},
															"referencedDeclaration": 266,
															"src": "8362:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$266_storage_ptr",
																"typeString": "struct GenericStaking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 368,
												"initialValue": {
													"baseExpression": {
														"id": 364,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "8387:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$266_storage_$",
															"typeString": "mapping(address => struct GenericStaking.Stake storage ref)"
														}
													},
													"id": 367,
													"indexExpression": {
														"expression": {
															"id": 365,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8394:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8398:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8394:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8387:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$266_storage",
														"typeString": "struct GenericStaking.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8362:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 370,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "8423:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$266_memory_ptr",
																		"typeString": "struct GenericStaking.Stake memory"
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8433:6:0",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 263,
																"src": "8423:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8442:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8423:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f20756e7374616b65",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8445:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346",
																"typeString": "literal_string \"No tokens to unstake\""
															},
															"value": "No tokens to unstake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6075d4a731bbd311fec6378ec6ff32dc5640f04f638ff5d0b03e70b2c43d346",
																"typeString": "literal_string \"No tokens to unstake\""
															}
														],
														"id": 369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8415:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8415:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8415:53:0"
											},
											{
												"assignments": [
													378
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "amountToUnstake",
														"nameLocation": "8487:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 414,
														"src": "8479:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 377,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8479:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 381,
												"initialValue": {
													"expression": {
														"id": 379,
														"name": "userStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "8505:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$266_memory_ptr",
															"typeString": "struct GenericStaking.Stake memory"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8515:6:0",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 263,
													"src": "8505:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8479:42:0"
											},
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 382,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "8571:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$266_storage_$",
																	"typeString": "mapping(address => struct GenericStaking.Stake storage ref)"
																}
															},
															"id": 385,
															"indexExpression": {
																"expression": {
																	"id": 383,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8578:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8582:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8578:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8571:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$266_storage",
																"typeString": "struct GenericStaking.Stake storage ref"
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8590:6:0",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 263,
														"src": "8571:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8599:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8571:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "8571:29:0"
											},
											{
												"expression": {
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 390,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "8610:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$266_storage_$",
																	"typeString": "mapping(address => struct GenericStaking.Stake storage ref)"
																}
															},
															"id": 393,
															"indexExpression": {
																"expression": {
																	"id": 391,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8617:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8621:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8617:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8610:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$266_storage",
																"typeString": "struct GenericStaking.Stake storage ref"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8629:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 265,
														"src": "8610:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8641:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8610:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "8610:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 401,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8740:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8744:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8740:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 403,
																	"name": "amountToUnstake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "8752:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 399,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "8718:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8731:8:0",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "8718:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8718:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8782:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8697:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8697:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "8697:118:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 409,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8840:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8844:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8840:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 411,
															"name": "amountToUnstake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "8852:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 408,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "8831:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8831:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 413,
												"nodeType": "EmitStatement",
												"src": "8826:42:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "8264:55:0",
										"text": "@notice Unstake all tokens that the user has staked"
									},
									"functionSelector": "2def6620",
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "8333:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8340:2:0"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8352:0:0"
									},
									"scope": 440,
									"src": "8324:551:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "9213:110:0",
										"statements": [
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "9236:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "9223:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$266_memory_ptr",
															"typeString": "struct GenericStaking.Stake"
														},
														"typeName": {
															"id": 426,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 425,
																"name": "Stake",
																"nameLocations": [
																	"9223:5:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 266,
																"src": "9223:5:0"
															},
															"referencedDeclaration": 266,
															"src": "9223:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$266_storage_ptr",
																"typeString": "struct GenericStaking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 431,
												"initialValue": {
													"baseExpression": {
														"id": 428,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "9248:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$266_storage_$",
															"typeString": "mapping(address => struct GenericStaking.Stake storage ref)"
														}
													},
													"id": 430,
													"indexExpression": {
														"id": 429,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "9255:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9248:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$266_storage",
														"typeString": "struct GenericStaking.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9223:37:0"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 432,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "9278:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$266_memory_ptr",
																	"typeString": "struct GenericStaking.Stake memory"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9288:6:0",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 263,
															"src": "9278:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 434,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "9296:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$266_memory_ptr",
																	"typeString": "struct GenericStaking.Stake memory"
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9306:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 265,
															"src": "9296:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 436,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9277:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 424,
												"id": 437,
												"nodeType": "Return",
												"src": "9270:46:0"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "8881:202:0",
										"text": "@notice Get the stake details for a user\n @param user The address of the user\n @return amount The amount of tokens staked\n @return timestamp The timestamp when the stake started"
									},
									"functionSelector": "f41322ac",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakeDetails",
									"nameLocation": "9097:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "9121:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "9113:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9112:14:0"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9182:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "9174:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "9198:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "9190:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9173:35:0"
									},
									"scope": 440,
									"src": "9088:235:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 441,
							"src": "6966:2359:0",
							"usedErrors": [
								117,
								122
							],
							"usedEvents": [
								128,
								277,
								283
							]
						}
					],
					"src": "164:9161:0"
				},
				"id": 0
			}
		}
	}
}